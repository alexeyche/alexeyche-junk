x<- c("a":"z")
x<- c("a","b","c","d")
x
x[2]
x[1:4]
x[1:3]
x[x>"A"]
x[x>"a"]
x[x>"B"]
x[x>"B"]
u <- x> "a"
u
x > "a"
x[u]
x <- matrix(1:6,2,3)
x
x[1,1]
x[1,
x[1,
]
]
x[1,]
dat <- read.delim("http://figshare.com/media/download/98923/97987")
View(dat)
attach
attach(dat)
cor.test(CAnumber, ZMlength)
cor.test(log(CAnumber+1), log(ZMlength))
shapiro.test(log(CAnumber+1))
cor.test(CAnumber, ZMlength, method = "spearman")
cor.test(CAnumber, ZMlength, method = "kendall")
install.packages("TSA")
library(TSA)
?win
??win
win
win.graph
?win.graph
??win.graph
win.graph(width=4.875, height=2.5,pointsize=8)
graph(width=4.875, height=2.5,pointsize=8)
data(larain)
fix(larain)
dev.new(width=4.875, height=2.5,pointsize=8)
X11(width=4.875, height=2.5,pointsize=8)
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
larain
zlag(larain)
plot(y=larain,x=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(x=larain,ylab='Inches',
xlab='Previous Year Inches')
larain
data(larain); plot(larain,ylab='Inches',xlab='Year',type='o')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
data(color)
fix(color)
str(color)
color
plot(color,ylab='Color Property',xlab='Batch',type='o')
?zlag
?aggregate
data(AirPassengers)
AP <- AirPassengers
class(AP)
aggregate(x)
aggregate(AP)
plot(aggregate(AP))
fix(AP)
?cycle
cycle(AP)
AP
boxplot(AP ~ cycle(AP))
www <- "http://www.massey.ac.nz/~pscowper/ts/Maine.dat"
Maine.month <- read.table(www, header = TRUE)
View(Maine.month)
hist(Maine.month)
View(Maine.month)
View(Maine.month)
Maine.month
attach(Maine.month)
class(Maine.month)
unemploy
class(unemploy)
hist(unemploy)
ts(unemploy, start = c(1996, 1), freq = 12)
?rnorm
?stats
library(help="stats")
GammaDist
?gamma
gamma(10,10)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
setwd("~/my/git/alexeyche-junk/ml/dbn")
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(batch.targets)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_iris.R', echo=TRUE)
fix(model)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm.R', echo=TRUE)
source('~/my/dbn/hinton_code/Autoencoder_Code/iris_classify.R', echo=TRUE)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm.R', echo=TRUE)
source('~/my/dbn/hinton_code/Autoencoder_Code/iris_classify.R', echo=TRUE)
fix(rbm.model)
