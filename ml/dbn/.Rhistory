x<- c("a":"z")
x<- c("a","b","c","d")
x
x[2]
x[1:4]
x[1:3]
x[x>"A"]
x[x>"a"]
x[x>"B"]
x[x>"B"]
u <- x> "a"
u
x > "a"
x[u]
x <- matrix(1:6,2,3)
x
x[1,1]
x[1,
x[1,
]
]
x[1,]
dat <- read.delim("http://figshare.com/media/download/98923/97987")
View(dat)
attach
attach(dat)
cor.test(CAnumber, ZMlength)
cor.test(log(CAnumber+1), log(ZMlength))
shapiro.test(log(CAnumber+1))
cor.test(CAnumber, ZMlength, method = "spearman")
cor.test(CAnumber, ZMlength, method = "kendall")
install.packages("TSA")
library(TSA)
?win
??win
win
win.graph
?win.graph
??win.graph
win.graph(width=4.875, height=2.5,pointsize=8)
graph(width=4.875, height=2.5,pointsize=8)
data(larain)
fix(larain)
dev.new(width=4.875, height=2.5,pointsize=8)
X11(width=4.875, height=2.5,pointsize=8)
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
larain
zlag(larain)
plot(y=larain,x=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(x=larain,ylab='Inches',
xlab='Previous Year Inches')
larain
data(larain); plot(larain,ylab='Inches',xlab='Year',type='o')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
data(color)
fix(color)
str(color)
color
plot(color,ylab='Color Property',xlab='Batch',type='o')
?zlag
?aggregate
data(AirPassengers)
AP <- AirPassengers
class(AP)
aggregate(x)
aggregate(AP)
plot(aggregate(AP))
fix(AP)
?cycle
cycle(AP)
AP
boxplot(AP ~ cycle(AP))
www <- "http://www.massey.ac.nz/~pscowper/ts/Maine.dat"
Maine.month <- read.table(www, header = TRUE)
View(Maine.month)
hist(Maine.month)
View(Maine.month)
View(Maine.month)
Maine.month
attach(Maine.month)
class(Maine.month)
unemploy
class(unemploy)
hist(unemploy)
ts(unemploy, start = c(1996, 1), freq = 12)
?rnorm
?stats
library(help="stats")
GammaDist
?gamma
gamma(10,10)
?svd
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,9,1,3,0,0,2,3,1,9,3), nrow=5,ncol=5)
m
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,0,1,3,0,0,2,3,1,9,3), nrow=5,ncol=5)
m
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,0,1,3,0,0,2,3,1,1,3), nrow=5,ncol=5)
m
sample(10)
?sample
sample.int(10, 5)
sample(1,1)
sample(190,1)
sample(10,10)
sample(10,100)
sample(10,100, replace=TRUE)
source('~/my/git/alexeyche-junk/ml/R/svd.R', echo=TRUE)
m
?svd
svd(m)
str(svd(m))
svd(m, nu=1)
str(svd(m, nu=1))
str(svd(m)
str(svd(m))
str(svd(m))
diag(svd(m)$d)
svd(m)$d
sqrt(diag(svd(m)$d))
str(svd$v)
str(svd(m)$v)
m.d <- svd(m)
m.d
str(m.d)
?svd
source('~/.active-rstudio-document', echo=TRUE)
n^2+n
source('~/.active-rstudio-document', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/R/svd.R', echo=TRUE)
m.d
str(m.d)
#!/usr/bin/RScript
source('rbm.R')
source('sys.R')
source('makebatches.R')
source('dbn_util.R')
set.seed(2)
num.vis <- 10
num.hid <- 15
num.dims <- num.vis
num.cases <- 500
batch.size <- 50
# gen data
data.all <- NULL
for(c in 1:num.cases) {
m <- matrix(0, ncol = num.dims)
p <- sample(seq(0.1,0.9,length.out=10),1)
c <- sample(3,1)
for(j in 1:c) {
rb <- rbinom(10,10,p)
for(i in 1:length(rb)) {
m[rb[i]] = m[rb[i]]+1
}
}
m <- m/max(m)
data.all <- rbind(data.all, m)
}
c(data.b, data.b.t) := makebatches(data = data.all, target.data = data.all, batch.size = batch.size, normalize=FALSE)
num.batches <- dim(data.b)[3]
# init model
train.params = list(e.w = 0.1, e.v = 0.1, e.h = 0.1, w_cost = 0.0002,
init.moment = 0.5, fin.moment = 0.9,
epochs = 1000, cd.iter = 3, persistent = TRUE)
#model <- train_rbm(data.b, train.params, num.hid)
#test <- matrix(0, ncol = num.vis, nrow=100)
#hid_probs <- prop_up(test, model)
#plot(energy_all(test,hid_probs,model), type = 'l')
model <- list(W = array(0.1*rnorm(num.vis*num.hid,mean=0.5,sd=0.3),dim=c(num.vis,num.hid)), # visible units for row, hidden units for col
vis_bias = array(0,dim = c(1,num.vis)),
hid_bias = array(0,dim = c(1,num.hid)),
num.cases = num.cases, batch.size = batch.size)
model$W <- as.matrix(read.table("/home/alexeyche/tmp/W_vals", sep=","))
model$vis_bias <- t(read.table("/home/alexeyche/tmp/vis_bias_vals", sep=","))
model$hid_bias <- t(read.table("/home/alexeyche/tmp/hid_bias_vals", sep=","))
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
setwd("~/my/git/alexeyche-junk/ml/dbn")
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
logstd_ais
log_z_est
log_z_base
logstd_ais
r
logw-mean(logw)
exp(logw-mean(logw))
apply(exp(logw-mean(logw)),2,sd))
apply(exp(logw-mean(logw)),2,sd)
log_z_base <- sum(log(1+exp(base_model$vis_bias))) + (num.hid)*log(2)
log(apply(exp(logw-mean(logw)),2,sd))
mean(logw)
log(numruns)/2
logstd_ais <- log(apply(exp(logw-mean(logw)),2,sd)) + mean(logw) - log(numruns)/2
logstd_ais
log(3)
r
logstd_ais - log(3)
logstd_ais + log(3)
log_z_est
logw
mean(logw)
r
calc_true_log_z(model)
log_est_z
mean(logw) + log_z_base
r + log_z_base
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
log_z_est
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
log_z_est
calc_true_log_z(model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_toy.R', echo=TRUE)
sum.row(hid_probs)
hidmeans
rep.row(hidmeans,batch.size)
dnorm()
dnorm(1)
?dnorm
dnorm(100)
dnorm(seq(-2,2,by=0.1))
log(dnorm(seq(-2,2,by=0.1)))
mean(log(dnorm(seq(-2,2,by=0.1))))
-mean(log(dnorm(seq(-2,2,by=0.1))))
-mean(log(dnorm(seq(-3,3,by=0.01))))
-mean(log(dnorm(seq(-3,3,by=0.01))))
-mean(log(dnorm(seq(-3,4,by=0.01))))
?log
e
e()
exp
exp()
exp(1)
?dnorm
pi()
pi
X <- rnorm(100)
mean(log(X))
?density
density(X)
d <- density(X)
str(d)
d$y
-mean(log(d$y))
View(hid_probs)
cov(x)
cov(X)
sd(X)
var(X)
sqrt(var(X))
H.g <- H.gauss(var(X))
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.
H.x
var(X)
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.x
H.g
H.x <- -mean(d$y*log(d$y))
H.x
H.x <- -sum(d$y*log(d$y))
H.x
H.x <- -d$y*log(d$y)
H.x
H.x <- -mean(log2(d$y))
H.x
H.g <- H.gauss(var(X))
H.g
source('~/.active-rstudio-document', echo=TRUE)
H.x
H.g
?sd
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
H.x <- -mean(log(d$y))
H.x
var(X)
log(2*pi*exp(1))
H.x
log(d$y)
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
log(d$y)
-mean(log(d$y))
d$y
d$x
X
?density
log(d$y)
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.x
mean(log(d$y))
source('~/.active-rstudio-document', echo=TRUE)
H.x
H.g
log(2*pi*exp(1)*(var(X))
log(2*pi*exp(1)*(var(X)))
log(2*pi*exp(1)*(var(X))^2)
log(2*pi*exp(1)*(var(X)))
log2(2*pi*exp(1)*(var(X)))
H.x <- -mean(log2(d$y))
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
H.gauss <- function(var) {
0.5*log(2*pi*exp(1)*(var))
}
source('~/.active-rstudio-document', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
H.x <- -mean(log(d$y))
H.x
-mean(log2(d$y))
-mean(log(d$y))
X <- rnorm(10000000)
-mean(log(d$y))
d <- density(X)
-mean(log(d$y))
?mean
sum(log(d$y))
sum(log(d$y))/10000000
log(d$y)
sum(log(d$y))
length(d$y)
?density
d <- density(X, n =1000)
X <- rnorm(1000)
d <- density(X, n =1000)
d
d$x
d$x -X
d$x
X
d$x
X
d$y
d$x
mean(d$x)
sd(d$x)
sd(X
)
?approx
approx(d$x,d$y,0)
approx(d$x,d$y,c(0,0)
)
approx(d$x,d$y,c(0,0))
p <- approx(d$x,d$y,X)
p
#!/usr/bin/RScript
X <- rnorm(1000)
H.gauss <- function(var) {
0.5*log(2*pi*exp(1)*(var))
}
d <- density(X, n =1000)
p <- approx(d$x,d$y,X)
H.x <- -mean(log(p))
p
log(p)
p$x-X
p <- approx(d$x,d$y,X)$y
H.x <- -mean(log(p))
H.x
H.g <- H.gauss(var(X))
H.g
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
H.g
H.x
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
neg_entropy(X)
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
neg_entropy(X)
x<-X
(x-mean(x))^4
mean((x-mean(x))^4)
mean((x-mean(x))^4)/(var(x)^2)
mean((x-mean(x))^4)/(var(x)^2) - 3
X <- rnorm(10000)^2
plot(X)
sort(X)
plot(sort(X))
X <- rnorm(10000)
plot(sort(X))
X
d <- density(X, n =1000)
p <- approx(d$x,d$y,x)$y
plot(d,p)
p <- approx(d$x,d$y,X)$y
d
p
d
p
x
x[1:100,]
x[seq(1,100),]
x[seq(1,100)]
plot(x[seq(1,100)], d[seq(1,100)])
d[seq(1,100)]
plot(x[seq(1,100)], p[seq(1,100)])
x[seq(1,100)]
source('~/my/git/alexeyche-junk/ml/dbn/nongauss.R', echo=TRUE)
x
d <- density(x, n =1000)
p <- approx(d$x,d$y,x)$y
d
p
x
p
plot(x,p)
source('~/.active-rstudio-document', echo=TRUE)
d <- density(x, n =1000)
p <- approx(d$x,d$y,x)$y
plot(x,p)
excess_kurtosis(x)
kurtosis
