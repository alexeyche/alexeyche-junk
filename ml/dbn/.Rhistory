x<- c("a":"z")
x<- c("a","b","c","d")
x
x[2]
x[1:4]
x[1:3]
x[x>"A"]
x[x>"a"]
x[x>"B"]
x[x>"B"]
u <- x> "a"
u
x > "a"
x[u]
x <- matrix(1:6,2,3)
x
x[1,1]
x[1,
x[1,
]
]
x[1,]
dat <- read.delim("http://figshare.com/media/download/98923/97987")
View(dat)
attach
attach(dat)
cor.test(CAnumber, ZMlength)
cor.test(log(CAnumber+1), log(ZMlength))
shapiro.test(log(CAnumber+1))
cor.test(CAnumber, ZMlength, method = "spearman")
cor.test(CAnumber, ZMlength, method = "kendall")
install.packages("TSA")
library(TSA)
?win
??win
win
win.graph
?win.graph
??win.graph
win.graph(width=4.875, height=2.5,pointsize=8)
graph(width=4.875, height=2.5,pointsize=8)
data(larain)
fix(larain)
dev.new(width=4.875, height=2.5,pointsize=8)
X11(width=4.875, height=2.5,pointsize=8)
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
larain
zlag(larain)
plot(y=larain,x=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(x=larain,ylab='Inches',
xlab='Previous Year Inches')
larain
data(larain); plot(larain,ylab='Inches',xlab='Year',type='o')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
data(color)
fix(color)
str(color)
color
plot(color,ylab='Color Property',xlab='Batch',type='o')
?zlag
?aggregate
data(AirPassengers)
AP <- AirPassengers
class(AP)
aggregate(x)
aggregate(AP)
plot(aggregate(AP))
fix(AP)
?cycle
cycle(AP)
AP
boxplot(AP ~ cycle(AP))
www <- "http://www.massey.ac.nz/~pscowper/ts/Maine.dat"
Maine.month <- read.table(www, header = TRUE)
View(Maine.month)
hist(Maine.month)
View(Maine.month)
View(Maine.month)
Maine.month
attach(Maine.month)
class(Maine.month)
unemploy
class(unemploy)
hist(unemploy)
ts(unemploy, start = c(1996, 1), freq = 12)
?rnorm
?stats
library(help="stats")
GammaDist
?gamma
gamma(10,10)
?svd
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,9,1,3,0,0,2,3,1,9,3), nrow=5,ncol=5)
m
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,0,1,3,0,0,2,3,1,9,3), nrow=5,ncol=5)
m
m <- matrix(c(0,1,0,5,0,0,1,3,4,5,0,1,3,0,0,2,3,1,1,3), nrow=5,ncol=5)
m
sample(10)
?sample
sample.int(10, 5)
sample(1,1)
sample(190,1)
sample(10,10)
sample(10,100)
sample(10,100, replace=TRUE)
source('~/my/git/alexeyche-junk/ml/R/svd.R', echo=TRUE)
m
?svd
svd(m)
str(svd(m))
svd(m, nu=1)
str(svd(m, nu=1))
str(svd(m)
str(svd(m))
str(svd(m))
diag(svd(m)$d)
svd(m)$d
sqrt(diag(svd(m)$d))
str(svd$v)
str(svd(m)$v)
m.d <- svd(m)
m.d
str(m.d)
?svd
source('~/.active-rstudio-document', echo=TRUE)
n^2+n
source('~/.active-rstudio-document', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/R/svd.R', echo=TRUE)
m.d
str(m.d)
betas <- c(seq(0,0.5,by=1e-03), seq(0.5,0.9,by=1e-04), seq(0.9,1,by=1e-05))
betas
length(betas)
setwd("~/my/git/alexeyche-junk/ml/dbn")
source('~/my/git/alexeyche-junk/ml/dbn/rbm_toy.R', echo=TRUE)
v <- rep.row(sigmoid(base_model$vis_bias), numruns)
source('~/.active-rstudio-document', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
v
free_energy.t(v,bb,model)
bb <- betas[1]
free_energy.t(v,bb,model)
free_energy.t.base(v,bb,base_model)
logw <- log_p_k(v, bb, base_model,model)
log_p_k <- function(v, bb, base_model, model) {
free_energy.t.base(v,(1-bb),base_model) + free_energy.t(v,bb,model)
}
logw <- log_p_k(v, bb, base_model,model)
logw
bb
sum.col(log(1+exp(bb * (v %*% model$W + rep.row(model$hid_bias,nrow(v))
)
)
)
log(1+exp(bb * (v %*% model$W + rep.row(model$hid_bias,nrow(v)) )) )
log(2)
logw <- logw - log_p_k(v, bb, base_model, model)
logw
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, model)
v <- sample_bernoulli(v.m)
logw <- logw + log_p_k(v, bb, base_model,model)
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, base_model, model)
v <- sample_bernoulli(v.m)
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, base_model, model)
v <- sample_bernoulli(v.m)
prop_down.t <- function(h, bb, base_model, model) {
sigmoid( (1-bb) * base_model$vis_bias + bb*(h %*% t(model$W) + rep.row(model$vis_bias,nrow(h)) ) )
}
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, base_model, model)
v <- sample_bernoulli(v.m)
h.m
h
h %*% t(model$W)
str(h %*% t(model$W))
rep.row(model$vis_bias,nrow(h))
str(rep.row(model$vis_bias,nrow(h)))
base_model$vis_bias
prop_down.t <- function(h, bb, base_model, model) {
sigmoid( (1-bb) * rep.row(base_model$vis_bias, nrow(h)) + bb*(h %*% t(model$W) + rep.row(model$vis_bias,nrow(h)) ) )
}
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, base_model, model)
v <- sample_bernoulli(v.m)
logw <- logw - log_p_k(v, bb, base_model, model)
logw
logw <- logw + log_p_k(v, bb, base_model,model)
h.m <- prop_up.t(v, bb, model)
h <- sample_bernoulli(h.m)
v.m <- prop_down.t(h, bb, base_model, model)
v <- sample_bernoulli(v.m)
v
logw <- logw - log_p_k(v, bb, base_model, model)
bb
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
logw
var(logw)
bb
cat("var log_w: ", var(logw), " (", i/length(betas),")\n")
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
cat("var log_w: ", var(logw), " (", i/length(betas),")\n")
cat("var log_w: ", var(logw), " (", i/length(betas),")\n")
logw
cat("var log_w: ", var(logw), " (", i/length(betas),")\n")
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
logw
log_p_k(v, bb, base_model,model)
bb
betas[-1]
length(betas)
betas[14503]
seq(2, length(betas)-1)
?numeric
numeric$xmax
double$xmax
.Machine
.Machine$double.xmax
alpha <- max(x) - log(.Machine$double.xmax)/2
x <- 1:100
alpha <- max(x) - log(.Machine$double.xmax)/2
alpha
lgow
logw
logsum(logw)
logsum <- function(x) {
alpha <- max(x) - log(.Machine$double.xmax)/2
alpha + log(sum(exp(x-alpha)))
}
logsum(logw)
log(numruns)
r_AIS <- logsum(logw) - log(numruns)
r_AIS <- logsum(logw) - log(numruns)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
logw
logw <- log_p_k(v, bb, base_model,model)
logw
v
model
base_model
model
log_p_k(v, bb, base_model,model)
v
v.m <- rep.row(sigmoid(base_model$vis_bias), numruns)
v.m
v <- sample_bernoulli(v.m)
log_p_k(v, bb, base_model,model)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_toy.R', echo=TRUE)
daydream(model)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/ais_my2.R', echo=TRUE)
