# prop up
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
cat(data[i,], " - ", round(vis_probs), "\n")
}
}
prediction(data_all,model)
prediction <- function(data, model) {
m <- nrow(data)
for(i in (model$n_delay+1):m) {
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d[,,1] <- data[i,]
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
#hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
cat(data[i,], " - ", round(vis_probs), "\n")
}
}
prediction(data_all,model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
prediction(data_all, model)
data<-data_all
i <- 4
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d[,,1] <- data[i,]
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
vis_probs
d
i <- 5
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d[,,1] <- data[i,]
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
d
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
vis_probs
d
v
vis_probs
sample_bernoulli(vis_probs)
t <- 6
i <- 6
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d[,,1] <- data[i,]
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
cat(data[i,], " - ", round(vis_probs), "\n")
d
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)))
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)) + bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
vis_probs
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)))
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)))
v <- vis_probs
#cat(vis_probs,"\n")
}
v
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:100) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs)))
v <- vis_probs
#cat(vis_probs,"\n")
}
v
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
data <- data_all
i <- 2
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d[,,1] <- data[i,]
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
d
v <- array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
v
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
v
d
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
v
bistar
b_s <- batch_start[((b-1)*batch_size+1):((b-1)*batch_size+batch_size)]
num_cases <- length(b_s)
data <- array(dim=c(num_cases, num_vis,n_delay+1))
data[,,1] <- data_all[b_s,]
for(t in 1:n_delay) {
data[,,t+1] <- data_all[b_s-t,]
}
# calc bias conditional contributions
bistar <- array(0, dim=c(num_cases,num_vis))
bjstar <- array(0, dim=c(num_cases,num_hid))
for (t in 1:n_delay) {
bistar = bistar + data[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + data[,,t+1] %*% model$W_uh[,,t]
}
bistar
data[c(99,100),,1]
data[c(97,99,100),,1]
v <- data[,,1]
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v)) + bjstar)
hid_state <- sample_bernoulli(hid_probs)
hid_state
data <- data_all
m <- nrow(data)
v <- data[1,]
v
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
m <- 30
v <- data[4,]
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
Ñˆ
i
i <- 4
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
i
n_delay
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
d <- array(dim=c(1, model$num_vis,model$n_delay+1))
d
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
d
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
d[,,t]
1:model$n_delay
i
data <- data_all
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
bistar
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
v
v <- data[4,]
v
v <- maitrx(data[4,], nrow=1)
v <- matrix(data[4,], nrow=1)
v
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
#v <- data[,,1]  #array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
#cat(vis_probs,"\n")
}
v
data[4,]
m <- 30
v <- matrix(data[4,], nrow=1)
for(i in (model$n_delay+1):m) {
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
#v <- data[,,1]  #array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
}
cat(sample_bernoulli(vis_probs), "\n")
}
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
batch_start
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
b <- 1
b_s <- batch_start[((b-1)*batch_size+1):((b-1)*batch_size+batch_size)]
num_cases <- length(b_s)
data <- array(dim=c(num_cases, num_vis,n_delay+1))
data[,,1] <- data_all[b_s,]
for(t in 1:n_delay) {
data[,,t+1] <- data_all[b_s-t,]
}
data
dim(data)
data[,,1]
data[,,2]
data[,,3]
data[,,1]
data[,,2]
data[,,3]
data[,,4]
bistar <- array(0, dim=c(num_cases, model$num_vis))
bjstar <- array(0, dim=c(num_cases, model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + model$A[,,t] %*% t(data[,,t+1])
bjstar = bjstar + model$B[,,t] %*% t(data[,,t+1])
}
model$A[,,1]
dim(model$A[,,1])
model$A[,,1] %*% data[,,2]
model$A[,,1] %*% t(data[,,2])
bistar
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
v
model$W %*% t(v)
dim(model$W %*% t(v))
dim(rep.row(model$hid_bias, num_cases))
hid_probs <- sigmoid( model$W %*% t(v) + t(rep.row(model$hid_bias, num_cases)) + bjstar)
hid_probs
pos_W_grad <- t(hid_state) %*% v
pos_vis_bias_grad <- sum.row(t(v)-rep.row(model$vis_bias,num_cases)-bistar)
pos_hid_bias_grad <- sum.row(hid_state)
pos_A_grad <- array(0, dim=c(num_vis,num_vis,n_delay))
pos_B_grad <- array(0, dim=c(num_hid,num_vis,n_delay))
pos_vis_bias_grad <- sum.row(t(v)-t(rep.row(model$vis_bias,num_cases))-bistar)
t<-1
pos_A_grad[,,t] <- (t(v) - rep.row(model$vis_bias, num_cases) - bistar) %*% data[,,t+1]
pos_A_grad[,,t] <- (t(v) - t(rep.row(model$vis_bias, num_cases)) - bistar) %*% data[,,t+1]
h <- hid_state
vis_probs <- sigmoid( h %*% model$W + t(rep.row(model$vis_bias, num_cases)) + t(bistar))
h %*% model$W
dim(h %*% model$W)
vis_probs <- sigmoid( h %*% model$W + rep.row(model$vis_bias, num_cases) + t(bistar))
vis_probs
hid_probs <- sigmoid( model$W %*% t(vis_probs) + t(rep.row(model$hid_bias, num_cases)) + bjstar)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy.R', echo=TRUE)
b_s <- batch_start[((b-1)*batch_size+1):((b-1)*batch_size+batch_size)]
num_cases <- length(b_s)
data <- array(dim=c(num_cases, num_vis,n_delay+1))
data[,,1] <- data_all[b_s,]
for(t in 1:n_delay) {
data[,,t+1] <- data_all[b_s-t,]
}
# calc bias conditional contributions
bistar <- array(0, dim=c(model$num_vis, num_cases))
bjstar <- array(0, dim=c(model$num_hid, num_cases))
for (t in 1:n_delay) {
bistar = bistar + model$A[,,t] %*% t(data[,,t+1])
bjstar = bjstar + model$B[,,t] %*% t(data[,,t+1])
}
# prop up
v <- data[,,1]
hid_probs <- sigmoid( model$W %*% t(v) + t(rep.row(model$hid_bias, num_cases)) + bjstar)
hid_state <- sample_bernoulli(hid_probs)
# calc positive grads
pos_W_grad <- t(hid_state) %*% v
pos_vis_bias_grad <- sum.row(t(v)-t(rep.row(model$vis_bias,num_cases))-bistar)
pos_hid_bias_grad <- sum.row(hid_state)
pos_A_grad <- array(0, dim=c(num_vis,num_vis,n_delay))
pos_B_grad <- array(0, dim=c(num_hid,num_vis,n_delay))
for (t in 1:n_delay) {
pos_A_grad[,,t] <- (t(v) - t(rep.row(model$vis_bias, num_cases)) - bistar) %*% data[,,t+1]
pos_B_grad[,,t] <- t(hid_state) %*% data[,,t+1]
}
hid_stat
hid_state
dim(hid_state)
v
dim(v)
dim(hid_state)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy2.R', echo=TRUE)
data <- data_all
m <- 30
v <- matrix(data[4,], nrow=1)
v
i <- 4
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
bistar
d
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
}
v
v
data[4,]
v <- data[5,]
i <- 5
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
#v <- data[,,1]  #array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
}
v <- matrix(data[4,], nrow=1)
i
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
d
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
d
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
#v <- data[,,1]  #array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
}
v
d
data[,5]
data[5,]
v
prediction <- function(data, model) {
m <- 30
v <- matrix(data[4,], nrow=1)
for(i in (model$n_delay+1):m) {
d <- array(0, dim=c(1, model$num_vis,model$n_delay+1))
for(t in 1:model$n_delay) {
d[,,t+1] <- data[i-t,]
}
bistar <- array(0, dim=c(1,model$num_vis))
bjstar <- array(0, dim=c(1,model$num_hid))
for (t in 1:n_delay) {
bistar = bistar + d[,,t+1] %*% model$W_uv[,,t]
bjstar = bjstar + d[,,t+1] %*% model$W_uh[,,t]
}
# prop up
#v <- data[,,1]  #array(abs(0.001*rnorm(model$num_vis)), dim=c(1,model$num_vis))
for(it in 1:30) {
hid_probs <- sigmoid( v %*% model$W + rep.row(model$hid_bias, nrow(v))+bjstar)
hid_states <- sample_bernoulli(hid_probs)
vis_probs <- sigmoid( hid_states %*% t(model$W) + rep.row(model$vis_bias, nrow(hid_probs))+bistar)
v <- vis_probs
}
cat(sample_bernoulli(vis_probs), "\n")
}
}
prediction(data_all, model)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy2.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/rbm_temp_toy2.R', echo=TRUE)
prediction(data_all, model)
