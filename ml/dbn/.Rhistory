cat("i=",i,"\n")
Sys.sleep(1)
hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
data
for(i in 1:10) {
hid0_states <- sample_bernoulli(hid0_probs)
hid1_probs <- sigmoid(hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
hid1_states <- sample_bernoulli(hid1_probs)
data_probs <- sigmoid(hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
data_states <- sample_bernoulli(data_probs)
gray_plot(data_probs)
cat("i=",i,"\n")
Sys.sleep(1)
hid0_probs <- sigmoid(data_states %*% model$W0 +
hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
test.num <- 50
data <- round(array(runif(batch.size*num.vis), dim = c(batch.size,num.vis)))
hid0_probs <- sigmoid(data %*% (2 * model$W0) + rep.row(model$hid_bias0,batch.size))
for(i in 1:10) {
hid0_states <- sample_bernoulli(hid0_probs)
hid1_probs <- sigmoid(hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
hid1_states <- sample_bernoulli(hid1_probs)
data_probs <- sigmoid(hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
data_states <- sample_bernoulli(data_probs)
gray_plot(data_probs)
cat("i=",i,"\n")
Sys.sleep(1)
hid0_probs <- sigmoid(data_states %*% model$W0 +
hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
daydream <- function(model) {
test.num <- 50
data <- round(array(runif(batch.size*num.vis), dim = c(batch.size,num.vis)))
hid0_probs <- sigmoid(data %*% (model$W0) + rep.row(model$hid_bias0,batch.size))
for(i in 1:10) {
hid0_states <- sample_bernoulli(hid0_probs)
hid1_probs <- sigmoid(hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
hid1_states <- sample_bernoulli(hid1_probs)
data_probs <- sigmoid(hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
data_states <- sample_bernoulli(data_probs)
gray_plot(data_probs)
cat("i=",i,"\n")
Sys.sleep(1)
hid0_probs <- sigmoid(data_states %*% model$W0 +
hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
}
daydream(model)
hid1_probs
gray_plot(hid1_probs)
gray_plot(hid0_probs)
get_gray_plot <- function(data, lims = c(min(data),max(data)) {
gg <- ggplot(melt(data),aes(X1,X2))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="black",high="white",limits=lims)+
coord_equal()
}
gray_plot <- function(data, lims = c(min(data),max(data)) ) {
require(ggplot2)
require(reshape)
get_gray_plot(data, lims)
plot(gg)
}
get_gray_plot <- function(data, lims = c(min(data),max(data)) {
gg <- ggplot(melt(data),aes(X1,X2))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="black",high="white",limits=lims)+
coord_equal()
}
get_gray_plot <- function(data, lims = c(min(data),max(data)) {
gg <- ggplot(melt(data),aes(X1,X2))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="black",high="white",limits=lims)+
coord_equal()
}
get_gray_plot <- function(data, lims = c(min(data),max(data))) {
gg <- ggplot(melt(data),aes(X1,X2))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="black",high="white",limits=lims)+
coord_equal()
}
get_gray_plot <- function(data, lims = c(min(data),max(data))) {
gg <- ggplot(melt(data),aes(X1,X2))+
geom_tile(aes(fill=value))+
scale_fill_gradient(low="black",high="white",limits=lims)+
coord_equal()
return(gg)
}
daydream <- function(model) {
grid.newpage()
pushViewport(viewport(layout = grid.layout(3, 1)))
test.num <- 50
data <- round(array(runif(batch.size*num.vis), dim = c(batch.size,num.vis)))
hid0_probs <- sigmoid(data %*% (model$W0) + rep.row(model$hid_bias0,batch.size))
for(i in 1:10) {
hid0_states <- sample_bernoulli(hid0_probs)
hid1_probs <- sigmoid(hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
hid1_states <- sample_bernoulli(hid1_probs)
data_probs <- sigmoid(hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
data_states <- sample_bernoulli(data_probs)
cat("i=",i,"\n")
hid0_probs <- sigmoid(data_states %*% model$W0 +
hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
# plot
gg0 <- get_gray_plot(hid0_probs)
gg1 <- get_gray_plot(hid1_probs)
gg_data <- get_gray_plot(data_probs)
print(gg0, vp = vplayout(1,1))
print(gg1, vp = vplayout(2,1))
print(gg_data, vp = vplayout(3,1))
Sys.sleep(1)
}
}
daydream(model)
require(ggplot2)
daydream(model)
require(grid)
daydream(model)
vplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)
daydream(model)
source('~/my/git/alexeyche-junk/ml/dbn/dbm.R', echo=TRUE)
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
# e.w <- max(e.w/1.000015,0.00010)
#  e.v <- max(e.w/1.000015,0.00010)
# e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
epochs <- 300
for(epoch in 1:epochs) {
cat("ep #", epoch," e.w:",e.w, " errsum:", errsum, "\n")
errsum <-0
for(b in 1:num.batches) {
data <- data.b[,,b]
e.w <- max(e.w/1.000015,0.00010)
e.v <- max(e.w/1.000015,0.00010)
e.h <- max(e.w/1.000015,0.00010)
c(pos_hid0, pos_hid1) := mean_field(data, model)
negdata_CD1 <- sigmoid(pos_hid0 %*% t(model$W0) + rep.row(model$vis_bias, batch.size))
for(i in 1:cd.iter) {
neg_hid0_states <- sample_bernoulli(neg_hid0_probs)
neg_hid1_probs <- sigmoid(neg_hid0_states %*% model$W1 + rep.row(model$hid_bias1,batch.size))
neg_hid1_states <- sample_bernoulli(neg_hid1_probs)
neg_data_probs <- sigmoid(neg_hid0_states %*% t(model$W0) + rep.row(model$vis_bias,batch.size))
neg_data_states <- sample_bernoulli(neg_data_probs)
neg_hid0_probs <- sigmoid(neg_data_states %*% model$W0 +
neg_hid1_states %*% t(model$W1) + rep.row(model$hid_bias0,batch.size))
}
neg_hid1_probs <- sigmoid(neg_hid0_probs %*% model$W1 + rep.row(model$hid_bias1,batch.size))
err <- sum((data-negdata_CD1)^2)
errsum <- errsum + err
momentum <- fin.moment
if (epoch <= 5) {
momentum <- init.moment
}
W0.inc <- momentum*W0.inc + e.w*( ( t(data) %*% pos_hid0 - t(neg_data_states) %*% neg_hid0_probs)/batch.size - w_cost*model$W0)
W1.inc <- momentum*W1.inc + e.w*( ( t(pos_hid0) %*% pos_hid1 - t(neg_hid0_probs) %*% neg_hid1_probs)/batch.size - w_cost*model$W1)
hid_bias0.inc <- momentum*hid_bias0.inc + e.h*(sum.row(pos_hid0) - sum.row(neg_hid0_probs))/batch.size
hid_bias1.inc <- momentum*hid_bias1.inc + e.h*(sum.row(pos_hid1) - sum.row(neg_hid1_probs))/batch.size
vis_bias.inc <- momentum*vis_bias.inc + e.v*(sum.row(data)-sum.row(neg_data_states))/batch.size
model$W0 <- model$W0 + W0.inc
model$W1 <- model$W1 + W1.inc
model$hid_bias0 <- model$hid_bias0 + hid_bias0.inc
model$hid_bias1 <- model$hid_bias1 + hid_bias1.inc
model$vis_bias <- model$vis_bias + vis_bias.inc
}
}
daydream(model)
