x<- c("a":"z")
x<- c("a","b","c","d")
x
x[2]
x[1:4]
x[1:3]
x[x>"A"]
x[x>"a"]
x[x>"B"]
x[x>"B"]
u <- x> "a"
u
x > "a"
x[u]
x <- matrix(1:6,2,3)
x
x[1,1]
x[1,
x[1,
]
]
x[1,]
dat <- read.delim("http://figshare.com/media/download/98923/97987")
View(dat)
attach
attach(dat)
cor.test(CAnumber, ZMlength)
cor.test(log(CAnumber+1), log(ZMlength))
shapiro.test(log(CAnumber+1))
cor.test(CAnumber, ZMlength, method = "spearman")
cor.test(CAnumber, ZMlength, method = "kendall")
install.packages("TSA")
library(TSA)
?win
??win
win
win.graph
?win.graph
??win.graph
win.graph(width=4.875, height=2.5,pointsize=8)
graph(width=4.875, height=2.5,pointsize=8)
data(larain)
fix(larain)
dev.new(width=4.875, height=2.5,pointsize=8)
X11(width=4.875, height=2.5,pointsize=8)
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
larain
zlag(larain)
plot(y=larain,x=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,x=zlag(larain),ylab='Inches',
xlab='Previous Year Inches')
plot(y=larain,ylab='Inches',
xlab='Previous Year Inches')
plot(x=larain,ylab='Inches',
xlab='Previous Year Inches')
larain
data(larain); plot(larain,ylab='Inches',xlab='Year',type='o')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
plot(y=color,x=zlag(color),ylab='Color Property',
xlab='Previous Batch Color Property')
data(color)
fix(color)
str(color)
color
plot(color,ylab='Color Property',xlab='Batch',type='o')
?zlag
?aggregate
data(AirPassengers)
AP <- AirPassengers
class(AP)
aggregate(x)
aggregate(AP)
plot(aggregate(AP))
fix(AP)
?cycle
cycle(AP)
AP
boxplot(AP ~ cycle(AP))
www <- "http://www.massey.ac.nz/~pscowper/ts/Maine.dat"
Maine.month <- read.table(www, header = TRUE)
View(Maine.month)
hist(Maine.month)
View(Maine.month)
View(Maine.month)
Maine.month
attach(Maine.month)
class(Maine.month)
unemploy
class(unemploy)
hist(unemploy)
ts(unemploy, start = c(1996, 1), freq = 12)
?rnorm
?stats
library(help="stats")
GammaDist
?gamma
gamma(10,10)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
setwd("~/my/git/alexeyche-junk/ml/dbn")
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
model_1$W
fix(model_1)
model_1
model_1$W
model_1$w
fix(model_1)
str(model_1)
str(model_1$model)
model_1 <- model_1$model
batched.hid_probs_1 <- collect_hidden_statistics(model_1,data.b)
str(batched.hid_probs_1)
batched.data <- data.b; model<-model_1
c(num.cases, num.vis, num.batches) := dim(batched.data)
num.hid <- ncol(model$W)
collect_hidden_statistics <- function(model, batched.data) {
c(num.cases, num.vis, num.batches) := dim(batched.data)
num.hid <- ncol(model$W)
batched.hid_probs <- array(0, dim = c(num.cases, num.hid, num.batches))
for(batch in 1:num.batches) {
data <- batched.data[,,batch]
batched.hid_probs[,,batch] <- prop_up(data,model)
}
return(batched.hid_probs)
}
batched.hid_probs_1 <- collect_hidden_statistics(model_1,data.b)
str(batched.hid_probs_1)
num.vis <- 500
num.hid <- 250
train.params = list(e.w = 0.01, e.v = 0.01, e.h = 0.01, w_cost = 0.0002,
init.moment = 0.5, fin.moment = 0.9,
epochs = 20, cd.iter = 1, persistent = TRUE)
model_2 <- train_rbm(batched.hid_probs_1, train.params, num.hid)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm.R', echo=TRUE)
num.vis <- 500
num.hid <- 250
train.params = list(e.w = 0.01, e.v = 0.01, e.h = 0.01, w_cost = 0.0002,
init.moment = 0.5, fin.moment = 0.9,
epochs = 20, cd.iter = 1, persistent = TRUE)
model_2 <- train_rbm(batched.hid_probs_1, train.params, num.hid)
batched.hid_probs_2 <- collect_hidden_statistics(model_2, batched.hid_probs_1)
num.vis <- 250
num.hid <- 10
train.params = list(e.w = 0.01, e.v = 0.01, e.h = 0.01, w_cost = 0.0002,
init.moment = 0.5, fin.moment = 0.9,
epochs = 20, cd.iter = 1, persistent = TRUE)
model_3 <- train_rbm(batch.pos.hid.probs_2, train.params, num.hid)
batched.hid_probs_3 <- collect_hidden_statistics(model_3, batched.hid_probs_2)
plot_tsne <- function(data,target) {
colors = rainbow(length(unique(target)))
names(colors) =  unique(as.character(target))
ecb = function(x,y) {
plot(x,t='n')
text(x,labels=target, col=colors[target])
Sys.sleep(0.1) # for RStudio
}
tsne_dbn = tsne(data, epoch_callback = ecb, perplexity=50)
return(tsne_dbn)
}
unbatch_data <- function(batched.data, maxbatches = 3) {
whole <- NULL
c(num.cases, num.dims, num.batches) := dim(batched.data)
for(batch in 1:maxbatches) {
whole <- rbind(whole, matrix(batched.data[,,batch], nrow=num.cases, ncol=num.dims))
}
return(whole)
}
top_hids <- unbatch_data(batch.pos.hid.probs_3,10)
top_hids.t <- unbatch_data(data.b.t,10)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
top_hids <- unbatch_data(batched.hid_probs_3,10)
top_hids.t <- unbatch_data(data.b.t,10)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
batched.hid_probs_3 <- collect_hidden_statistics(model_3, batched.hid_probs_2)
num.vis <- 250
num.hid <- 10
train.params = list(e.w = 0.01, e.v = 0.01, e.h = 0.01, w_cost = 0.0002,
init.moment = 0.5, fin.moment = 0.9,
epochs = 20, cd.iter = 1, persistent = TRUE)
model_3 <- train_rbm(batched.hid_probs_2, train.params, num.hid)
batched.hid_probs_3 <- collect_hidden_statistics(model_3, batched.hid_probs_2)
top_hids <- unbatch_data(batched.hid_probs_3,10)
top_hids.t <- unbatch_data(data.b.t,10)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
top_hids <- unbatch_data(batched.hid_probs_2,10)
top_hids.t <- unbatch_data(data.b.t,10)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
top_hids <- unbatch_data(batched.hid_probs_3,10)
top_hids.t <- unbatch_data(data.b.t,10)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
unbatch_data <- function(batched.data, start.batch = 1, end.batch = 3) {
whole <- NULL
c(num.cases, num.dims, num.batches) := dim(batched.data)
for(batch in startbatch:maxbatches) {
whole <- rbind(whole, matrix(batched.data[,,batch], nrow=num.cases, ncol=num.dims))
}
return(whole)
}
top_hids <- unbatch_data(batched.hid_probs_3,10,20)
top_hids.t <- unbatch_data(data.b.t,10,20)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
unbatch_data <- function(batched.data, start.batch = 1, end.batch = 3) {
whole <- NULL
c(num.cases, num.dims, num.batches) := dim(batched.data)
for(batch in start.batch:end.batch) {
whole <- rbind(whole, matrix(batched.data[,,batch], nrow=num.cases, ncol=num.dims))
}
return(whole)
}
top_hids <- unbatch_data(batched.hid_probs_3,10,20)
top_hids.t <- unbatch_data(data.b.t,10,20)
tsne_dbn <- plot_tsne(top_hids, top_hids.t)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm_toy.R', echo=TRUE)
daydream(model)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm_toy.R', echo=TRUE)
daydream(model)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm_toy.R', echo=TRUE)
daydream(model)
source('~/my/dbn/hinton_code/Autoencoder_Code/rbm_toy.R', echo=TRUE)
daydream(model)
num.vis <- ncol(data)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/sentim.R', echo=TRUE)
top_hids
