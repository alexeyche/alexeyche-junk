import "extension.proto";

package NDnnProto;

message TDnnOptions {
    optional uint32 Port = 1 [
        (description) = "Input time series port",
        (default_value) = "9090",
        (short_option) = "-p"
    ];

    optional bool Verbose = 2 [
        (description) = "Turn on extra logging",
        (short_option) = "-v"
    ];

    optional string Config = 3 [
        (description) = "Read prototext config from file",
        (short_option) = "-c"
    ];

    optional string InputSpikes = 4 [
        (description) = "Read input spikes and put it on SpikeSequenceNeuron layer",
        (short_option) = "-is"
    ];
    
    optional string InputTimeSeries = 5 [
        (description) = "Read input time series",
        (short_option) = "-it"
    ];
    
    optional string Output = 6 [
        (description) = "Output spikes from simulation",
        (short_option) = "-o"
    ];

    optional string Stat = 7 [
        (description) = "Gather statistics and save in file",
        (short_option) = "-st"
    ];

    optional string Load = 8 [
        (description) = "Load model from file",
        (short_option) = "-l"
    ];
    optional string Save = 9 [
        (description) = "Save model to file",
        (short_option) = "-s"
    ];
    optional string NoLearning = 10 [
        (description) = "Turn off any learning (not working for now)",
        (short_option) = "-nl"
    ];

    optional uint32 Jobs = 11 [
        (description) = "Parallel jobs to run simulation ",
        (default_value) = "8",
        (short_option) = "-j"
    ];
}

message TDumptoolOptions {
    optional string Input = 1 [
        (description) = "Input file",
        (short_option) = "-i"
    ];
}