# Makefile.in generated by automake 1.11.3 from Makefile.am.
# snn_sim/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/snn_sim
pkgincludedir = $(includedir)/snn_sim
pkglibdir = $(libdir)/snn_sim
pkglibexecdir = $(libexecdir)/snn_sim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = $(top_builddir)/bin/snn_sim$(EXEEXT) \
	$(top_builddir)/bin/snn_prep$(EXEEXT) \
	$(top_builddir)/bin/snn_calc$(EXEEXT) \
	$(top_builddir)/bin/snn_postproc$(EXEEXT) \
	$(top_builddir)/bin/snn_filt$(EXEEXT)
subdir = snn_sim
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
__top_builddir__bin_libsnn_sim_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = util/matrix.lo util/util_vector.lo ./util/ini.lo \
	util/util.lo util/spikes_list.lo ./util/util_dlink_list.lo \
	sim/netsim.lo neuron_funcs.lo constants.lo util/io.lo \
	util/mem.lo sim/runtime.lo sim/configure.lo sim/serialize.lo \
	./layers/poisson.lo sim/sim.lo learn/triple_stdp.lo \
	learn/optim.lo learn/res_stdp.lo learn/simple_stdp.lo \
	layers/wta.lo layers/adapt.lo layers/wtaadapt.lo
am___top_builddir__bin_libsnn_sim_la_OBJECTS = $(am__objects_1)
__top_builddir__bin_libsnn_sim_la_OBJECTS =  \
	$(am___top_builddir__bin_libsnn_sim_la_OBJECTS)
__top_builddir__bin_libsnn_sim_la_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) \
	$(__top_builddir__bin_libsnn_sim_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am___top_builddir__bin_snn_calc_OBJECTS =  \
	util/__top_builddir__bin_snn_calc-matrix.$(OBJEXT) \
	util/__top_builddir__bin_snn_calc-util_vector.$(OBJEXT) \
	./util/__top_builddir__bin_snn_calc-ini.$(OBJEXT) \
	util/__top_builddir__bin_snn_calc-util.$(OBJEXT) \
	util/__top_builddir__bin_snn_calc-spikes_list.$(OBJEXT) \
	util/__top_builddir__bin_snn_calc-io.$(OBJEXT) \
	__top_builddir__bin_snn_calc-snn_calc.$(OBJEXT) \
	__top_builddir__bin_snn_calc-calc.$(OBJEXT)
__top_builddir__bin_snn_calc_OBJECTS =  \
	$(am___top_builddir__bin_snn_calc_OBJECTS)
__top_builddir__bin_snn_calc_LDADD = $(LDADD)
__top_builddir__bin_snn_calc_DEPENDENCIES =
__top_builddir__bin_snn_calc_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am___top_builddir__bin_snn_filt_OBJECTS =  \
	util/__top_builddir__bin_snn_filt-matrix.$(OBJEXT) \
	util/__top_builddir__bin_snn_filt-util_vector.$(OBJEXT) \
	util/__top_builddir__bin_snn_filt-util.$(OBJEXT) \
	util/__top_builddir__bin_snn_filt-spikes_list.$(OBJEXT) \
	util/__top_builddir__bin_snn_filt-io.$(OBJEXT) \
	__top_builddir__bin_snn_filt-snn_filt.$(OBJEXT)
__top_builddir__bin_snn_filt_OBJECTS =  \
	$(am___top_builddir__bin_snn_filt_OBJECTS)
__top_builddir__bin_snn_filt_LDADD = $(LDADD)
__top_builddir__bin_snn_filt_DEPENDENCIES =
__top_builddir__bin_snn_filt_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am___top_builddir__bin_snn_postproc_OBJECTS =  \
	util/__top_builddir__bin_snn_postproc-matrix.$(OBJEXT) \
	util/__top_builddir__bin_snn_postproc-util_vector.$(OBJEXT) \
	./util/__top_builddir__bin_snn_postproc-ini.$(OBJEXT) \
	util/__top_builddir__bin_snn_postproc-util.$(OBJEXT) \
	util/__top_builddir__bin_snn_postproc-spikes_list.$(OBJEXT) \
	util/__top_builddir__bin_snn_postproc-io.$(OBJEXT) \
	__top_builddir__bin_snn_postproc-postproc.$(OBJEXT) \
	__top_builddir__bin_snn_postproc-snn_postproc.$(OBJEXT)
__top_builddir__bin_snn_postproc_OBJECTS =  \
	$(am___top_builddir__bin_snn_postproc_OBJECTS)
__top_builddir__bin_snn_postproc_LDADD = $(LDADD)
__top_builddir__bin_snn_postproc_DEPENDENCIES =
__top_builddir__bin_snn_postproc_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am___top_builddir__bin_snn_prep_OBJECTS =  \
	util/__top_builddir__bin_snn_prep-matrix.$(OBJEXT) \
	util/__top_builddir__bin_snn_prep-util_vector.$(OBJEXT) \
	./util/__top_builddir__bin_snn_prep-ini.$(OBJEXT) \
	util/__top_builddir__bin_snn_prep-util.$(OBJEXT) \
	util/__top_builddir__bin_snn_prep-spikes_list.$(OBJEXT) \
	__top_builddir__bin_snn_prep-constants.$(OBJEXT) \
	util/__top_builddir__bin_snn_prep-io.$(OBJEXT) \
	layers/__top_builddir__bin_snn_prep-adex.$(OBJEXT) \
	prep/__top_builddir__bin_snn_prep-prepare_ts.$(OBJEXT) \
	__top_builddir__bin_snn_prep-snn_prep.$(OBJEXT)
__top_builddir__bin_snn_prep_OBJECTS =  \
	$(am___top_builddir__bin_snn_prep_OBJECTS)
__top_builddir__bin_snn_prep_LDADD = $(LDADD)
__top_builddir__bin_snn_prep_DEPENDENCIES =
__top_builddir__bin_snn_prep_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_2 = util/__top_builddir__bin_snn_sim-matrix.$(OBJEXT) \
	util/__top_builddir__bin_snn_sim-util_vector.$(OBJEXT) \
	./util/__top_builddir__bin_snn_sim-ini.$(OBJEXT) \
	util/__top_builddir__bin_snn_sim-util.$(OBJEXT) \
	util/__top_builddir__bin_snn_sim-spikes_list.$(OBJEXT) \
	./util/__top_builddir__bin_snn_sim-util_dlink_list.$(OBJEXT) \
	sim/__top_builddir__bin_snn_sim-netsim.$(OBJEXT) \
	__top_builddir__bin_snn_sim-neuron_funcs.$(OBJEXT) \
	__top_builddir__bin_snn_sim-constants.$(OBJEXT) \
	util/__top_builddir__bin_snn_sim-io.$(OBJEXT) \
	util/__top_builddir__bin_snn_sim-mem.$(OBJEXT) \
	sim/__top_builddir__bin_snn_sim-runtime.$(OBJEXT) \
	sim/__top_builddir__bin_snn_sim-configure.$(OBJEXT) \
	sim/__top_builddir__bin_snn_sim-serialize.$(OBJEXT) \
	./layers/__top_builddir__bin_snn_sim-poisson.$(OBJEXT) \
	sim/__top_builddir__bin_snn_sim-sim.$(OBJEXT) \
	learn/__top_builddir__bin_snn_sim-triple_stdp.$(OBJEXT) \
	learn/__top_builddir__bin_snn_sim-optim.$(OBJEXT) \
	learn/__top_builddir__bin_snn_sim-res_stdp.$(OBJEXT) \
	learn/__top_builddir__bin_snn_sim-simple_stdp.$(OBJEXT) \
	layers/__top_builddir__bin_snn_sim-wta.$(OBJEXT) \
	layers/__top_builddir__bin_snn_sim-adapt.$(OBJEXT) \
	layers/__top_builddir__bin_snn_sim-wtaadapt.$(OBJEXT)
am___top_builddir__bin_snn_sim_OBJECTS = $(am__objects_2) \
	__top_builddir__bin_snn_sim-snn_sim.$(OBJEXT)
__top_builddir__bin_snn_sim_OBJECTS =  \
	$(am___top_builddir__bin_snn_sim_OBJECTS)
__top_builddir__bin_snn_sim_LDADD = $(LDADD)
__top_builddir__bin_snn_sim_DEPENDENCIES =
__top_builddir__bin_snn_sim_LINK = $(LIBTOOL) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(__top_builddir__bin_libsnn_sim_la_SOURCES) \
	$(__top_builddir__bin_snn_calc_SOURCES) \
	$(__top_builddir__bin_snn_filt_SOURCES) \
	$(__top_builddir__bin_snn_postproc_SOURCES) \
	$(__top_builddir__bin_snn_prep_SOURCES) \
	$(__top_builddir__bin_snn_sim_SOURCES)
DIST_SOURCES = $(__top_builddir__bin_libsnn_sim_la_SOURCES) \
	$(__top_builddir__bin_snn_calc_SOURCES) \
	$(__top_builddir__bin_snn_filt_SOURCES) \
	$(__top_builddir__bin_snn_postproc_SOURCES) \
	$(__top_builddir__bin_snn_prep_SOURCES) \
	$(__top_builddir__bin_snn_sim_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/missing --run autoconf
AUTOHEADER = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/missing --run autoheader
AUTOMAKE = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"snn_sim\" -DPACKAGE_TARNAME=\"snn_sim\" -DPACKAGE_VERSION=\"0.1\" -DPACKAGE_STRING=\"snn_sim\ 0.1\" -DPACKAGE_BUGREPORT=\"alexey.chernushev@gmail.com\" -DPACKAGE_URL=\"\" -DPACKAGE=\"snn_sim\" -DVERSION=\"0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ARPA_INET_H=1 -DHAVE_NETINET_IN_H=1 -DHAVE_STDDEF_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_SYS_SOCKET_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STDLIB_H=1 -DHAVE_REALLOC=1 -DHAVE_INET_NTOA=1 -DHAVE_SOCKET=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = snn_sim
PACKAGE_BUGREPORT = alexey.chernushev@gmail.com
PACKAGE_NAME = snn_sim
PACKAGE_STRING = snn_sim 0.1
PACKAGE_TARNAME = snn_sim
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.1
abs_builddir = /home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim
abs_srcdir = /home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim
abs_top_builddir = /home/alexeyche/prog/alexeyche-junk/cns/c
abs_top_srcdir = /home/alexeyche/prog/alexeyche-junk/cns/c
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/alexeyche/prog/alexeyche-junk/cns/c/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# what flags you want to pass to the C compiler & linker
AM_CFLAGS = -Wall -Wno-unused-variable -std=gnu99 -pthread  -O3 
#AM_CFLAGS = -Wall -std=gnu99 -pthread -O0 -g  
MAIN_SOURCES = util/matrix.c util/util_vector.c ./util/ini.c ./util/matrix.h util/util.c util/spikes_list.c ./util/util_dlink_list.c sim/netsim.c neuron_funcs.c  constants.c util/io.c util/mem.c sim/runtime.c sim/configure.c sim/serialize.c ./layers/poisson.c sim/sim.c learn/triple_stdp.c learn/optim.c learn/res_stdp.c learn/simple_stdp.c layers/wta.c layers/adapt.c layers/wtaadapt.c
LDADD = -lm
__top_builddir__bin_snn_sim_CFLAGS = $(AM_CFLAGS)
__top_builddir__bin_snn_sim_SOURCES = $(MAIN_SOURCES) snn_sim.c 
__top_builddir__bin_snn_prep_SOURCES = util/matrix.c util/util_vector.c ./util/ini.c ./util/matrix.h util/util.c util/spikes_list.c  constants.c util/io.c layers/adex.c prep/prepare_ts.c snn_prep.c 
__top_builddir__bin_snn_prep_CFLAGS = $(AM_CFLAGS)
__top_builddir__bin_snn_calc_SOURCES = util/matrix.c util/util_vector.c ./util/ini.c ./util/matrix.h util/util.c util/spikes_list.c  util/io.c snn_calc.c calc.c
__top_builddir__bin_snn_calc_CFLAGS = $(AM_CFLAGS)
__top_builddir__bin_snn_postproc_SOURCES = util/matrix.c util/util_vector.c ./util/ini.c ./util/matrix.h util/util.c util/spikes_list.c  util/io.c postproc.c snn_postproc.c
__top_builddir__bin_snn_postproc_CFLAGS = $(AM_CFLAGS)
__top_builddir__bin_snn_filt_SOURCES = util/matrix.c util/util_vector.c  util/util.c util/spikes_list.c  util/io.c snn_filt.c
__top_builddir__bin_snn_filt_CFLAGS = $(AM_CFLAGS)
lib_LTLIBRARIES = $(top_builddir)/bin/libsnn_sim.la
__top_builddir__bin_libsnn_sim_la_SOURCES = $(MAIN_SOURCES) 
__top_builddir__bin_libsnn_sim_la_LDFLAGS = -version-info 0:1
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu snn_sim/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu snn_sim/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
util/$(am__dirstamp):
	@$(MKDIR_P) util
	@: > util/$(am__dirstamp)
util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) util/$(DEPDIR)
	@: > util/$(DEPDIR)/$(am__dirstamp)
util/matrix.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/util_vector.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
./util/ini.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/util.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/spikes_list.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
./util/util_dlink_list.lo: util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
sim/$(am__dirstamp):
	@$(MKDIR_P) sim
	@: > sim/$(am__dirstamp)
sim/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sim/$(DEPDIR)
	@: > sim/$(DEPDIR)/$(am__dirstamp)
sim/netsim.lo: sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
util/io.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/mem.lo: util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
sim/runtime.lo: sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
sim/configure.lo: sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
sim/serialize.lo: sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
layers/$(am__dirstamp):
	@$(MKDIR_P) ./layers
	@: > layers/$(am__dirstamp)
layers/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ./layers/$(DEPDIR)
	@: > layers/$(DEPDIR)/$(am__dirstamp)
./layers/poisson.lo: layers/$(am__dirstamp) \
	layers/$(DEPDIR)/$(am__dirstamp)
sim/sim.lo: sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
learn/$(am__dirstamp):
	@$(MKDIR_P) learn
	@: > learn/$(am__dirstamp)
learn/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) learn/$(DEPDIR)
	@: > learn/$(DEPDIR)/$(am__dirstamp)
learn/triple_stdp.lo: learn/$(am__dirstamp) \
	learn/$(DEPDIR)/$(am__dirstamp)
learn/optim.lo: learn/$(am__dirstamp) learn/$(DEPDIR)/$(am__dirstamp)
learn/res_stdp.lo: learn/$(am__dirstamp) \
	learn/$(DEPDIR)/$(am__dirstamp)
learn/simple_stdp.lo: learn/$(am__dirstamp) \
	learn/$(DEPDIR)/$(am__dirstamp)
layers/wta.lo: layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
layers/adapt.lo: layers/$(am__dirstamp) \
	layers/$(DEPDIR)/$(am__dirstamp)
layers/wtaadapt.lo: layers/$(am__dirstamp) \
	layers/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/$(am__dirstamp):
	@$(MKDIR_P) $(top_builddir)/bin
	@: > $(top_builddir)/bin/$(am__dirstamp)
$(top_builddir)/bin/libsnn_sim.la: $(__top_builddir__bin_libsnn_sim_la_OBJECTS) $(__top_builddir__bin_libsnn_sim_la_DEPENDENCIES) $(EXTRA___top_builddir__bin_libsnn_sim_la_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	$(__top_builddir__bin_libsnn_sim_la_LINK) -rpath $(libdir) $(__top_builddir__bin_libsnn_sim_la_OBJECTS) $(__top_builddir__bin_libsnn_sim_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
util/__top_builddir__bin_snn_calc-matrix.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_calc-util_vector.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
./util/__top_builddir__bin_snn_calc-ini.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_calc-util.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_calc-spikes_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_calc-io.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/snn_calc$(EXEEXT): $(__top_builddir__bin_snn_calc_OBJECTS) $(__top_builddir__bin_snn_calc_DEPENDENCIES) $(EXTRA___top_builddir__bin_snn_calc_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/snn_calc$(EXEEXT)
	$(__top_builddir__bin_snn_calc_LINK) $(__top_builddir__bin_snn_calc_OBJECTS) $(__top_builddir__bin_snn_calc_LDADD) $(LIBS)
util/__top_builddir__bin_snn_filt-matrix.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_filt-util_vector.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_filt-util.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_filt-spikes_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_filt-io.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/snn_filt$(EXEEXT): $(__top_builddir__bin_snn_filt_OBJECTS) $(__top_builddir__bin_snn_filt_DEPENDENCIES) $(EXTRA___top_builddir__bin_snn_filt_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/snn_filt$(EXEEXT)
	$(__top_builddir__bin_snn_filt_LINK) $(__top_builddir__bin_snn_filt_OBJECTS) $(__top_builddir__bin_snn_filt_LDADD) $(LIBS)
util/__top_builddir__bin_snn_postproc-matrix.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_postproc-util_vector.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
./util/__top_builddir__bin_snn_postproc-ini.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_postproc-util.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_postproc-spikes_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_postproc-io.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/snn_postproc$(EXEEXT): $(__top_builddir__bin_snn_postproc_OBJECTS) $(__top_builddir__bin_snn_postproc_DEPENDENCIES) $(EXTRA___top_builddir__bin_snn_postproc_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/snn_postproc$(EXEEXT)
	$(__top_builddir__bin_snn_postproc_LINK) $(__top_builddir__bin_snn_postproc_OBJECTS) $(__top_builddir__bin_snn_postproc_LDADD) $(LIBS)
util/__top_builddir__bin_snn_prep-matrix.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_prep-util_vector.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
./util/__top_builddir__bin_snn_prep-ini.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_prep-util.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_prep-spikes_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_prep-io.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
layers/__top_builddir__bin_snn_prep-adex.$(OBJEXT):  \
	layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
prep/$(am__dirstamp):
	@$(MKDIR_P) prep
	@: > prep/$(am__dirstamp)
prep/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) prep/$(DEPDIR)
	@: > prep/$(DEPDIR)/$(am__dirstamp)
prep/__top_builddir__bin_snn_prep-prepare_ts.$(OBJEXT):  \
	prep/$(am__dirstamp) prep/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/snn_prep$(EXEEXT): $(__top_builddir__bin_snn_prep_OBJECTS) $(__top_builddir__bin_snn_prep_DEPENDENCIES) $(EXTRA___top_builddir__bin_snn_prep_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/snn_prep$(EXEEXT)
	$(__top_builddir__bin_snn_prep_LINK) $(__top_builddir__bin_snn_prep_OBJECTS) $(__top_builddir__bin_snn_prep_LDADD) $(LIBS)
util/__top_builddir__bin_snn_sim-matrix.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_sim-util_vector.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
./util/__top_builddir__bin_snn_sim-ini.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_sim-util.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_sim-spikes_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
./util/__top_builddir__bin_snn_sim-util_dlink_list.$(OBJEXT):  \
	util/$(am__dirstamp) util/$(DEPDIR)/$(am__dirstamp)
sim/__top_builddir__bin_snn_sim-netsim.$(OBJEXT): sim/$(am__dirstamp) \
	sim/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_sim-io.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
util/__top_builddir__bin_snn_sim-mem.$(OBJEXT): util/$(am__dirstamp) \
	util/$(DEPDIR)/$(am__dirstamp)
sim/__top_builddir__bin_snn_sim-runtime.$(OBJEXT):  \
	sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
sim/__top_builddir__bin_snn_sim-configure.$(OBJEXT):  \
	sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
sim/__top_builddir__bin_snn_sim-serialize.$(OBJEXT):  \
	sim/$(am__dirstamp) sim/$(DEPDIR)/$(am__dirstamp)
./layers/__top_builddir__bin_snn_sim-poisson.$(OBJEXT):  \
	layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
sim/__top_builddir__bin_snn_sim-sim.$(OBJEXT): sim/$(am__dirstamp) \
	sim/$(DEPDIR)/$(am__dirstamp)
learn/__top_builddir__bin_snn_sim-triple_stdp.$(OBJEXT):  \
	learn/$(am__dirstamp) learn/$(DEPDIR)/$(am__dirstamp)
learn/__top_builddir__bin_snn_sim-optim.$(OBJEXT):  \
	learn/$(am__dirstamp) learn/$(DEPDIR)/$(am__dirstamp)
learn/__top_builddir__bin_snn_sim-res_stdp.$(OBJEXT):  \
	learn/$(am__dirstamp) learn/$(DEPDIR)/$(am__dirstamp)
learn/__top_builddir__bin_snn_sim-simple_stdp.$(OBJEXT):  \
	learn/$(am__dirstamp) learn/$(DEPDIR)/$(am__dirstamp)
layers/__top_builddir__bin_snn_sim-wta.$(OBJEXT):  \
	layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
layers/__top_builddir__bin_snn_sim-adapt.$(OBJEXT):  \
	layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
layers/__top_builddir__bin_snn_sim-wtaadapt.$(OBJEXT):  \
	layers/$(am__dirstamp) layers/$(DEPDIR)/$(am__dirstamp)
$(top_builddir)/bin/snn_sim$(EXEEXT): $(__top_builddir__bin_snn_sim_OBJECTS) $(__top_builddir__bin_snn_sim_DEPENDENCIES) $(EXTRA___top_builddir__bin_snn_sim_DEPENDENCIES) $(top_builddir)/bin/$(am__dirstamp)
	@rm -f $(top_builddir)/bin/snn_sim$(EXEEXT)
	$(__top_builddir__bin_snn_sim_LINK) $(__top_builddir__bin_snn_sim_OBJECTS) $(__top_builddir__bin_snn_sim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ./layers/__top_builddir__bin_snn_sim-poisson.$(OBJEXT)
	-rm -f ./layers/poisson.$(OBJEXT)
	-rm -f ./layers/poisson.lo
	-rm -f ./util/__top_builddir__bin_snn_calc-ini.$(OBJEXT)
	-rm -f ./util/__top_builddir__bin_snn_postproc-ini.$(OBJEXT)
	-rm -f ./util/__top_builddir__bin_snn_prep-ini.$(OBJEXT)
	-rm -f ./util/__top_builddir__bin_snn_sim-ini.$(OBJEXT)
	-rm -f ./util/__top_builddir__bin_snn_sim-util_dlink_list.$(OBJEXT)
	-rm -f ./util/ini.$(OBJEXT)
	-rm -f ./util/ini.lo
	-rm -f ./util/util_dlink_list.$(OBJEXT)
	-rm -f ./util/util_dlink_list.lo
	-rm -f layers/__top_builddir__bin_snn_prep-adex.$(OBJEXT)
	-rm -f layers/__top_builddir__bin_snn_sim-adapt.$(OBJEXT)
	-rm -f layers/__top_builddir__bin_snn_sim-wta.$(OBJEXT)
	-rm -f layers/__top_builddir__bin_snn_sim-wtaadapt.$(OBJEXT)
	-rm -f layers/adapt.$(OBJEXT)
	-rm -f layers/adapt.lo
	-rm -f layers/wta.$(OBJEXT)
	-rm -f layers/wta.lo
	-rm -f layers/wtaadapt.$(OBJEXT)
	-rm -f layers/wtaadapt.lo
	-rm -f learn/__top_builddir__bin_snn_sim-optim.$(OBJEXT)
	-rm -f learn/__top_builddir__bin_snn_sim-res_stdp.$(OBJEXT)
	-rm -f learn/__top_builddir__bin_snn_sim-simple_stdp.$(OBJEXT)
	-rm -f learn/__top_builddir__bin_snn_sim-triple_stdp.$(OBJEXT)
	-rm -f learn/optim.$(OBJEXT)
	-rm -f learn/optim.lo
	-rm -f learn/res_stdp.$(OBJEXT)
	-rm -f learn/res_stdp.lo
	-rm -f learn/simple_stdp.$(OBJEXT)
	-rm -f learn/simple_stdp.lo
	-rm -f learn/triple_stdp.$(OBJEXT)
	-rm -f learn/triple_stdp.lo
	-rm -f prep/__top_builddir__bin_snn_prep-prepare_ts.$(OBJEXT)
	-rm -f sim/__top_builddir__bin_snn_sim-configure.$(OBJEXT)
	-rm -f sim/__top_builddir__bin_snn_sim-netsim.$(OBJEXT)
	-rm -f sim/__top_builddir__bin_snn_sim-runtime.$(OBJEXT)
	-rm -f sim/__top_builddir__bin_snn_sim-serialize.$(OBJEXT)
	-rm -f sim/__top_builddir__bin_snn_sim-sim.$(OBJEXT)
	-rm -f sim/configure.$(OBJEXT)
	-rm -f sim/configure.lo
	-rm -f sim/netsim.$(OBJEXT)
	-rm -f sim/netsim.lo
	-rm -f sim/runtime.$(OBJEXT)
	-rm -f sim/runtime.lo
	-rm -f sim/serialize.$(OBJEXT)
	-rm -f sim/serialize.lo
	-rm -f sim/sim.$(OBJEXT)
	-rm -f sim/sim.lo
	-rm -f util/__top_builddir__bin_snn_calc-io.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_calc-matrix.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_calc-spikes_list.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_calc-util.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_calc-util_vector.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_filt-io.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_filt-matrix.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_filt-spikes_list.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_filt-util.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_filt-util_vector.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_postproc-io.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_postproc-matrix.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_postproc-spikes_list.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_postproc-util.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_postproc-util_vector.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_prep-io.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_prep-matrix.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_prep-spikes_list.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_prep-util.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_prep-util_vector.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-io.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-matrix.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-mem.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-spikes_list.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-util.$(OBJEXT)
	-rm -f util/__top_builddir__bin_snn_sim-util_vector.$(OBJEXT)
	-rm -f util/io.$(OBJEXT)
	-rm -f util/io.lo
	-rm -f util/matrix.$(OBJEXT)
	-rm -f util/matrix.lo
	-rm -f util/mem.$(OBJEXT)
	-rm -f util/mem.lo
	-rm -f util/spikes_list.$(OBJEXT)
	-rm -f util/spikes_list.lo
	-rm -f util/util.$(OBJEXT)
	-rm -f util/util.lo
	-rm -f util/util_vector.$(OBJEXT)
	-rm -f util/util_vector.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/__top_builddir__bin_snn_calc-calc.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_prep-constants.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_sim-constants.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Po
include ./$(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Po
include ./$(DEPDIR)/constants.Plo
include ./$(DEPDIR)/neuron_funcs.Plo
include ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Po
include ./layers/$(DEPDIR)/poisson.Plo
include ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Po
include ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Po
include ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Po
include ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Po
include ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Po
include ./util/$(DEPDIR)/ini.Plo
include ./util/$(DEPDIR)/util_dlink_list.Plo
include layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Po
include layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Po
include layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Po
include layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Po
include layers/$(DEPDIR)/adapt.Plo
include layers/$(DEPDIR)/wta.Plo
include layers/$(DEPDIR)/wtaadapt.Plo
include learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Po
include learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Po
include learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Po
include learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Po
include learn/$(DEPDIR)/optim.Plo
include learn/$(DEPDIR)/res_stdp.Plo
include learn/$(DEPDIR)/simple_stdp.Plo
include learn/$(DEPDIR)/triple_stdp.Plo
include prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Po
include sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Po
include sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Po
include sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Po
include sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Po
include sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Po
include sim/$(DEPDIR)/configure.Plo
include sim/$(DEPDIR)/netsim.Plo
include sim/$(DEPDIR)/runtime.Plo
include sim/$(DEPDIR)/serialize.Plo
include sim/$(DEPDIR)/sim.Plo
include util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Po
include util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Po
include util/$(DEPDIR)/io.Plo
include util/$(DEPDIR)/matrix.Plo
include util/$(DEPDIR)/mem.Plo
include util/$(DEPDIR)/spikes_list.Plo
include util/$(DEPDIR)/util.Plo
include util/$(DEPDIR)/util_vector.Plo

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

util/__top_builddir__bin_snn_calc-matrix.o: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-matrix.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Tpo -c -o util/__top_builddir__bin_snn_calc-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_calc-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c

util/__top_builddir__bin_snn_calc-matrix.obj: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-matrix.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Tpo -c -o util/__top_builddir__bin_snn_calc-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_calc-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`

util/__top_builddir__bin_snn_calc-util_vector.o: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-util_vector.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Tpo -c -o util/__top_builddir__bin_snn_calc-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_calc-util_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c

util/__top_builddir__bin_snn_calc-util_vector.obj: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-util_vector.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Tpo -c -o util/__top_builddir__bin_snn_calc-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_calc-util_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`

./util/__top_builddir__bin_snn_calc-ini.o: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_calc-ini.o -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Tpo -c -o ./util/__top_builddir__bin_snn_calc-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_calc-ini.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_calc-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c

./util/__top_builddir__bin_snn_calc-ini.obj: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_calc-ini.obj -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Tpo -c -o ./util/__top_builddir__bin_snn_calc-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_calc-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_calc-ini.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_calc-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`

util/__top_builddir__bin_snn_calc-util.o: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-util.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Tpo -c -o util/__top_builddir__bin_snn_calc-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_calc-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/__top_builddir__bin_snn_calc-util.obj: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-util.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Tpo -c -o util/__top_builddir__bin_snn_calc-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_calc-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/__top_builddir__bin_snn_calc-spikes_list.o: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-spikes_list.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_calc-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_calc-spikes_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c

util/__top_builddir__bin_snn_calc-spikes_list.obj: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-spikes_list.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_calc-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_calc-spikes_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`

util/__top_builddir__bin_snn_calc-io.o: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-io.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Tpo -c -o util/__top_builddir__bin_snn_calc-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_calc-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c

util/__top_builddir__bin_snn_calc-io.obj: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_calc-io.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Tpo -c -o util/__top_builddir__bin_snn_calc-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_calc-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_calc-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_calc-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`

__top_builddir__bin_snn_calc-snn_calc.o: snn_calc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_calc-snn_calc.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Tpo -c -o __top_builddir__bin_snn_calc-snn_calc.o `test -f 'snn_calc.c' || echo '$(srcdir)/'`snn_calc.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Tpo $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Po
#	source='snn_calc.c' object='__top_builddir__bin_snn_calc-snn_calc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_calc-snn_calc.o `test -f 'snn_calc.c' || echo '$(srcdir)/'`snn_calc.c

__top_builddir__bin_snn_calc-snn_calc.obj: snn_calc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_calc-snn_calc.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Tpo -c -o __top_builddir__bin_snn_calc-snn_calc.obj `if test -f 'snn_calc.c'; then $(CYGPATH_W) 'snn_calc.c'; else $(CYGPATH_W) '$(srcdir)/snn_calc.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Tpo $(DEPDIR)/__top_builddir__bin_snn_calc-snn_calc.Po
#	source='snn_calc.c' object='__top_builddir__bin_snn_calc-snn_calc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_calc-snn_calc.obj `if test -f 'snn_calc.c'; then $(CYGPATH_W) 'snn_calc.c'; else $(CYGPATH_W) '$(srcdir)/snn_calc.c'; fi`

__top_builddir__bin_snn_calc-calc.o: calc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_calc-calc.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Tpo -c -o __top_builddir__bin_snn_calc-calc.o `test -f 'calc.c' || echo '$(srcdir)/'`calc.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Tpo $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Po
#	source='calc.c' object='__top_builddir__bin_snn_calc-calc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_calc-calc.o `test -f 'calc.c' || echo '$(srcdir)/'`calc.c

__top_builddir__bin_snn_calc-calc.obj: calc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_calc-calc.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Tpo -c -o __top_builddir__bin_snn_calc-calc.obj `if test -f 'calc.c'; then $(CYGPATH_W) 'calc.c'; else $(CYGPATH_W) '$(srcdir)/calc.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Tpo $(DEPDIR)/__top_builddir__bin_snn_calc-calc.Po
#	source='calc.c' object='__top_builddir__bin_snn_calc-calc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_calc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_calc-calc.obj `if test -f 'calc.c'; then $(CYGPATH_W) 'calc.c'; else $(CYGPATH_W) '$(srcdir)/calc.c'; fi`

util/__top_builddir__bin_snn_filt-matrix.o: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-matrix.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Tpo -c -o util/__top_builddir__bin_snn_filt-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_filt-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c

util/__top_builddir__bin_snn_filt-matrix.obj: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-matrix.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Tpo -c -o util/__top_builddir__bin_snn_filt-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_filt-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`

util/__top_builddir__bin_snn_filt-util_vector.o: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-util_vector.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Tpo -c -o util/__top_builddir__bin_snn_filt-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_filt-util_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c

util/__top_builddir__bin_snn_filt-util_vector.obj: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-util_vector.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Tpo -c -o util/__top_builddir__bin_snn_filt-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_filt-util_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`

util/__top_builddir__bin_snn_filt-util.o: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-util.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Tpo -c -o util/__top_builddir__bin_snn_filt-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_filt-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/__top_builddir__bin_snn_filt-util.obj: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-util.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Tpo -c -o util/__top_builddir__bin_snn_filt-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_filt-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/__top_builddir__bin_snn_filt-spikes_list.o: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-spikes_list.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_filt-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_filt-spikes_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c

util/__top_builddir__bin_snn_filt-spikes_list.obj: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-spikes_list.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_filt-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_filt-spikes_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`

util/__top_builddir__bin_snn_filt-io.o: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-io.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Tpo -c -o util/__top_builddir__bin_snn_filt-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_filt-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c

util/__top_builddir__bin_snn_filt-io.obj: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_filt-io.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Tpo -c -o util/__top_builddir__bin_snn_filt-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_filt-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_filt-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_filt-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`

__top_builddir__bin_snn_filt-snn_filt.o: snn_filt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_filt-snn_filt.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Tpo -c -o __top_builddir__bin_snn_filt-snn_filt.o `test -f 'snn_filt.c' || echo '$(srcdir)/'`snn_filt.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Tpo $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Po
#	source='snn_filt.c' object='__top_builddir__bin_snn_filt-snn_filt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_filt-snn_filt.o `test -f 'snn_filt.c' || echo '$(srcdir)/'`snn_filt.c

__top_builddir__bin_snn_filt-snn_filt.obj: snn_filt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_filt-snn_filt.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Tpo -c -o __top_builddir__bin_snn_filt-snn_filt.obj `if test -f 'snn_filt.c'; then $(CYGPATH_W) 'snn_filt.c'; else $(CYGPATH_W) '$(srcdir)/snn_filt.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Tpo $(DEPDIR)/__top_builddir__bin_snn_filt-snn_filt.Po
#	source='snn_filt.c' object='__top_builddir__bin_snn_filt-snn_filt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_filt_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_filt-snn_filt.obj `if test -f 'snn_filt.c'; then $(CYGPATH_W) 'snn_filt.c'; else $(CYGPATH_W) '$(srcdir)/snn_filt.c'; fi`

util/__top_builddir__bin_snn_postproc-matrix.o: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-matrix.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Tpo -c -o util/__top_builddir__bin_snn_postproc-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_postproc-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c

util/__top_builddir__bin_snn_postproc-matrix.obj: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-matrix.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Tpo -c -o util/__top_builddir__bin_snn_postproc-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_postproc-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`

util/__top_builddir__bin_snn_postproc-util_vector.o: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-util_vector.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Tpo -c -o util/__top_builddir__bin_snn_postproc-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_postproc-util_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c

util/__top_builddir__bin_snn_postproc-util_vector.obj: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-util_vector.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Tpo -c -o util/__top_builddir__bin_snn_postproc-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_postproc-util_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`

./util/__top_builddir__bin_snn_postproc-ini.o: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_postproc-ini.o -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Tpo -c -o ./util/__top_builddir__bin_snn_postproc-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_postproc-ini.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_postproc-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c

./util/__top_builddir__bin_snn_postproc-ini.obj: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_postproc-ini.obj -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Tpo -c -o ./util/__top_builddir__bin_snn_postproc-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_postproc-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_postproc-ini.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_postproc-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`

util/__top_builddir__bin_snn_postproc-util.o: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-util.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Tpo -c -o util/__top_builddir__bin_snn_postproc-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_postproc-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/__top_builddir__bin_snn_postproc-util.obj: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-util.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Tpo -c -o util/__top_builddir__bin_snn_postproc-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_postproc-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/__top_builddir__bin_snn_postproc-spikes_list.o: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-spikes_list.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_postproc-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_postproc-spikes_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c

util/__top_builddir__bin_snn_postproc-spikes_list.obj: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-spikes_list.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_postproc-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_postproc-spikes_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`

util/__top_builddir__bin_snn_postproc-io.o: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-io.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Tpo -c -o util/__top_builddir__bin_snn_postproc-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_postproc-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c

util/__top_builddir__bin_snn_postproc-io.obj: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_postproc-io.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Tpo -c -o util/__top_builddir__bin_snn_postproc-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_postproc-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_postproc-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_postproc-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`

__top_builddir__bin_snn_postproc-postproc.o: postproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_postproc-postproc.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Tpo -c -o __top_builddir__bin_snn_postproc-postproc.o `test -f 'postproc.c' || echo '$(srcdir)/'`postproc.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Tpo $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Po
#	source='postproc.c' object='__top_builddir__bin_snn_postproc-postproc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_postproc-postproc.o `test -f 'postproc.c' || echo '$(srcdir)/'`postproc.c

__top_builddir__bin_snn_postproc-postproc.obj: postproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_postproc-postproc.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Tpo -c -o __top_builddir__bin_snn_postproc-postproc.obj `if test -f 'postproc.c'; then $(CYGPATH_W) 'postproc.c'; else $(CYGPATH_W) '$(srcdir)/postproc.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Tpo $(DEPDIR)/__top_builddir__bin_snn_postproc-postproc.Po
#	source='postproc.c' object='__top_builddir__bin_snn_postproc-postproc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_postproc-postproc.obj `if test -f 'postproc.c'; then $(CYGPATH_W) 'postproc.c'; else $(CYGPATH_W) '$(srcdir)/postproc.c'; fi`

__top_builddir__bin_snn_postproc-snn_postproc.o: snn_postproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_postproc-snn_postproc.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Tpo -c -o __top_builddir__bin_snn_postproc-snn_postproc.o `test -f 'snn_postproc.c' || echo '$(srcdir)/'`snn_postproc.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Tpo $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Po
#	source='snn_postproc.c' object='__top_builddir__bin_snn_postproc-snn_postproc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_postproc-snn_postproc.o `test -f 'snn_postproc.c' || echo '$(srcdir)/'`snn_postproc.c

__top_builddir__bin_snn_postproc-snn_postproc.obj: snn_postproc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_postproc-snn_postproc.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Tpo -c -o __top_builddir__bin_snn_postproc-snn_postproc.obj `if test -f 'snn_postproc.c'; then $(CYGPATH_W) 'snn_postproc.c'; else $(CYGPATH_W) '$(srcdir)/snn_postproc.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Tpo $(DEPDIR)/__top_builddir__bin_snn_postproc-snn_postproc.Po
#	source='snn_postproc.c' object='__top_builddir__bin_snn_postproc-snn_postproc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_postproc_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_postproc-snn_postproc.obj `if test -f 'snn_postproc.c'; then $(CYGPATH_W) 'snn_postproc.c'; else $(CYGPATH_W) '$(srcdir)/snn_postproc.c'; fi`

util/__top_builddir__bin_snn_prep-matrix.o: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-matrix.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Tpo -c -o util/__top_builddir__bin_snn_prep-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_prep-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c

util/__top_builddir__bin_snn_prep-matrix.obj: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-matrix.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Tpo -c -o util/__top_builddir__bin_snn_prep-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_prep-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`

util/__top_builddir__bin_snn_prep-util_vector.o: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-util_vector.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Tpo -c -o util/__top_builddir__bin_snn_prep-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_prep-util_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c

util/__top_builddir__bin_snn_prep-util_vector.obj: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-util_vector.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Tpo -c -o util/__top_builddir__bin_snn_prep-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_prep-util_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`

./util/__top_builddir__bin_snn_prep-ini.o: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_prep-ini.o -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Tpo -c -o ./util/__top_builddir__bin_snn_prep-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_prep-ini.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_prep-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c

./util/__top_builddir__bin_snn_prep-ini.obj: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_prep-ini.obj -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Tpo -c -o ./util/__top_builddir__bin_snn_prep-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_prep-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_prep-ini.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_prep-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`

util/__top_builddir__bin_snn_prep-util.o: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-util.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Tpo -c -o util/__top_builddir__bin_snn_prep-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_prep-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/__top_builddir__bin_snn_prep-util.obj: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-util.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Tpo -c -o util/__top_builddir__bin_snn_prep-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_prep-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/__top_builddir__bin_snn_prep-spikes_list.o: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-spikes_list.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_prep-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_prep-spikes_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c

util/__top_builddir__bin_snn_prep-spikes_list.obj: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-spikes_list.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_prep-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_prep-spikes_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`

__top_builddir__bin_snn_prep-constants.o: constants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_prep-constants.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Tpo -c -o __top_builddir__bin_snn_prep-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Tpo $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Po
#	source='constants.c' object='__top_builddir__bin_snn_prep-constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_prep-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c

__top_builddir__bin_snn_prep-constants.obj: constants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_prep-constants.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Tpo -c -o __top_builddir__bin_snn_prep-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Tpo $(DEPDIR)/__top_builddir__bin_snn_prep-constants.Po
#	source='constants.c' object='__top_builddir__bin_snn_prep-constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_prep-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`

util/__top_builddir__bin_snn_prep-io.o: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-io.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Tpo -c -o util/__top_builddir__bin_snn_prep-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_prep-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c

util/__top_builddir__bin_snn_prep-io.obj: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_prep-io.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Tpo -c -o util/__top_builddir__bin_snn_prep-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_prep-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_prep-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_prep-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`

layers/__top_builddir__bin_snn_prep-adex.o: layers/adex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_prep-adex.o -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Tpo -c -o layers/__top_builddir__bin_snn_prep-adex.o `test -f 'layers/adex.c' || echo '$(srcdir)/'`layers/adex.c
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Po
#	source='layers/adex.c' object='layers/__top_builddir__bin_snn_prep-adex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_prep-adex.o `test -f 'layers/adex.c' || echo '$(srcdir)/'`layers/adex.c

layers/__top_builddir__bin_snn_prep-adex.obj: layers/adex.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_prep-adex.obj -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Tpo -c -o layers/__top_builddir__bin_snn_prep-adex.obj `if test -f 'layers/adex.c'; then $(CYGPATH_W) 'layers/adex.c'; else $(CYGPATH_W) '$(srcdir)/layers/adex.c'; fi`
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_prep-adex.Po
#	source='layers/adex.c' object='layers/__top_builddir__bin_snn_prep-adex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_prep-adex.obj `if test -f 'layers/adex.c'; then $(CYGPATH_W) 'layers/adex.c'; else $(CYGPATH_W) '$(srcdir)/layers/adex.c'; fi`

prep/__top_builddir__bin_snn_prep-prepare_ts.o: prep/prepare_ts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT prep/__top_builddir__bin_snn_prep-prepare_ts.o -MD -MP -MF prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Tpo -c -o prep/__top_builddir__bin_snn_prep-prepare_ts.o `test -f 'prep/prepare_ts.c' || echo '$(srcdir)/'`prep/prepare_ts.c
	$(am__mv) prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Tpo prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Po
#	source='prep/prepare_ts.c' object='prep/__top_builddir__bin_snn_prep-prepare_ts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o prep/__top_builddir__bin_snn_prep-prepare_ts.o `test -f 'prep/prepare_ts.c' || echo '$(srcdir)/'`prep/prepare_ts.c

prep/__top_builddir__bin_snn_prep-prepare_ts.obj: prep/prepare_ts.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT prep/__top_builddir__bin_snn_prep-prepare_ts.obj -MD -MP -MF prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Tpo -c -o prep/__top_builddir__bin_snn_prep-prepare_ts.obj `if test -f 'prep/prepare_ts.c'; then $(CYGPATH_W) 'prep/prepare_ts.c'; else $(CYGPATH_W) '$(srcdir)/prep/prepare_ts.c'; fi`
	$(am__mv) prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Tpo prep/$(DEPDIR)/__top_builddir__bin_snn_prep-prepare_ts.Po
#	source='prep/prepare_ts.c' object='prep/__top_builddir__bin_snn_prep-prepare_ts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o prep/__top_builddir__bin_snn_prep-prepare_ts.obj `if test -f 'prep/prepare_ts.c'; then $(CYGPATH_W) 'prep/prepare_ts.c'; else $(CYGPATH_W) '$(srcdir)/prep/prepare_ts.c'; fi`

__top_builddir__bin_snn_prep-snn_prep.o: snn_prep.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_prep-snn_prep.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Tpo -c -o __top_builddir__bin_snn_prep-snn_prep.o `test -f 'snn_prep.c' || echo '$(srcdir)/'`snn_prep.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Tpo $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Po
#	source='snn_prep.c' object='__top_builddir__bin_snn_prep-snn_prep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_prep-snn_prep.o `test -f 'snn_prep.c' || echo '$(srcdir)/'`snn_prep.c

__top_builddir__bin_snn_prep-snn_prep.obj: snn_prep.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_prep-snn_prep.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Tpo -c -o __top_builddir__bin_snn_prep-snn_prep.obj `if test -f 'snn_prep.c'; then $(CYGPATH_W) 'snn_prep.c'; else $(CYGPATH_W) '$(srcdir)/snn_prep.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Tpo $(DEPDIR)/__top_builddir__bin_snn_prep-snn_prep.Po
#	source='snn_prep.c' object='__top_builddir__bin_snn_prep-snn_prep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_prep_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_prep-snn_prep.obj `if test -f 'snn_prep.c'; then $(CYGPATH_W) 'snn_prep.c'; else $(CYGPATH_W) '$(srcdir)/snn_prep.c'; fi`

util/__top_builddir__bin_snn_sim-matrix.o: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-matrix.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Tpo -c -o util/__top_builddir__bin_snn_sim-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_sim-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-matrix.o `test -f 'util/matrix.c' || echo '$(srcdir)/'`util/matrix.c

util/__top_builddir__bin_snn_sim-matrix.obj: util/matrix.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-matrix.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Tpo -c -o util/__top_builddir__bin_snn_sim-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-matrix.Po
#	source='util/matrix.c' object='util/__top_builddir__bin_snn_sim-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-matrix.obj `if test -f 'util/matrix.c'; then $(CYGPATH_W) 'util/matrix.c'; else $(CYGPATH_W) '$(srcdir)/util/matrix.c'; fi`

util/__top_builddir__bin_snn_sim-util_vector.o: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-util_vector.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Tpo -c -o util/__top_builddir__bin_snn_sim-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_sim-util_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-util_vector.o `test -f 'util/util_vector.c' || echo '$(srcdir)/'`util/util_vector.c

util/__top_builddir__bin_snn_sim-util_vector.obj: util/util_vector.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-util_vector.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Tpo -c -o util/__top_builddir__bin_snn_sim-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_vector.Po
#	source='util/util_vector.c' object='util/__top_builddir__bin_snn_sim-util_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-util_vector.obj `if test -f 'util/util_vector.c'; then $(CYGPATH_W) 'util/util_vector.c'; else $(CYGPATH_W) '$(srcdir)/util/util_vector.c'; fi`

./util/__top_builddir__bin_snn_sim-ini.o: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_sim-ini.o -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Tpo -c -o ./util/__top_builddir__bin_snn_sim-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_sim-ini.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_sim-ini.o `test -f './util/ini.c' || echo '$(srcdir)/'`./util/ini.c

./util/__top_builddir__bin_snn_sim-ini.obj: ./util/ini.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_sim-ini.obj -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Tpo -c -o ./util/__top_builddir__bin_snn_sim-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-ini.Po
#	source='./util/ini.c' object='./util/__top_builddir__bin_snn_sim-ini.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_sim-ini.obj `if test -f './util/ini.c'; then $(CYGPATH_W) './util/ini.c'; else $(CYGPATH_W) '$(srcdir)/./util/ini.c'; fi`

util/__top_builddir__bin_snn_sim-util.o: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-util.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Tpo -c -o util/__top_builddir__bin_snn_sim-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_sim-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-util.o `test -f 'util/util.c' || echo '$(srcdir)/'`util/util.c

util/__top_builddir__bin_snn_sim-util.obj: util/util.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-util.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Tpo -c -o util/__top_builddir__bin_snn_sim-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-util.Po
#	source='util/util.c' object='util/__top_builddir__bin_snn_sim-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-util.obj `if test -f 'util/util.c'; then $(CYGPATH_W) 'util/util.c'; else $(CYGPATH_W) '$(srcdir)/util/util.c'; fi`

util/__top_builddir__bin_snn_sim-spikes_list.o: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-spikes_list.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_sim-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_sim-spikes_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-spikes_list.o `test -f 'util/spikes_list.c' || echo '$(srcdir)/'`util/spikes_list.c

util/__top_builddir__bin_snn_sim-spikes_list.obj: util/spikes_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-spikes_list.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Tpo -c -o util/__top_builddir__bin_snn_sim-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-spikes_list.Po
#	source='util/spikes_list.c' object='util/__top_builddir__bin_snn_sim-spikes_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-spikes_list.obj `if test -f 'util/spikes_list.c'; then $(CYGPATH_W) 'util/spikes_list.c'; else $(CYGPATH_W) '$(srcdir)/util/spikes_list.c'; fi`

./util/__top_builddir__bin_snn_sim-util_dlink_list.o: ./util/util_dlink_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_sim-util_dlink_list.o -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Tpo -c -o ./util/__top_builddir__bin_snn_sim-util_dlink_list.o `test -f './util/util_dlink_list.c' || echo '$(srcdir)/'`./util/util_dlink_list.c
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Po
#	source='./util/util_dlink_list.c' object='./util/__top_builddir__bin_snn_sim-util_dlink_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_sim-util_dlink_list.o `test -f './util/util_dlink_list.c' || echo '$(srcdir)/'`./util/util_dlink_list.c

./util/__top_builddir__bin_snn_sim-util_dlink_list.obj: ./util/util_dlink_list.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./util/__top_builddir__bin_snn_sim-util_dlink_list.obj -MD -MP -MF ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Tpo -c -o ./util/__top_builddir__bin_snn_sim-util_dlink_list.obj `if test -f './util/util_dlink_list.c'; then $(CYGPATH_W) './util/util_dlink_list.c'; else $(CYGPATH_W) '$(srcdir)/./util/util_dlink_list.c'; fi`
	$(am__mv) ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Tpo ./util/$(DEPDIR)/__top_builddir__bin_snn_sim-util_dlink_list.Po
#	source='./util/util_dlink_list.c' object='./util/__top_builddir__bin_snn_sim-util_dlink_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./util/__top_builddir__bin_snn_sim-util_dlink_list.obj `if test -f './util/util_dlink_list.c'; then $(CYGPATH_W) './util/util_dlink_list.c'; else $(CYGPATH_W) '$(srcdir)/./util/util_dlink_list.c'; fi`

sim/__top_builddir__bin_snn_sim-netsim.o: sim/netsim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-netsim.o -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Tpo -c -o sim/__top_builddir__bin_snn_sim-netsim.o `test -f 'sim/netsim.c' || echo '$(srcdir)/'`sim/netsim.c
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Po
#	source='sim/netsim.c' object='sim/__top_builddir__bin_snn_sim-netsim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-netsim.o `test -f 'sim/netsim.c' || echo '$(srcdir)/'`sim/netsim.c

sim/__top_builddir__bin_snn_sim-netsim.obj: sim/netsim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-netsim.obj -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Tpo -c -o sim/__top_builddir__bin_snn_sim-netsim.obj `if test -f 'sim/netsim.c'; then $(CYGPATH_W) 'sim/netsim.c'; else $(CYGPATH_W) '$(srcdir)/sim/netsim.c'; fi`
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-netsim.Po
#	source='sim/netsim.c' object='sim/__top_builddir__bin_snn_sim-netsim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-netsim.obj `if test -f 'sim/netsim.c'; then $(CYGPATH_W) 'sim/netsim.c'; else $(CYGPATH_W) '$(srcdir)/sim/netsim.c'; fi`

__top_builddir__bin_snn_sim-neuron_funcs.o: neuron_funcs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-neuron_funcs.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Tpo -c -o __top_builddir__bin_snn_sim-neuron_funcs.o `test -f 'neuron_funcs.c' || echo '$(srcdir)/'`neuron_funcs.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Po
#	source='neuron_funcs.c' object='__top_builddir__bin_snn_sim-neuron_funcs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-neuron_funcs.o `test -f 'neuron_funcs.c' || echo '$(srcdir)/'`neuron_funcs.c

__top_builddir__bin_snn_sim-neuron_funcs.obj: neuron_funcs.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-neuron_funcs.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Tpo -c -o __top_builddir__bin_snn_sim-neuron_funcs.obj `if test -f 'neuron_funcs.c'; then $(CYGPATH_W) 'neuron_funcs.c'; else $(CYGPATH_W) '$(srcdir)/neuron_funcs.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-neuron_funcs.Po
#	source='neuron_funcs.c' object='__top_builddir__bin_snn_sim-neuron_funcs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-neuron_funcs.obj `if test -f 'neuron_funcs.c'; then $(CYGPATH_W) 'neuron_funcs.c'; else $(CYGPATH_W) '$(srcdir)/neuron_funcs.c'; fi`

__top_builddir__bin_snn_sim-constants.o: constants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-constants.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Tpo -c -o __top_builddir__bin_snn_sim-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Po
#	source='constants.c' object='__top_builddir__bin_snn_sim-constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-constants.o `test -f 'constants.c' || echo '$(srcdir)/'`constants.c

__top_builddir__bin_snn_sim-constants.obj: constants.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-constants.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Tpo -c -o __top_builddir__bin_snn_sim-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-constants.Po
#	source='constants.c' object='__top_builddir__bin_snn_sim-constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-constants.obj `if test -f 'constants.c'; then $(CYGPATH_W) 'constants.c'; else $(CYGPATH_W) '$(srcdir)/constants.c'; fi`

util/__top_builddir__bin_snn_sim-io.o: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-io.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Tpo -c -o util/__top_builddir__bin_snn_sim-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_sim-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-io.o `test -f 'util/io.c' || echo '$(srcdir)/'`util/io.c

util/__top_builddir__bin_snn_sim-io.obj: util/io.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-io.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Tpo -c -o util/__top_builddir__bin_snn_sim-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-io.Po
#	source='util/io.c' object='util/__top_builddir__bin_snn_sim-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-io.obj `if test -f 'util/io.c'; then $(CYGPATH_W) 'util/io.c'; else $(CYGPATH_W) '$(srcdir)/util/io.c'; fi`

util/__top_builddir__bin_snn_sim-mem.o: util/mem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-mem.o -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Tpo -c -o util/__top_builddir__bin_snn_sim-mem.o `test -f 'util/mem.c' || echo '$(srcdir)/'`util/mem.c
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Po
#	source='util/mem.c' object='util/__top_builddir__bin_snn_sim-mem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-mem.o `test -f 'util/mem.c' || echo '$(srcdir)/'`util/mem.c

util/__top_builddir__bin_snn_sim-mem.obj: util/mem.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT util/__top_builddir__bin_snn_sim-mem.obj -MD -MP -MF util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Tpo -c -o util/__top_builddir__bin_snn_sim-mem.obj `if test -f 'util/mem.c'; then $(CYGPATH_W) 'util/mem.c'; else $(CYGPATH_W) '$(srcdir)/util/mem.c'; fi`
	$(am__mv) util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Tpo util/$(DEPDIR)/__top_builddir__bin_snn_sim-mem.Po
#	source='util/mem.c' object='util/__top_builddir__bin_snn_sim-mem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o util/__top_builddir__bin_snn_sim-mem.obj `if test -f 'util/mem.c'; then $(CYGPATH_W) 'util/mem.c'; else $(CYGPATH_W) '$(srcdir)/util/mem.c'; fi`

sim/__top_builddir__bin_snn_sim-runtime.o: sim/runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-runtime.o -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Tpo -c -o sim/__top_builddir__bin_snn_sim-runtime.o `test -f 'sim/runtime.c' || echo '$(srcdir)/'`sim/runtime.c
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Po
#	source='sim/runtime.c' object='sim/__top_builddir__bin_snn_sim-runtime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-runtime.o `test -f 'sim/runtime.c' || echo '$(srcdir)/'`sim/runtime.c

sim/__top_builddir__bin_snn_sim-runtime.obj: sim/runtime.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-runtime.obj -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Tpo -c -o sim/__top_builddir__bin_snn_sim-runtime.obj `if test -f 'sim/runtime.c'; then $(CYGPATH_W) 'sim/runtime.c'; else $(CYGPATH_W) '$(srcdir)/sim/runtime.c'; fi`
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-runtime.Po
#	source='sim/runtime.c' object='sim/__top_builddir__bin_snn_sim-runtime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-runtime.obj `if test -f 'sim/runtime.c'; then $(CYGPATH_W) 'sim/runtime.c'; else $(CYGPATH_W) '$(srcdir)/sim/runtime.c'; fi`

sim/__top_builddir__bin_snn_sim-configure.o: sim/configure.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-configure.o -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Tpo -c -o sim/__top_builddir__bin_snn_sim-configure.o `test -f 'sim/configure.c' || echo '$(srcdir)/'`sim/configure.c
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Po
#	source='sim/configure.c' object='sim/__top_builddir__bin_snn_sim-configure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-configure.o `test -f 'sim/configure.c' || echo '$(srcdir)/'`sim/configure.c

sim/__top_builddir__bin_snn_sim-configure.obj: sim/configure.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-configure.obj -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Tpo -c -o sim/__top_builddir__bin_snn_sim-configure.obj `if test -f 'sim/configure.c'; then $(CYGPATH_W) 'sim/configure.c'; else $(CYGPATH_W) '$(srcdir)/sim/configure.c'; fi`
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-configure.Po
#	source='sim/configure.c' object='sim/__top_builddir__bin_snn_sim-configure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-configure.obj `if test -f 'sim/configure.c'; then $(CYGPATH_W) 'sim/configure.c'; else $(CYGPATH_W) '$(srcdir)/sim/configure.c'; fi`

sim/__top_builddir__bin_snn_sim-serialize.o: sim/serialize.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-serialize.o -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Tpo -c -o sim/__top_builddir__bin_snn_sim-serialize.o `test -f 'sim/serialize.c' || echo '$(srcdir)/'`sim/serialize.c
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Po
#	source='sim/serialize.c' object='sim/__top_builddir__bin_snn_sim-serialize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-serialize.o `test -f 'sim/serialize.c' || echo '$(srcdir)/'`sim/serialize.c

sim/__top_builddir__bin_snn_sim-serialize.obj: sim/serialize.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-serialize.obj -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Tpo -c -o sim/__top_builddir__bin_snn_sim-serialize.obj `if test -f 'sim/serialize.c'; then $(CYGPATH_W) 'sim/serialize.c'; else $(CYGPATH_W) '$(srcdir)/sim/serialize.c'; fi`
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-serialize.Po
#	source='sim/serialize.c' object='sim/__top_builddir__bin_snn_sim-serialize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-serialize.obj `if test -f 'sim/serialize.c'; then $(CYGPATH_W) 'sim/serialize.c'; else $(CYGPATH_W) '$(srcdir)/sim/serialize.c'; fi`

./layers/__top_builddir__bin_snn_sim-poisson.o: ./layers/poisson.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./layers/__top_builddir__bin_snn_sim-poisson.o -MD -MP -MF ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Tpo -c -o ./layers/__top_builddir__bin_snn_sim-poisson.o `test -f './layers/poisson.c' || echo '$(srcdir)/'`./layers/poisson.c
	$(am__mv) ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Tpo ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Po
#	source='./layers/poisson.c' object='./layers/__top_builddir__bin_snn_sim-poisson.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./layers/__top_builddir__bin_snn_sim-poisson.o `test -f './layers/poisson.c' || echo '$(srcdir)/'`./layers/poisson.c

./layers/__top_builddir__bin_snn_sim-poisson.obj: ./layers/poisson.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT ./layers/__top_builddir__bin_snn_sim-poisson.obj -MD -MP -MF ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Tpo -c -o ./layers/__top_builddir__bin_snn_sim-poisson.obj `if test -f './layers/poisson.c'; then $(CYGPATH_W) './layers/poisson.c'; else $(CYGPATH_W) '$(srcdir)/./layers/poisson.c'; fi`
	$(am__mv) ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Tpo ./layers/$(DEPDIR)/__top_builddir__bin_snn_sim-poisson.Po
#	source='./layers/poisson.c' object='./layers/__top_builddir__bin_snn_sim-poisson.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o ./layers/__top_builddir__bin_snn_sim-poisson.obj `if test -f './layers/poisson.c'; then $(CYGPATH_W) './layers/poisson.c'; else $(CYGPATH_W) '$(srcdir)/./layers/poisson.c'; fi`

sim/__top_builddir__bin_snn_sim-sim.o: sim/sim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-sim.o -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Tpo -c -o sim/__top_builddir__bin_snn_sim-sim.o `test -f 'sim/sim.c' || echo '$(srcdir)/'`sim/sim.c
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Po
#	source='sim/sim.c' object='sim/__top_builddir__bin_snn_sim-sim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-sim.o `test -f 'sim/sim.c' || echo '$(srcdir)/'`sim/sim.c

sim/__top_builddir__bin_snn_sim-sim.obj: sim/sim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT sim/__top_builddir__bin_snn_sim-sim.obj -MD -MP -MF sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Tpo -c -o sim/__top_builddir__bin_snn_sim-sim.obj `if test -f 'sim/sim.c'; then $(CYGPATH_W) 'sim/sim.c'; else $(CYGPATH_W) '$(srcdir)/sim/sim.c'; fi`
	$(am__mv) sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Tpo sim/$(DEPDIR)/__top_builddir__bin_snn_sim-sim.Po
#	source='sim/sim.c' object='sim/__top_builddir__bin_snn_sim-sim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o sim/__top_builddir__bin_snn_sim-sim.obj `if test -f 'sim/sim.c'; then $(CYGPATH_W) 'sim/sim.c'; else $(CYGPATH_W) '$(srcdir)/sim/sim.c'; fi`

learn/__top_builddir__bin_snn_sim-triple_stdp.o: learn/triple_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-triple_stdp.o -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-triple_stdp.o `test -f 'learn/triple_stdp.c' || echo '$(srcdir)/'`learn/triple_stdp.c
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Po
#	source='learn/triple_stdp.c' object='learn/__top_builddir__bin_snn_sim-triple_stdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-triple_stdp.o `test -f 'learn/triple_stdp.c' || echo '$(srcdir)/'`learn/triple_stdp.c

learn/__top_builddir__bin_snn_sim-triple_stdp.obj: learn/triple_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-triple_stdp.obj -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-triple_stdp.obj `if test -f 'learn/triple_stdp.c'; then $(CYGPATH_W) 'learn/triple_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/triple_stdp.c'; fi`
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-triple_stdp.Po
#	source='learn/triple_stdp.c' object='learn/__top_builddir__bin_snn_sim-triple_stdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-triple_stdp.obj `if test -f 'learn/triple_stdp.c'; then $(CYGPATH_W) 'learn/triple_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/triple_stdp.c'; fi`

learn/__top_builddir__bin_snn_sim-optim.o: learn/optim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-optim.o -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Tpo -c -o learn/__top_builddir__bin_snn_sim-optim.o `test -f 'learn/optim.c' || echo '$(srcdir)/'`learn/optim.c
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Po
#	source='learn/optim.c' object='learn/__top_builddir__bin_snn_sim-optim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-optim.o `test -f 'learn/optim.c' || echo '$(srcdir)/'`learn/optim.c

learn/__top_builddir__bin_snn_sim-optim.obj: learn/optim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-optim.obj -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Tpo -c -o learn/__top_builddir__bin_snn_sim-optim.obj `if test -f 'learn/optim.c'; then $(CYGPATH_W) 'learn/optim.c'; else $(CYGPATH_W) '$(srcdir)/learn/optim.c'; fi`
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-optim.Po
#	source='learn/optim.c' object='learn/__top_builddir__bin_snn_sim-optim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-optim.obj `if test -f 'learn/optim.c'; then $(CYGPATH_W) 'learn/optim.c'; else $(CYGPATH_W) '$(srcdir)/learn/optim.c'; fi`

learn/__top_builddir__bin_snn_sim-res_stdp.o: learn/res_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-res_stdp.o -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-res_stdp.o `test -f 'learn/res_stdp.c' || echo '$(srcdir)/'`learn/res_stdp.c
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Po
#	source='learn/res_stdp.c' object='learn/__top_builddir__bin_snn_sim-res_stdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-res_stdp.o `test -f 'learn/res_stdp.c' || echo '$(srcdir)/'`learn/res_stdp.c

learn/__top_builddir__bin_snn_sim-res_stdp.obj: learn/res_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-res_stdp.obj -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-res_stdp.obj `if test -f 'learn/res_stdp.c'; then $(CYGPATH_W) 'learn/res_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/res_stdp.c'; fi`
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-res_stdp.Po
#	source='learn/res_stdp.c' object='learn/__top_builddir__bin_snn_sim-res_stdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-res_stdp.obj `if test -f 'learn/res_stdp.c'; then $(CYGPATH_W) 'learn/res_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/res_stdp.c'; fi`

learn/__top_builddir__bin_snn_sim-simple_stdp.o: learn/simple_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-simple_stdp.o -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-simple_stdp.o `test -f 'learn/simple_stdp.c' || echo '$(srcdir)/'`learn/simple_stdp.c
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Po
#	source='learn/simple_stdp.c' object='learn/__top_builddir__bin_snn_sim-simple_stdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-simple_stdp.o `test -f 'learn/simple_stdp.c' || echo '$(srcdir)/'`learn/simple_stdp.c

learn/__top_builddir__bin_snn_sim-simple_stdp.obj: learn/simple_stdp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT learn/__top_builddir__bin_snn_sim-simple_stdp.obj -MD -MP -MF learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Tpo -c -o learn/__top_builddir__bin_snn_sim-simple_stdp.obj `if test -f 'learn/simple_stdp.c'; then $(CYGPATH_W) 'learn/simple_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/simple_stdp.c'; fi`
	$(am__mv) learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Tpo learn/$(DEPDIR)/__top_builddir__bin_snn_sim-simple_stdp.Po
#	source='learn/simple_stdp.c' object='learn/__top_builddir__bin_snn_sim-simple_stdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o learn/__top_builddir__bin_snn_sim-simple_stdp.obj `if test -f 'learn/simple_stdp.c'; then $(CYGPATH_W) 'learn/simple_stdp.c'; else $(CYGPATH_W) '$(srcdir)/learn/simple_stdp.c'; fi`

layers/__top_builddir__bin_snn_sim-wta.o: layers/wta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-wta.o -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Tpo -c -o layers/__top_builddir__bin_snn_sim-wta.o `test -f 'layers/wta.c' || echo '$(srcdir)/'`layers/wta.c
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Po
#	source='layers/wta.c' object='layers/__top_builddir__bin_snn_sim-wta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-wta.o `test -f 'layers/wta.c' || echo '$(srcdir)/'`layers/wta.c

layers/__top_builddir__bin_snn_sim-wta.obj: layers/wta.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-wta.obj -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Tpo -c -o layers/__top_builddir__bin_snn_sim-wta.obj `if test -f 'layers/wta.c'; then $(CYGPATH_W) 'layers/wta.c'; else $(CYGPATH_W) '$(srcdir)/layers/wta.c'; fi`
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wta.Po
#	source='layers/wta.c' object='layers/__top_builddir__bin_snn_sim-wta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-wta.obj `if test -f 'layers/wta.c'; then $(CYGPATH_W) 'layers/wta.c'; else $(CYGPATH_W) '$(srcdir)/layers/wta.c'; fi`

layers/__top_builddir__bin_snn_sim-adapt.o: layers/adapt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-adapt.o -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Tpo -c -o layers/__top_builddir__bin_snn_sim-adapt.o `test -f 'layers/adapt.c' || echo '$(srcdir)/'`layers/adapt.c
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Po
#	source='layers/adapt.c' object='layers/__top_builddir__bin_snn_sim-adapt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-adapt.o `test -f 'layers/adapt.c' || echo '$(srcdir)/'`layers/adapt.c

layers/__top_builddir__bin_snn_sim-adapt.obj: layers/adapt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-adapt.obj -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Tpo -c -o layers/__top_builddir__bin_snn_sim-adapt.obj `if test -f 'layers/adapt.c'; then $(CYGPATH_W) 'layers/adapt.c'; else $(CYGPATH_W) '$(srcdir)/layers/adapt.c'; fi`
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-adapt.Po
#	source='layers/adapt.c' object='layers/__top_builddir__bin_snn_sim-adapt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-adapt.obj `if test -f 'layers/adapt.c'; then $(CYGPATH_W) 'layers/adapt.c'; else $(CYGPATH_W) '$(srcdir)/layers/adapt.c'; fi`

layers/__top_builddir__bin_snn_sim-wtaadapt.o: layers/wtaadapt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-wtaadapt.o -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Tpo -c -o layers/__top_builddir__bin_snn_sim-wtaadapt.o `test -f 'layers/wtaadapt.c' || echo '$(srcdir)/'`layers/wtaadapt.c
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Po
#	source='layers/wtaadapt.c' object='layers/__top_builddir__bin_snn_sim-wtaadapt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-wtaadapt.o `test -f 'layers/wtaadapt.c' || echo '$(srcdir)/'`layers/wtaadapt.c

layers/__top_builddir__bin_snn_sim-wtaadapt.obj: layers/wtaadapt.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT layers/__top_builddir__bin_snn_sim-wtaadapt.obj -MD -MP -MF layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Tpo -c -o layers/__top_builddir__bin_snn_sim-wtaadapt.obj `if test -f 'layers/wtaadapt.c'; then $(CYGPATH_W) 'layers/wtaadapt.c'; else $(CYGPATH_W) '$(srcdir)/layers/wtaadapt.c'; fi`
	$(am__mv) layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Tpo layers/$(DEPDIR)/__top_builddir__bin_snn_sim-wtaadapt.Po
#	source='layers/wtaadapt.c' object='layers/__top_builddir__bin_snn_sim-wtaadapt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o layers/__top_builddir__bin_snn_sim-wtaadapt.obj `if test -f 'layers/wtaadapt.c'; then $(CYGPATH_W) 'layers/wtaadapt.c'; else $(CYGPATH_W) '$(srcdir)/layers/wtaadapt.c'; fi`

__top_builddir__bin_snn_sim-snn_sim.o: snn_sim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-snn_sim.o -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Tpo -c -o __top_builddir__bin_snn_sim-snn_sim.o `test -f 'snn_sim.c' || echo '$(srcdir)/'`snn_sim.c
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Po
#	source='snn_sim.c' object='__top_builddir__bin_snn_sim-snn_sim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-snn_sim.o `test -f 'snn_sim.c' || echo '$(srcdir)/'`snn_sim.c

__top_builddir__bin_snn_sim-snn_sim.obj: snn_sim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -MT __top_builddir__bin_snn_sim-snn_sim.obj -MD -MP -MF $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Tpo -c -o __top_builddir__bin_snn_sim-snn_sim.obj `if test -f 'snn_sim.c'; then $(CYGPATH_W) 'snn_sim.c'; else $(CYGPATH_W) '$(srcdir)/snn_sim.c'; fi`
	$(am__mv) $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Tpo $(DEPDIR)/__top_builddir__bin_snn_sim-snn_sim.Po
#	source='snn_sim.c' object='__top_builddir__bin_snn_sim-snn_sim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(__top_builddir__bin_snn_sim_CFLAGS) $(CFLAGS) -c -o __top_builddir__bin_snn_sim-snn_sim.obj `if test -f 'snn_sim.c'; then $(CYGPATH_W) 'snn_sim.c'; else $(CYGPATH_W) '$(srcdir)/snn_sim.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf $(top_builddir)/bin/.libs $(top_builddir)/bin/_libs
	-rm -rf .libs _libs
	-rm -rf ./layers/.libs ./layers/_libs
	-rm -rf ./util/.libs ./util/_libs
	-rm -rf layers/.libs layers/_libs
	-rm -rf learn/.libs learn/_libs
	-rm -rf sim/.libs sim/_libs
	-rm -rf util/.libs util/_libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f layers/$(DEPDIR)/$(am__dirstamp)
	-rm -f layers/$(am__dirstamp)
	-rm -f learn/$(DEPDIR)/$(am__dirstamp)
	-rm -f learn/$(am__dirstamp)
	-rm -f prep/$(DEPDIR)/$(am__dirstamp)
	-rm -f prep/$(am__dirstamp)
	-rm -f sim/$(DEPDIR)/$(am__dirstamp)
	-rm -f sim/$(am__dirstamp)
	-rm -f util/$(DEPDIR)/$(am__dirstamp)
	-rm -f util/$(am__dirstamp)
	-test -z "$(top_builddir)/bin/$(am__dirstamp)" || rm -f $(top_builddir)/bin/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) ./layers/$(DEPDIR) ./util/$(DEPDIR) layers/$(DEPDIR) learn/$(DEPDIR) prep/$(DEPDIR) sim/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) ./layers/$(DEPDIR) ./util/$(DEPDIR) layers/$(DEPDIR) learn/$(DEPDIR) prep/$(DEPDIR) sim/$(DEPDIR) util/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
