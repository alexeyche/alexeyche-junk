s = RSim$new(const, statLevel, jobs)
#spikes = getSpikesFromMatrix(loadMatrix("/home/alexeyche/prog/sim/spikes/ucr/1_train_spikes",1))
spikes=blank_net(M)
spikes[[1]] = c(10,20)
spikes[[2]] = c(20,30)
s$setInputSpikes(spikes)
out_sp = s$run()
out_sp
out_sp = s$run()
out_sp
s$printInputSpikes()
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
s$setInputSpikes(spikes)
out_sp = s$run()
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
#!/usr/bin/env RScript
require(Rsnn)
M = 10
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 10
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "SimpleSTDP")
s = RSim$new(const, statLevel, jobs)
#spikes = getSpikesFromMatrix(loadMatrix("/home/alexeyche/prog/sim/spikes/ucr/1_train_spikes",1))
spikes=blank_net(M-1)
spikes[[1]] = c(10,20)
spikes[[2]] = c(20,30)
s$setInputSpikes(spikes)
spikes=blank_net(M)
spikes[[1]] = c(10,20)
spikes[[2]] = c(20,30)
s$setInputSpikes(spikes)
require(Rsnn)
M = 10
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 10
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "SimpleSTDP")
s = RSim$new(const, statLevel, jobs)
require(Rsnn)
M = 10
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 10
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "SimpleSTDP")
s = RSim$new(const, statLevel, jobs)
require(Rsnn)
M = 10
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 10
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "SimpleSTDP")
s = RSim$new(const, statLevel, jobs)
require(Rsnn)
M = 10
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 10
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "SimpleSTDP")
s = RSim$new(const, statLevel, jobs)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
s$setInputSpikes(spikes)
out_sp = s$run()
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
gr_pl(t(s$W()[[1]]))
s$setInputSpikes(spikes)
out_sp = s$run()
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
spikes
sapply(max(spikes))
sapply(spikes,max)
max(sapply(spikes,max))
for(i in 1:10) {
s$setInputSpikes(spikes)
out_sp = s$run()
}
gr_pl(t(s$W()[[1]]))
const
60000/15000
60000/15000.
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
gr_pl(t(s$W()[[1]]))
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","learning_rule", "OptimalSTDP")
const$setValue("layer","lrate", 0.04)
const
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
for(i in 1:20) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
prast(spikes,T0=0,Tmax=1000)
#!/usr/bin/env RScript
require(Rsnn)
M = 100
const_ini = "/home/alexeyche/prog/alexeyche-junk/cns/c/snn_sim/constants.ini"
N = 100
jobs = 4
statLevel = 0
const = RConstants$new(const_ini)
const$setValue("sim","M", M)
const$setValue("layer","N", N)
const$setValue("layer","neuron_type", "WtaLayer")
const$setValue("layer","learning_rule", "SimpleSTDP")
const$setValue("layer","lrate", 0.04)
const$setValue("layer","weight_decay_factor", 0.015)
const
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
max_ep = 100
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
setwd("~/prog/alexeyche-junk/cns/R/filt")
source('nengo.R')
source('util.R')
source('serialize_to_bin.R')
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 50
rate_low = 0
rate_high = 50
v_tresh = 1
Xi = sample(1:10)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
X
plotl(X)
M = 25
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
n = list(v=rep(0, M), ref=rep(0,M))
spikes = NULL
for(i in 1:length(X)) {
x = X[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, as.integer(current_spikes))
}
gr_pl(spikes)
require(Rsnn)
#!/usr/bin/env RScript
require(Rsnn)
source('nengo.R')
source('util.R')
source('serialize_to_bin.R')
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 50
rate_low = 0
rate_high = 50
v_tresh = 1
Xi = sample(1:10)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
M = 25
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
n = list(v=rep(0, M), ref=rep(0,M))
spikes = NULL
for(i in 1:length(X)) {
x = X[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, as.integer(current_spikes))
}
gr_pl(spikes)
net = blank_net(M)
current_spikes
require(Rsnn)
source('nengo.R')
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 50
rate_low = 0
rate_high = 50
v_tresh = 1
Xi = sample(1:10)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
M = 25
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
n = list(v=rep(0, M), ref=rep(0,M))
net = blank_net(M)
spikes = NULL
for(i in 1:length(X)) {
x = X[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, as.integer(current_spikes))
}
current_spikes
which(current_spikes)
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
net
prast(net)
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
prast(net)
X
plot_tuning_curves(encoder, gain, bias)
X
require(Rsnn)
source('nengo.R')
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 50
rate_low = 25
rate_high = 50
v_tresh = 1
Xi = sample(1:1)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
M = 25
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
plot_tuning_curves(encoder, gain, bias)
require(Rsnn)
source('nengo.R')
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 100
rate_low = 25
rate_high = 50
v_tresh = 1
Xi = sample(1:1)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
plot_tuning_curves(encoder, gain, bias)
n = list(v=rep(0, M), ref=rep(0,M))
net = blank_net(M)
spikes = NULL
for(i in 1:length(X)) {
x = X[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, as.integer(current_spikes))
for(ni in  which(current_spikes)) {
net[[ni]] <- c(net[[ni]], i)
}
}
prast(net)
Xi = sample(1:100)
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
}
X =  2*(X-min(X))/(max(X)-min(X))-1
c(gain, bias) := generate_gain_and_bias(M, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
n = list(v=rep(0, M), ref=rep(0,M))
net = blank_net(M)
spikes = NULL
for(i in 1:length(X)) {
x = X[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, as.integer(current_spikes))
for(ni in  which(current_spikes)) {
net[[ni]] <- c(net[[ni]], i)
}
}
prast(net,T0=0,Tmax=1000)
length(X)
prast(net,T0=0,Tmax=120)
prast(net,T0=0,Tmax=240)
Xi = sample(1:100)
timeline = NULL
X = NULL
for(i in Xi) {
X = c(X, loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_120",i)[1,])
timeline = c(timeline, length(X))
}
X
timeline
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
prast(net,T0=0,T=240)
spikes=net
source('~/.active-rstudio-document', echo=TRUE)
const$setValue("layer","net_edge_prob", 1.0)
const
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
max_ep = 100
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
max_ep = 100
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
max_ep = 100
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
max_ep = 100
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
#prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
prast(spikes,T0=0,Tmax=512)
spikes
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
prast(spikes,T0=0,Tmax=512)
spikes
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
stat = s$getLayerStat(0)
#prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
max_ep = 40
for(i in 1:max_ep) {
s$setInputSpikes(spikes)
out_sp = s$run()
cat(i,"\n")
}
stat = s$getLayerStat(0)
#prast(out_sp,T0=0,Tmax=1000)
gr_pl(t(s$W()[[1]]))
source('~/prog/alexeyche-junk/cns/R/filt/main.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/Rsnn_scripts/test.R', echo=TRUE)
