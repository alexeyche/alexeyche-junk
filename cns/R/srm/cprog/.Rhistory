source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
tr_i
tr_i=1
sigma_i=1
setwd("~/prog/alexeyche-junk/cns/R/srm/cprog")
library(snn)
source('util.R')
source('../eval_funcs.R')
source('../ucr_ts.R')
source('../plot_funcs.R')
ucr_spikes_dir = "/home/alexeyche/prog/sim/ucr_spikes"
gitdir = "/home/alexeyche/prog/alexeyche-junk"
rundir = "/home/alexeyche/prog/sim/runs"
#runname="test_run"
#runname = "n50_no_conn"
runname = "n50_conn"
ep = 20
srm_sim_exec = sprintf("%s/cns/c/bin/srm_sim", gitdir)
workdir = sprintf("%s/%s", rundir, runname)
const_ini = sprintf("%s/constants.ini", workdir)
M = as.integer(get_const("M"))
N = as.integer(get_const("N"))
Mids=1:M
Nids=(M+1):(M+N)
input_file = sprintf("%s/train/1_ucr_20elems_3classes_1000dur", ucr_spikes_dir)
labels = c(loadMatrix(input_file,2))
timeline = c(loadMatrix(input_file,3))
test_input_file =  sprintf("%s/test/ucr_20elems_3classes_1000dur", ucr_spikes_dir)
test_labels = c(loadMatrix(test_input_file,2))
test_timeline = c(loadMatrix(test_input_file,3))
duration = timeline[2]-timeline[1]
evaldir = sprintf("%s/eval", workdir)
dir.create(file.path(evaldir), showWarnings = FALSE)
evalepdir = sprintf("%s/%s", evaldir, ep)
dir.create(file.path(evalepdir), showWarnings = FALSE)
model_file = sprintf("%s/%s_model", workdir, ep)
################
tresholds = seq(-65, -55, length.out=10)
sigmas = seq(10,50, length.out=10)
rates = matrix(0, nrow=length(tresholds), ncol=length(sigmas))
tr = tresholds[tr_i]
kernel_sigma = sigmas[sigma_i]
output_file = sprintf("%s/%s_output_spikes", evalepdir, tr_i)
test_output_file = sprintf("%s/%s_test_output_spikes", evalepdir, tr_i)
kernel_options = list(T0=0,Tmax=duration, quad=256, sigma=kernel_sigma, tR=1)
train_net = getSpikesFromMatrix(loadMatrix(output_file,1))
test_net = getSpikesFromMatrix(loadMatrix(test_output_file,1))
train_resp = decomposePatterns(train_net[Nids], timeline, labels)
test_resp = decomposePatterns(test_net[Nids], test_timeline, test_labels)
plot_rastl(train_resp[[1]]$data)
plot_rastl(train_resp[[2]]$data)
plot_rastl(train_resp[[3]]$data)
plot_rastl(train_resp[[4]]$data)
plot_rastl(train_resp[[5]]$data)
tr_i=5
tr = tresholds[tr_i]
kernel_sigma = sigmas[sigma_i]
output_file = sprintf("%s/%s_output_spikes", evalepdir, tr_i)
test_output_file = sprintf("%s/%s_test_output_spikes", evalepdir, tr_i)
kernel_options = list(T0=0,Tmax=duration, quad=256, sigma=kernel_sigma, tR=1)
train_net = getSpikesFromMatrix(loadMatrix(output_file,1))
test_net = getSpikesFromMatrix(loadMatrix(test_output_file,1))
train_resp = decomposePatterns(train_net[Nids], timeline, labels)
test_resp = decomposePatterns(test_net[Nids], test_timeline, test_labels)
plot_rastl(train_resp[[5]]$data)
plot_rastl(train_resp[[1]]$data)
for(tr_i in 1:length(tresholds)) {
for(sigma_i in 1:length(sigmas)) {
tr = tresholds[tr_i]
kernel_sigma = sigmas[sigma_i]
output_file = sprintf("%s/%s_output_spikes", evalepdir, tr_i)
test_output_file = sprintf("%s/%s_test_output_spikes", evalepdir, tr_i)
kernel_options = list(T0=0,Tmax=duration, quad=256, sigma=kernel_sigma, tR=1)
train_net = getSpikesFromMatrix(loadMatrix(output_file,1))
test_net = getSpikesFromMatrix(loadMatrix(test_output_file,1))
train_resp = decomposePatterns(train_net[Nids], timeline, labels)
test_resp = decomposePatterns(test_net[Nids], test_timeline, test_labels)
c(r, confm_data) := ucr_test(train_resp, test_resp, cross_corr_alg, FALSE)
rates[tr_i, sigma_i] = r
cat("tr: ", tr, "sigma: ", kernel_sigma, "\n")
}
}
saveMatrixList(sprintf("%s/eval_output", evalepdir) ,
list(rates, matrix(tresholds), matrix(sigmas)) )
gr_pl(rates)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
rates
tresholds
rates
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
rates
gr_pl(rates)
gr_pl
rates
sigmas
sigmas = seq(1,20, length.out=10)
sigmas
for(tr_i in 1:length(tresholds)) {
for(sigma_i in 1:length(sigmas)) {
tr = tresholds[tr_i]
kernel_sigma = sigmas[sigma_i]
output_file = sprintf("%s/%s_output_spikes", evalepdir, tr_i)
test_output_file = sprintf("%s/%s_test_output_spikes", evalepdir, tr_i)
kernel_options = list(T0=0,Tmax=duration, quad=256, sigma=kernel_sigma, tR=1)
train_net = getSpikesFromMatrix(loadMatrix(output_file,1))
test_net = getSpikesFromMatrix(loadMatrix(test_output_file,1))
train_resp = decomposePatterns(train_net[Nids], timeline, labels)
test_resp = decomposePatterns(test_net[Nids], test_timeline, test_labels)
c(r, confm_data) := ucr_test(train_resp, test_resp, cross_corr_alg, FALSE)
rates[tr_i, sigma_i] = r
cat("tr: ", tr, "sigma: ", kernel_sigma, "\n")
}
}
saveMatrixList(sprintf("%s/eval_output", evalepdir) ,
list(rates, matrix(tresholds), matrix(sigmas)) )
rates
gr_pl(rates)
rates
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
gr_pl(rates)
rates
tresholds
gr_pl(t(rates))
rates
tresholds
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
rates
train_resp[[1]]
train_resp[[1]]$data
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
rates
train_resp[[1]]$data
plot_rastl(train_resp[[1]]$data)
plot_rastl(train_resp[[2]]$data)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
rates
plot_rastl(train_resp[[2]]$data)
plot_rastl(train_resp[[1]]$data)
plot_rastl(train_resp[[3]]$data)
plot_rastl(train_resp[[4]]$data)
plot_rastl(train_resp[[5]]$data)
plot_rastl(train_resp[[6]]$data)
plot_rastl(train_resp[[7]]$data)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/eval_model.R', echo=TRUE)
library(snn)
get_const
