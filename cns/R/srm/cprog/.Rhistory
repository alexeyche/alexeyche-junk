source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,2]*ps_ep[,3], type="l")
load()
plot(ps_ep[,1], ps_ep[,2]*ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,3], type="l")
load()
plot(ps_ep[,1], ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.35
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.55
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.55
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.95
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.55
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
alpha <- 0.45
beta <- 0.55
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.95
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.45
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.15
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.85
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 2
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 2
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
# stochastic threshold g(u):
alpha <- 0.5
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
# stochastic threshold g(u):
alpha <- 0.5
beta <- 0.45
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
# stochastic threshold g(u):
alpha <- 0.5
beta <- 0.65
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
p_stroke <- function(u) {
beta/(1+exp(alpha*(tr-u)))
}
uu <- seq(-70,-40,by=0.1)
plot(uu, p_stroke(uu),type="l")
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
load()
plot(ps_ep[,1], ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
load()
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
load()
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,3], type="l")
load()
plot(ps_ep[,1], ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,3], type="l")
load()
plot(ps_ep[,1], ps_ep[,3], type="l")
load()
plot(ps_ep[,1], ps_ep[,3], type="l")
plot(ps_ep[,1], ps_ep[,2], type="l")
plot(ps_ep[,1], ps_ep[,3], type="l")
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/serv.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
plot_rast(rast_last)
plot_rast <- function(raster) {
x <- c()
y <- c()
for(i in 1:nrow(raster)) {
spikes <- which(raster[i,]>0)
x <- c(x, raster[i,spikes])
y <- c(y, rep(i, length(spikes)))
}
plot(x,y)
}
plot_rast(rast_last)
rast_last <- get(l[[sl[length(sl)] ]])
plot_rast(rast_last)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
load()
filled.contour(weights)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
length(m)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
length(m)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
length(m)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
length(m)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
length(m)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
plot_rast <- function(raster, newplot=TRUE, c=1) {
x <- c()
y <- c()
for(i in 1:nrow(raster)) {
spikes <- which(raster[i,]>0)
x <- c(x, raster[i,spikes])
y <- c(y, rep(i, length(spikes)))
}
if(newplot) {
plot(x,y,col=c)
} else {
lines(x,y,col=c)
}
}
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
plot_rast <- function(raster, newplot=TRUE, c=1) {
x <- c()
y <- c()
for(i in 1:nrow(raster)) {
spikes <- which(raster[i,]>0)
x <- c(x, raster[i,spikes])
y <- c(y, rep(i, length(spikes)))
}
if(newplot) {
plot(x,y,col=c)
} else {
points(x,y,col=c)
}
}
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/tsne_stuff.R', echo=TRUE)
allm <- NULL
newp=TRUE
par(mfrow=c(1,3))
for(j in 1:3) {
for(i in 1:10) {
for(ep in 0:9) {
m <- read.table(paste("/var/tmp/d",j,"_",i,"_ep_",ep,"_resp.csv",sep=""), sep=",")
plot_rast(m, newp,j)
if(newp) { newp=FALSE }
# m<-unlist(m)
# m <- c(m, rep(0, max_length-length(m)))
# allm <- rbind(allm, m)
}
}
newp=TRUE
}
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/gen_data.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/serv.R', echo=TRUE)
load()
filled.contour(weights)
load()
load()
require(stringr)
l <- list()
for(i in ls()) {
m <- str_match(i, "raster([0-9]+)")
if(!is.na(m[2])) {
l[[m[2]]] <- i
}
}
rast_last <- get(l[[sl[length(sl)] ]])
sl <- sort(names(l))
rast_last <- get(l[[sl[length(sl)] ]])
plot_rast(rast_last)
plot_rast <- function(raster, newplot=TRUE, c=1) {
x <- c()
y <- c()
for(i in 1:nrow(raster)) {
spikes <- which(raster[i,]>0)
x <- c(x, raster[i,spikes])
y <- c(y, rep(i, length(spikes)))
}
if(newplot) {
plot(x,y,col=c)
} else {
points(x,y,col=c)
}
}
plot_rast(rast_last)
load()
load()
require(stringr)
l <- list()
for(i in ls()) {
m <- str_match(i, "raster([0-9]+)")
if(!is.na(m[2])) {
l[[m[2]]] <- i
}
}
sl <- sort(names(l))
rast_last <- get(l[[sl[length(sl)] ]])
plot_rast(rast_last)
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
gen_ou <- function() {
set.seed(8)
d1 <- ornstein_uhlenbeck(10,999, 0.2, 1, 0.007, 0.15)
d2 <- ornstein_uhlenbeck(10,999, 0.19, 0.5, 0.01, 0.15)
d3 <- ornstein_uhlenbeck(10,999, 0.15, 0.5, 0.01, 0.21)
write.table(d1, "/home/alexeyche/my/sim/stimuli/d1.csv", sep=",", col.names=F, row.names=F)
write.table(d2, "/home/alexeyche/my/sim/stimuli/d2.csv", sep=",", col.names=F, row.names=F)
write.table(d3, "/home/alexeyche/my/sim/stimuli/d3.csv", sep=",", col.names=F, row.names=F)
for(i in 1:10) {
set.seed(i+10)
d1c <- ornstein_uhlenbeck(10,999, 0.2, 1, 0.007, 0.15)
d2c <- ornstein_uhlenbeck(10,999, 0.19, 0.5, 0.01, 0.15)
d3c <- ornstein_uhlenbeck(10,999, 0.15, 0.5, 0.01, 0.21)
write.table(d1c, paste("/home/alexeyche/my/sim/stimuli/d1_",i,".csv",sep=""), sep=",", col.names=F, row.names=F)
write.table(d2c, paste("/home/alexeyche/my/sim/stimuli/d2_",i,".csv",sep=""), sep=",", col.names=F, row.names=F)
write.table(d3c, paste("/home/alexeyche/my/sim/stimuli/d3_",i,".csv",sep=""), sep=",", col.names=F, row.names=F)
}
plot(d1, type="l", col="blue")
lines(d2, col="red")
lines(d3, col="green")
}
seq(1:50)
plot(seq(1:50))
seq(50,1)
gen_sd <- function() {
sd1 <- seq(1, 50)
sd2 <- seq(50, 1)
write.table(sd1, "/home/alexeyche/my/sim/stimuli/sd1.csv", sep=",", col.names=F, row.names=F)
write.table(sd2, "/home/alexeyche/my/sim/stimuli/sd2.csv", sep=",", col.names=F, row.names=F)
}
gen_sd()
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
filled.contour(weights)
load()
plot_rast(raster1388407401)
load()
gr_stat_pot0
plot(gr_stat_pot0[1,])
plot(gr_stat_pot0[2,])
load()
plot(gr_stat_pot0[2,])
plot(gr_stat_pot0[1,])
load()
plot(gr_stat_prob0[1,])
plot(gr_stat_prob0[2,])
plot(gr_stat_pot0[1,])
plot(gr_stat_pot0[1,1:100])
plot(gr_stat_pot0[1,900:1000])
load()
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
plot_rast(rast_last)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/main.R', echo=TRUE)
gen_sd <- function() {
sd1 <- seq(1, 10)
sd2 <- seq(10, 1)
write.table(sd1, "/home/alexeyche/my/sim/stimuli/sd1.csv", sep=",", col.names=F, row.names=F)
write.table(sd2, "/home/alexeyche/my/sim/stimuli/sd2.csv", sep=",", col.names=F, row.names=F)
}
gen_sd()
us<-seq(-70, -25, by=0.1)
plot(us, g(us),type="l")
# stochastic threshold g(u):
beta <- 2
alpha <- 2
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
plot(us, g(us),type="l")
# stochastic threshold g(u):
beta <- 0.65
alpha <- 0.65
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
plot(us, g(us),type="l")
beta <- 100
alpha <- 100
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
plot(us, g(us),type="l")
beta <- 100
alpha <- 1
tr <- -50 # mV
g <- Vectorize(function(u) {
(beta/alpha)*(log(1+exp(alpha*(tr-u))) -alpha*(tr-u))
})
plot(us, g(us),type="l")
setwd("~/my/git/alexeyche-junk/cns/R/srm/cprog")
source('~/my/git/alexeyche-junk/cns/R/srm/cprog/gen_ucr_data.R', echo=TRUE)
