for(i in 1:(length(x_ts))) {
w_i = (i-L+1):i
w_i = w_i[w_i>0]
xv = c(xv, t(rev(w[1:length(w_i)])) %*% sp[w_i])
}
plotl(xv)
E = sum((x_ts - xv)^2)
E
conv = function(x, w) {
xv = NULL
L = length(w)
for(i in 1:length(x)) {
w_i = (i-L+1):i
w_i = w_i[w_i>0]
xv = c(xv, t(rev(w[1:length(w_i)])) %*% x[w_i])
}
return(xv)
}
sp_c = conv(sp, w)
plotl(sp_c)
L:length(x_ts)
length(L:length(x_ts))
length(x_ts)-L+1
E = sum((x_ts - xv)^2)
Rxx = matrix(0, nrow=L, ncol=L)
rxd = rep(0, L)
for(i in L:length(x_ts)) {
w_i = (i-L+1):i
Rxx = Rxx + x_ts[w_i] %*% t(x_ts[w_i])
rxd = rxd + x_ts[w_i] * sp[w_i]
}
#Rxx = sapply(1:nrow(Rxx), function(i) rev(Rxx[i,]))
#rxd = rev(rxd)
Rxx = Rxx/(length(x_ts)-L+1)
rxd = rxd/(length(x_ts)-L+1)
w2 = ginv(Rxx) %*% rxd
sp_c2 = conv(sp, w2)
E2 = sum((x_ts - xv)^2)
plotl(sp_c2)
L = 100
big_id = which(rowSums(spikes) >= max(rowSums(spikes)))
sp = as.matrix(spikes[big_id[1], ])
sp_t = which(sp == 1)
x_ts = x_ts[1:100]
sp = sp[1:100]
w = as.matrix(exp(-(1:L)/10)) # default filter
filt = Vectorize(function(s, w) {
if(s<0) return(0)
if(s>=L) return(0)
w[s+1]
},"s")
conv = function(x, w) {
xv = NULL
L = length(w)
for(i in 1:length(x)) {
w_i = (i-L+1):i
w_i = w_i[w_i>0]
xv = c(xv, t(rev(w[1:length(w_i)])) %*% x[w_i])
}
return(xv)
}
sp_c = conv(sp, w)
plotl(sp_c)
E = sum((x_ts - xv)^2)
x_ts
E = sum((x_ts - sp_c)^2)
E
Rxx = matrix(0, nrow=L, ncol=L)
rxd = rep(0, L)
for(i in L:length(x_ts)) {
w_i = (i-L+1):i
Rxx = Rxx + x_ts[w_i] %*% t(x_ts[w_i])
rxd = rxd + x_ts[w_i] * sp[w_i]
}
#Rxx = sapply(1:nrow(Rxx), function(i) rev(Rxx[i,]))
#rxd = rev(rxd)
Rxx = Rxx/(length(x_ts)-L+1)
rxd = rxd/(length(x_ts)-L+1)
w2 = ginv(Rxx) %*% rxd
w2
plotl(w2)
sp_c2 = conv(sp, w2)
E2 = sum((x_ts - sp_c2)^2)
E2
plotl(sp_c2)
length(x_ts)-L+1
gr_pl(Rxx)
plotl(sp_c2)
x_ts = x_ts[1:200]
sp = sp[1:200]
w = as.matrix(exp(-(1:L)/10)) # default filter
filt = Vectorize(function(s, w) {
if(s<0) return(0)
if(s>=L) return(0)
w[s+1]
},"s")
conv = function(x, w) {
xv = NULL
L = length(w)
for(i in 1:length(x)) {
w_i = (i-L+1):i
w_i = w_i[w_i>0]
xv = c(xv, t(rev(w[1:length(w_i)])) %*% x[w_i])
}
return(xv)
}
sp_c = conv(sp, w)
plotl(sp_c)
x_ts = loadMatrix("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512",1)[1,]
x_ts =  2*(x_ts-min(x_ts))/(max(x_ts)-min(x_ts))-1
c(gain, bias) := generate_gain_and_bias(M, min(x_ts), max(x_ts), rate_low, rate_high)
gain = gain
bias = bias
big_id = which(rowSums(spikes) >= max(rowSums(spikes)))
sp = as.matrix(spikes[big_id[1], ])
sp_t = which(sp == 1)
x_ts = x_ts[1:200]
sp = sp[1:200]
w = as.matrix(exp(-(1:L)/10)) # default filter
filt = Vectorize(function(s, w) {
if(s<0) return(0)
if(s>=L) return(0)
w[s+1]
},"s")
conv = function(x, w) {
xv = NULL
L = length(w)
for(i in 1:length(x)) {
w_i = (i-L+1):i
w_i = w_i[w_i>0]
xv = c(xv, t(rev(w[1:length(w_i)])) %*% x[w_i])
}
return(xv)
}
sp_c = conv(sp, w)
plotl(sp_c)
E = sum((x_ts - sp_c)^2)
E
Rxx = matrix(0, nrow=L, ncol=L)
rxd = rep(0, L)
for(i in L:length(x_ts)) {
w_i = (i-L+1):i
Rxx = Rxx + x_ts[w_i] %*% t(x_ts[w_i])
rxd = rxd + x_ts[w_i] * sp[w_i]
}
#Rxx = sapply(1:nrow(Rxx), function(i) rev(Rxx[i,]))
#rxd = rev(rxd)
Rxx = Rxx/(length(x_ts)-L+1)
rxd = rxd/(length(x_ts)-L+1)
w2 = ginv(Rxx) %*% rxd
sp_c2 = conv(sp, w2)
E2 = sum((x_ts - sp_c2)^2)
E2
plotl(sp_c2)
w2
gr_pl(w2)
gr_pl(Rxx)
Rxx = matrix(0, nrow=L, ncol=L)
rxd = rep(0, L)
for(i in L:length(x_ts)) {
w_i = (i-L+1):i
Rxx = Rxx + x_ts[w_i] %*% t(x_ts[w_i])
rxd = rxd + x_ts[w_i] * sp[w_i]
}
Rxx = sapply(1:nrow(Rxx), function(i) rev(Rxx[i,]))
rxd = rev(rxd)
Rxx = Rxx/(length(x_ts)-L+1)
rxd = rxd/(length(x_ts)-L+1)
w2 = ginv(Rxx) %*% rxd
w2
sp_c2 = conv(sp, w2)
E2 = sum((x_ts - sp_c2)^2)
E2
gr_pl(Rxx)
rxd
w2 = w2/100
sp_c2 = conv(sp, w2)
E2 = sum((x_ts - sp_c2)^2)
plotl(sp_c2)
gr_pl(w2)
plotl(w2)
source('~/prog/alexeyche-junk/cns/R/filt/test_filt.R', echo=TRUE)
getcwd()
getwd()
setwd("~/prog/alexeyche-junk/cns/R/filt")
source('~/prog/alexeyche-junk/cns/R/filt/test_filt.R', echo=TRUE)
ts_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512"
tslab_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512_labels"
ts_num = 300
ts = list()
for(i in 1:ts_num) {
ts[[i]] = list(data=c(loadMatrix(ts_name,i)), label=c(loadMatrix(tslab_name,i)))
}
loadMatrix(ts_name,i)
i
ts_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512"
tslab_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512_labels"
labels = loadMatrix(tslab_name,1)
ts_num = 300
ts = list()
for(i in 1:ts_num) {
ts[[i]] = c(loadMatrix(ts_name,i)
}
ts_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512"
tslab_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512_labels"
labels = loadMatrix(tslab_name,1)
ts_num = 300
ts = list()
for(i in 1:ts_num) {
ts[[i]] = c(loadMatrix(ts_name,i))
}
ts[[1]]
ts[[2]]
labels
labels = c(loadMatrix(tslab_name,1))
ts_num = length(labels)
ts_num
min(sapply(ts, min))
n = list(v=rep(0, M), ref=rep(0,M))
c(gain, bias) := generate_gain_and_bias(M, min_val, max_val, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
min_val = min(sapply(ts, min))
max_val = max(sapply(ts, max))
n = list(v=rep(0, M), ref=rep(0,M))
c(gain, bias) := generate_gain_and_bias(M, min_val, max_val, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
max_val
sp = vector("list",M)
sp
x_ts = ts[[1]]
x_ts =  2*(x_ts-min_val)/(max_val-min_val)-1
spike_times = NULL
i=1
source('~/prog/alexeyche-junk/cns/R/filt/test_filt.R', echo=TRUE)
gr_pl(spikes)
gr_pl(t(spikes))
x=x_ts[1]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
n
current_spikes
which(current_spikes)
sp[which(current_spikes)]
sp[which(current_spikes)] <- c(sp[which(current_spikes)], 1)
spikes = NULL
for(i in 1:length(x_ts)) {
x = x_ts[1]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, current_spikes)
}
spikes
dim(spikes)
length(x_ts)
ts[[1]]
x_ts = ts[[1]]
x_ts =  2*(x_ts-min_val)/(max_val-min_val)-1
x_ts
spikes = NULL
for(i in 1:length(x_ts)) {
x = x_ts[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, current_spikes)
}
dim(spikes)
sapply(spikes, which)
sapply(1:M, function(ni) which(spikes[ni,]))
sapply(spikes, which)
sapply(1:M, function(ni) which(spikes[ni,]))
sapply(1:M, function(ni) c(which(spikes[ni,])))
plot_rastl(sapply(1:M, function(ni) c(which(spikes[ni,]))))
ll = sapply(1:M, function(ni) which(spikes[ni,]))
ll[[1]]
names(ll[[1]])
names(ll[[1]]) <- NULL
ll[[1]]
sp = list()
spikes = NULL
for(i in 1:length(x_ts)) {
x = x_ts[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, current_spikes)
}
sapply(1:M, function(ni) sp[[ni]] <- c(sp[[ni]], which(spikes[ni,]) +time_last ))
time_last = time_last + length(x_ts)
ni
sp = vector("list",M)
sapply(1:M, function(ni) sp[[ni]] <- c(sp[[ni]], which(spikes[ni,]) +time_last ))
time_last
time_last = 0
sapply(1:M, function(ni) sp[[ni]] <- c(sp[[ni]], which(spikes[ni,]) +time_last ))
sapply(1:M, function(ni) sp[[ni]] <<- c(sp[[ni]], which(spikes[ni,]) +time_last ))
sp
sp = vector("list",M)
time_last = 0
for(x_ts in ts) {
x_ts =  2*(x_ts-min_val)/(max_val-min_val)-1
spikes = NULL
for(i in 1:length(x_ts)) {
x = x_ts[i]
input = x * encoder * gain + bias
c(n, current_spikes) := run_neurons(input, n)
spikes = cbind(spikes, current_spikes)
}
invisible(sapply(1:M, function(ni) sp[[ni]] <<- c(sp[[ni]], which(spikes[ni,]) +time_last )))
time_last = time_last + length(x_ts)
}
sp[[1]]
plot_rastl(sp,T0=0,Tmax=1024)
plot_rastl(sp,T0=10000,Tmax=11000)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp,T0=0,Tmax=1024)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[1]])
plot_rastl(sp_sep[[2]])
plot_rastl(sp_sep[[3]])
plot_rastl(sp_sep[[51]])
plot_rastl(sp_sep[[101]])
plot_rastl(sp_sep[[151]])
plot_rastl(sp_sep[[201]])
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[201]])
plot_rastl(sp_sep[[151]])
plot_rastl(sp_sep[[101]])
plot_rastl(sp_sep[[102]])
plot_rastl(sp_sep[[103]])
plot_rastl(sp_sep[[53]])
sp_sep[[53]]
plot_rastl(sp_sep[[3]])
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[3]])
plot_rastl(sp_sep[[51]])
x_ts = ts[[1]]
x = seq(min(x_ts), max(x_ts), length.out=100)
resp = NULL
for(xv in x) {
r = compute_response(xv, encoder, gain, bias, 0.5)
resp = cbind(resp, r)
}
cols = rainbow(nrow(resp))
for(ni in 1:nrow(resp)) {
if(ni==1) {
plot(x, resp[ni,], type="l", col=cols[ni], ylim=c(min(resp), max(resp)))
} else {
lines(x, resp[ni,], col=cols[ni])
}
}
L = 100
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/filt/test_filt.R', echo=TRUE)
x = seq(min_val, max_val, length.out=100)
resp = NULL
for(xv in x) {
r = compute_response(xv, encoder, gain, bias, 0.5)
resp = cbind(resp, r)
}
cols = rainbow(nrow(resp))
for(ni in 1:nrow(resp)) {
if(ni==1) {
plot(x, resp[ni,], type="l", col=cols[ni], ylim=c(min(resp), max(resp)))
} else {
lines(x, resp[ni,], col=cols[ni])
}
}
setwd("~/prog/alexeyche-junk/cns/R/filt")
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 100
rate_low = 25
rate_high = 50
v_tresh = 1
ts_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512"
tslab_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512_labels"
labels = c(loadMatrix(tslab_name,1))
ts_num = length(labels)
ts_num =1
ts = list()
for(i in 1:ts_num) {
ts[[i]] = c(loadMatrix(ts_name,i))
}
min_val = min(sapply(ts, min))
max_val = max(sapply(ts, max))
n = list(v=rep(0, M), ref=rep(0,M))
c(gain, bias) := generate_gain_and_bias(M, min_val, max_val, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
x = seq(min_val, max_val, length.out=100)
resp = NULL
for(xv in x) {
r = compute_response(xv, encoder, gain, bias, 0.5)
resp = cbind(resp, r)
}
cols = rainbow(nrow(resp))
for(ni in 1:nrow(resp)) {
if(ni==1) {
plot(x, resp[ni,], type="l", col=cols[ni], ylim=c(min(resp), max(resp)))
} else {
lines(x, resp[ni,], col=cols[ni])
}
}
encoder
bias
gain
t_rc
t_ref
setwd("~/prog/alexeyche-junk/cns/R/filt")
dt = 1
t_rc = 0.02 * 1000
t_ref = 0.002 * 1000
M = 100
rate_low = 25
rate_high = 50
v_tresh = 1
ts_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512"
tslab_name = "~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_512_labels"
labels = c(loadMatrix(tslab_name,1))
ts_num = length(labels)
ts_num =1
ts = list()
for(i in 1:ts_num) {
ts[[i]] = c(loadMatrix(ts_name,i))
}
min_val = min(sapply(ts, min))
max_val = max(sapply(ts, max))
for(i in 1:ts_num) {
x_ts = ts[[i]]
ts[[i]] =  2*(x_ts-min_val)/(max_val-min_val)-1
}
n = list(v=rep(0, M), ref=rep(0,M))
c(gain, bias) := generate_gain_and_bias(M, -1, 1, rate_low, rate_high)
encoder = sample(c(1,-1),M, replace=TRUE)
x = seq(-1, 1, length.out=100)
resp = NULL
for(xv in x) {
r = compute_response(xv, encoder, gain, bias, 0.5)
resp = cbind(resp, r)
}
cols = rainbow(nrow(resp))
for(ni in 1:nrow(resp)) {
if(ni==1) {
plot(x, resp[ni,], type="l", col=cols[ni], ylim=c(min(resp), max(resp)))
} else {
lines(x, resp[ni,], col=cols[ni])
}
}
source('~/prog/alexeyche-junk/cns/R/filt/nengo.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[1]])
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[1]])
plot_rastl(sp_sep[[2]])
plot_rastl(sp_sep[[3]])
plot_rastl(sp_sep[[4]])
plot_rastl(sp_sep[[51]])
plot_rastl(sp_sep[[101]])
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[101]])
plot_rastl(sp_sep[[51]])
plot_rastl(sp_sep[[1]])
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
plot_rastl(sp_sep[[1]])
plot_rastl(sp_sep[[2]])
labels
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
ts_name = sprintf("~/prog/sim/ts/synthetic_control/synthetic_control_TRAIN_%s", duration)
ts_name
cat(ts_name, "_labels", sep="")
loadMatrix(ts_name,1)
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
tslab_name
source('~/prog/alexeyche-junk/cns/R/filt/gen_spikes_nengo.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
patterns[[1]]
plot_rastl(patterns[[1]]$data)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
ep
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
