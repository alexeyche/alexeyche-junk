source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
capabilities()
plotl(u[1,])
plotl(p[1,])
plotl(syns[1,])
plotl(syns[2,])
plotl(dWn[2,])
plotl(dWn[1,])
plotl(dWn[3,])
plotl(dWn[4,])
o_one = loadMatrix(stat_file, 2+2*N+1)
o_one
dim(o_one)
o_one = loadMatrix(stat_file, 2+2*N+2)
dim(o_one)
plotl(o_one[1,])
plotl(o_one[2,])
N
o_one = loadMatrix(stat_file, 2+2*N+10)
plotl(o_one[1,])
dim(o_one)
plotl(o_one[2,])
plotl(o_one[20,])
plotl(loadMatrix(stat_file, 2)[1,])
plotl(loadMatrix(stat_file, 2+1)[1,])
plotl(loadMatrix(stat_file, 2+100+1)[1,])
plotl(loadMatrix(stat_file, 2+100+2)[1,])
plotl(loadMatrix(stat_file, 2+100+3)[1,])
plotl(loadMatrix(stat_file, 2+100+4)[1,])
plotl(loadMatrix(stat_file, 2+100+3)[1,])
plotl(loadMatrix(stat_file, 2+100+3)[2,])
plotl(loadMatrix(stat_file, 2+100+3)[3,])
#!/usr/bin/RScript
setwd("~/prog/alexeyche-junk/cns/R/srm/cprog")
#setwd("~/my/git/alexeyche-junk/cns/R/srm/cprog")
source('../serialize_to_bin.R')
source('../util.R')
source('../plot_funcs.R')
library(snn)
rundir="/home/alexeyche/prog/sim/runs"
#rundir="/home/alexeyche/prog/sim/spear_runs"
runname = "PoissonLayer_TripleSTDP_ExpHennequin_0000"
workdir=sprintf("%s/%s", rundir, runname)
for(ep in 1:1000) {
output_spikes = sprintf("%s/%s_output_spikes.bin", workdir, ep)
if(!file.exists(output_spikes)) { ep=ep-1; break }
}
#
#ep=7
ep_str=""
if(ep>0) {
ep_str = sprintf("%d_",ep)
}
model_file = sprintf("%s/%smodel", workdir, ep_str)
stat_file = sprintf("%s/%sstat", workdir, ep_str)
output_spikes = sprintf("%s/%soutput_spikes", workdir, ep_str)
const_ini = sprintf("%s/constants.ini", workdir)
N = as.integer(get_const("N"))
M = as.integer(get_const("M"))
lrule = get_const("learning_rule")
#sp = loadMatrix(input_file,1)
sp = loadMatrix(output_spikes,1)
net = blank_net(nrow(sp))
for(i in 1:length(net)) {
spike_elems = which(sp[i,]>0)
if(length(spike_elems)>0) {
if(sp[i,1] == 0) {
spikes_elems = c(1, spike_elems)
}
}
net[[i]] = sp[i, spike_elems]
}
Ti=0
Trange=1000
p1 = plot_rastl(net[(M-M+1):(M+sum(N))],T0=Ti*Trange,Tmax=(Ti+1)*Trange)
plotl(loadMatrix(stat_file, 2+100+3)[2,])
plotl(loadMatrix(stat_file, 2)[2,])
plotl(loadMatrix(stat_file, 2)[3,])
plotl(loadMatrix(stat_file, 2)[4,])
plotl(loadMatrix(stat_file, 2)[5,])
plotl(loadMatrix(stat_file, 2)[6,])
plotl(loadMatrix(stat_file, 1)[6,])
plotl(loadMatrix(stat_file, 1)[1,])
plotl(loadMatrix(stat_file, 1)[2,])
dim(loadMatrix(stat_file, 1))
dim(loadMatrix(stat_file, 2))
dim(loadMatrix(stat_file, 3))
dim(loadMatrix(stat_file, 2+N+1))
dim(loadMatrix(stat_file, 2+N+2))
dim(loadMatrix(stat_file, 2+N+3))
dim(loadMatrix(stat_file, 2+N+4))
#!/usr/bin/RScript
setwd("~/prog/alexeyche-junk/cns/R/srm/cprog")
#setwd("~/my/git/alexeyche-junk/cns/R/srm/cprog")
source('../serialize_to_bin.R')
source('../util.R')
source('../plot_funcs.R')
library(snn)
rundir="/home/alexeyche/prog/sim/runs"
#rundir="/home/alexeyche/prog/sim/spear_runs"
runname = "PoissonLayer_TripleSTDP_ExpHennequin_0000"
workdir=sprintf("%s/%s", rundir, runname)
for(ep in 1:1000) {
output_spikes = sprintf("%s/%s_output_spikes.bin", workdir, ep)
if(!file.exists(output_spikes)) { ep=ep-1; break }
}
#
#ep=7
ep_str=""
if(ep>0) {
ep_str = sprintf("%d_",ep)
}
model_file = sprintf("%s/%smodel", workdir, ep_str)
stat_file = sprintf("%s/%sstat", workdir, ep_str)
output_spikes = sprintf("%s/%soutput_spikes", workdir, ep_str)
const_ini = sprintf("%s/constants.ini", workdir)
N = as.integer(get_const("N"))
M = as.integer(get_const("M"))
lrule = get_const("learning_rule")
#sp = loadMatrix(input_file,1)
sp = loadMatrix(output_spikes,1)
net = blank_net(nrow(sp))
for(i in 1:length(net)) {
spike_elems = which(sp[i,]>0)
if(length(spike_elems)>0) {
if(sp[i,1] == 0) {
spikes_elems = c(1, spike_elems)
}
}
net[[i]] = sp[i, spike_elems]
}
Ti=0
Trange=1000
p1 = plot_rastl(net[(M-M+1):(M+sum(N))],T0=Ti*Trange,Tmax=(Ti+1)*Trange)
if(get_const("reinforcement") == "true") {
rew_all = c()
for(ep in 1:1000) {
stat_file = sprintf("%s/%d_stat", workdir, ep)
if(file.exists(sprintf("%s.bin",stat_file))) {
rew = loadMatrix(stat_file, 1)
rew_all = c(rew_all, mean(rew[1,]))
} else {
break
}
}
if(!is.nan(rew_all)) {
plot(rew_all,type="l")
}
} else {
u = loadMatrix(stat_file, 2)
p = loadMatrix(stat_file, 1)
syn=1
nid=1
Tplot=1:1000
syns = loadMatrix(stat_file, 2+nid)
dWn = loadMatrix(stat_file, 2+1*N+nid)
if(lrule == "OptimalSTDP") {
B = loadMatrix(stat_file, 2+2*N+1)
Cn = loadMatrix(stat_file, 2+2*N+1+nid)
par(mfrow=c(3,1))
spikes = net[[M+nid]][net[[M+nid]]<max(Tplot)]
plot(spikes, rep(1,length(spikes)), xlim=c(min(Tplot),max(Tplot)) )
plotl(syns[syn,Tplot])
plotl(Cn[syn,Tplot])
#plotl(dWn[syn,Tplot])
}
if(lrule == "ResourceSTDP") {
res = loadMatrix(stat_file, 3)
y_tr = loadMatrix(stat_file, 4)
x_tr = loadMatrix(stat_file, 4+nid)
syns = loadMatrix(stat_file, 4+N+nid)
dWn = loadMatrix(stat_file, 4+2*N+nid)
par(mfrow=c(4,1))
spikes = net[[M+nid]][net[[M+nid]]<max(Tplot)]
plotl(y_tr[nid,Tplot])
plotl(x_tr[syn,Tplot])
plotl(res[nid,Tplot])
plotl(dWn[syn,Tplot])
}
if(lrule == "TripleSTDP") {
o_one = loadMatrix(stat_file, 2+2*N+1)
o_two = loadMatrix(stat_file, 2+2*N+2)
r = loadMatrix(stat_file, 2+2*N+2+nid)
par(mfrow=c(4,1))
spikes = net[[M+nid]][net[[M+nid]]<max(Tplot)]
plot(spikes, rep(1,length(spikes)), xlim=c(min(Tplot),max(Tplot)) )
plotl(r[syn,Tplot])
plotl(o_one[nid,Tplot])
plotl(o_two[nid,Tplot])
}
}
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
a_minus
plotl(a_minus[1,])
plotl(a_minus[2,])
plotl(a_minus[3,])
plotl(a_minus[4,])
gr_pl(a_minus)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
?sys.call
system(sprintf("ls -t %s | head -n1", rundir)
system(sprintf("ls -t %s | head -n1", rundir))
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
runname
system(sprintf("ls -t %s | head -n1", rundir))
runname = system(sprintf("ls -t %s | head -n1", rundir),intern=TRUE)
runname
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ep
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
ep
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/gen_ucr_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
source('~/prog/alexeyche-junk/cns/R/srm/cprog/get_data.R', echo=TRUE)
