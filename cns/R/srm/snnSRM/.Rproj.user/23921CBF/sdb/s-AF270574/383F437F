{
    "contents" : "#!/usr/bin/RScript\n#setwd(\"~/prog/alexeyche-junk/cns/R/srm/new\")\nsetwd(\"~/my/git/alexeyche-junk/cns/R/srm/new\")\n\nsource('include.R')\n\nif(!sfIsRunning()) {\n  sfInit(parallel=TRUE, cpus=10)\n  res = sfClusterEval(require('snnSRM'))\n}\n\nsfExport('constants')\n#dir = \"/home/alexeyche/prog/sim/R\"\ndir = \"/home/alexeyche/my/sim/R\"\nsystem(sprintf(\"find %s -name \\\"*.png\\\" -type f -exec rm -f {} \\\\;\", dir))\n\nM = 50\nN = 10\n\ngr1 = TSNeurons(M = M, patterns = list())\n\n#file <- \"/home/alexeyche/prog/sim/stimuli/sd1.csv\"\n#file2 <- \"/home/alexeyche/prog/sim/stimuli/sd2.csv\"\nfile <- \"/home/alexeyche/my/sim/stimuli/sd1.csv\"\nfile2 <- \"/home/alexeyche/my/sim/stimuli/sd2.csv\"\n\ngr1$loadPattern(file, 100, 1)\ngr1$loadPattern(file2, 100, 2)\nid_m = 1:M\nid_n = (M+1):(M+N)\n\nstart_w = 5\nneurons = list()\nfor(i in 1:N) {\n  conn <- id_m\n  conn <- c(conn, id_n[id_n != id_n[i]]) # id of srm neurons: no self connections\n  w <- c(rep(start_w, M), rep(start_w/4, N-1))\n  neurons[[i]] = neuron(w = w, id_conn = conn, id = id_n[i])\n}\nNro = 2\nid_ro = seq(M+N+1,M+N+Nro)\nfor(i in 1:Nro) {\n  conn <- id_n\n  w <- c(rep(start_w*10, N))\n  neurons[[N+i]] = neuron(w = w, id_conn = conn, id = id_ro[i])\n}\n\nepochs = 50\n#run_mode = \"run\"\nrun_mode = \"learn\"\nrun_options = list(T0 = 0, Tmax = 100, dt = 0.5, learning_rate = 0.5, \n                   learn_window_size = 50, mode=run_mode, collect_stat=TRUE, \n                   learn_neurons=id_ro,\n                   target_set = list(target_function_gen = class_tf, depress_null=TRUE)\n                   )\n\npatterns = gr1$patterns\nrun_net(neurons, patterns, epochs, run_options)\n",
    "created" : 1389274936358.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "507695266",
    "id" : "383F437F",
    "lastKnownWriteTime" : 1389287307,
    "path" : "~/my/git/alexeyche-junk/cns/R/srm/new/main.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}