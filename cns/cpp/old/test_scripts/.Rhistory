source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
str(W)
f <- df_all[df_all$name == name,2:4]
str(f)
name
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
str(W)
str(neg_vis_m)
42*5000
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
str(W)
W@x
str(W)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
name
for(name in names) {
get_names()
df_all <- dbGetQuery(con,"SELECT name, colNum, rowNum, value FROM matrices")
names
get_names()
name <- get_names()[1]
f <- df_all[df_all$name == name,2:4]
str(f)
name <- "W"
f <- df_all[df_all$name == name,2:4]
str(f)
f[f$value<0,]
mat <- sparseMatrix(i = f$rowNum,
j = f$colNum,
x = f$value, index1=FALSE)
mat
str(mat)
name
assign(name, mat)
load_matrices(get_names())
?assign
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
neg_hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(get_names())
W@x
hist(W@x)
load_matrices(get_names())
SELECT DISTINCT iter FROM matrices
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
load_matrices(c("W"),0)
W
fix(sparse_grads)
,sparseMatrix
?sparseMatrix
W[0,1]
W[011]
W[1,1]
W[1,]
W[1:10,]
W[1:10,1:10]
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
get_iters()
load_matrices(get_names(), last_iter)
last_iter <- max(get_iters())
load_matrices(get_names(), last_iter)
hid_means
hist(hid_means)
hist(hid_means@x)
hist(hid_m@x)
str(hid_m@x)
summary(hid_m@x
)
hid_m@x
neg_vis_m@x
hist(neg_vis_m@x)
hist(neg_vis_s@x)
neg_vis_s@x
neg_vis_s@x
hist(neg_vis_s@x, ylib=c(0,10))
hist(neg_vis_s@x, ylim=c(0,10))
source('~/.active-rstudio-document', echo=TRUE)
W@x
hid_m@x
hid_s@x
hist(hid_m@x)
hid_m@x == 1
hid_m@x[hid_m@x == 1]
hid_m@x[hid_m@x != 1]
sparse_grads
source('~/.active-rstudio-document', echo=TRUE)
hid_m
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
free_en
last_iter <- max(get_iters())
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices <- function(names, iter) {
df_all <- dbGetQuery(con,paste("SELECT name, colNum, rowNum, value FROM matrices WHERE iter =",iter))
for(name in names) {
f <- df_all[df_all$name == name,2:4]
mat <- sparseMatrix(i = f$rowNum,
j = f$colNum,
x = f$value, index1=FALSE)
assign(name, mat, envir = .GlobalEnv)
}
}
get_names <- function() {
dbGetQuery(con,"SELECT DISTINCT name FROM matrices")$name
}
get_iters <- function() {
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
}
last_iter <- max(get_iters())
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
last_iter <- max(get_iters())
last_iter
load_matrices(get_names(),0)
W
sparse_grads
hid_m
hist(hid_m)
hist(hid_m@x)
hist(neg_hid_m@x)
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
hist(hid_m@x)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),0)
load_matrices(get_names(),0)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
get_iters())
get_iters()
hid_m
source('~/.active-rstudio-document', echo=TRUE)
vis_s
W
vis_s %*% W
vis_s %*% W
W
source('~/.active-rstudio-document', echo=TRUE)
hid_m
hist(hid_m)
hist(hid_m@x)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),0)
hist(hid_m@x)
load_matrices(get_names(),1)
hist(hid_m@x)
hid_m@x
load_matrices(get_names(),2)
hid_m@x
load_matrices(get_names(),0)
W_inc
hist(W_inc@x)
hist(hbias_inc@x)
hist(hbias@x)
hid_m
load_matrices(get_names(),1)
hist(W_inc@x)
hist(hbias_inc@x)
hist(W_@x)
hist(W@x)
hist(hbias@x)
hist(hid_m@x)
load_matrices(get_names(),0)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),1)
hid_m@x
neg_hid_m@x
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
load_matrices(get_names(),0)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),0)
load_matrices(get_names(),0)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),0)
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
load_matrices(get_names(),5)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
load_matrices(get_names(),5)
hid_m@x
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
dbGetQuery(con,"PRAGMA read_uncommitted = 1;")
source('~/.active-rstudio-document', echo=TRUE)
load_matrices(get_names(),5)
load_matrices(get_names(),0)
dbGetQuery(con,"PRAGMA read_uncommitted")
load_matrices(get_names(),0)
load_matrices(get_names(),0)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
iter <- 0
df_all <- dbGetQuery(con,paste("SELECT name, colNum, rowNum, value FROM matrices WHERE iter =",iter))
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
df_all <- dbGetQuery(con,paste("SELECT name, colNum, rowNum, value FROM matrices WHERE iter =",iter))
con <- dbConnect(dbDriver("SQLite"), "/home/alexeyche/ml.db")
df_all <- dbGetQuery(con,paste("SELECT name, colNum, rowNum, value FROM matrices WHERE iter =",iter))
last_iter <- max(get_iters())
con <- dbConnect(dbDriver("SQLite"), ":ml:")
last_iter <- max(get_iters())
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
con <- dbConnect(dbDriver("SQLite"), ":ml:")
dbGetQuery(con,"SELECT DISTINCT name FROM matrices")$name
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
con <- dbConnect(dbDriver("SQLite"), "ml")
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
dbGetQuery(con,".table")
dbGetQuery(con,""SELECT name FROM sqlite_master WHERE type='table'")
dbGetQuery(con,"SELECT name FROM sqlite_master WHERE type='table'")
con <- dbConnect(dbDriver("SQLite"), ":ml:")
dbGetQuery(con,"SELECT name FROM sqlite_master WHERE type='table'")
con <- dbConnect(dbDriver("SQLite3"), ":ml:")
?dbDriver
con <- dbConnect(dbDriver("SQLite"), ":ml:")
con <- dbConnect(dbDriver("SQLite"), ":ml:")
dbGetQuery(con,"SELECT name FROM sqlite_master WHERE type='table'")
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
con
?con
con
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
?dbReadTable
?dbConnect
dbReadTable(con,"matrices")
library(sqldf)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
con <- dbConnect(SQLite(), dbname=":ml:")
dbGetQuery(con, "SELECT count(*) FROM matrices")
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hist(hid_m@x)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hist(hid_m@x)
db_name <- "/home/alexeyche/ml.db"
con <- dbConnect(SQLite(), dbname=db_name, flags=SQLITE_RO)
dbGetQuery(con,"SELECT max(iter) FROM matrices")
dbGetQuery(con,"SELECT DISTINCT iter FROM matrices")$iter
dbGetQuery(con,"SELECT max(iter) FROM matrices")
dbGetQuery(con,"SELECT DISTINCT max(iter) FROM matrices")$iter
dbGetQuery(con,"SELECT DISTINCT max(iter) FROM matrices")
dbGetQuery(con,"SELECT DISTINCT max(iter) as iter FROM matrices")$iter
dbGetQuery(con,"SELECT DISTINCT max(iter) as iter FROM matrices")$iter
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
dbGetQuery(con,"SELECT DISTINCT max(iter) as iter FROM matrices")$iter
hid_m@x
hbias@x
W@x
hist(W@x)
hist(vis_m@x)
hist(vis_s@x)
hist(hid_m@x)
hist(neg_hid_m@x)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
last_iter
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
load_matrices(get_names(),0)
hid_m@x
load_matrices(get_names(),1)
hid_m@x
neg_vis_s
neg_vis_m
source('~/.active-rstudio-document', echo=TRUE)
D
vis_neg_m
neg_vis_m
neg_vis_m[0,]
neg_vis_m[1,]
sum(neg_vis_m[1,])
neg_vis_s[1,]
D[1]
neg_vis_m[1,] * 1760
vis_s
source('~/.active-rstudio-document', echo=TRUE)
hist(hid_m@x)
neg_vis_s
neg_vis_m
vis_s
D
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
hist(hid_m@x)
source('~/.active-rstudio-document', echo=TRUE)
hist(hid_m@x)
source('~/.active-rstudio-document', echo=TRUE)
hist(hid_m@x)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
neg_vis_s
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
hbias@x
vbias@x
neg_vis_s
t(neg_vis_s) %*%  neg_hid_m
str(t(neg_vis_s) %*%  neg_hid_m)
input
vis_s
t(vis_s) %*% hid_m
hid_m
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
t(vis_s) %*% hid_m
t(vis_s) %*% hid_m
hist(t(vis_s) %*% hid_m)
s <- t(vis_s) %*% hid_m
hist(s@x)
str(t(neg_vis_s) %*%  neg_hid_m)
t(neg_vis_s) %*%  neg_hid_m
s2 <- t(neg_vis_s) %*%  neg_hid_m
hist(s2@x)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
hid_s@x
neg_hid_m@x
neg_hid_s@x
W
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
hid_s@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
W_inc
W_inc@x
hist(W_inc@x)
W_inc[10,]
W_inc[100,]
str(W_inc[100,])
W_inc[1:100,]
W_inc[1:10,]
W_inc[100:110,]
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hbias
vbias
hist(vbias)
hist(vbias@x)
hbias_inc
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@sx
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
load_matrices(get_names(),0)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
db_name <- "/home/alexeyche/ml.db"
con <- dbConnect(SQLite(), dbname=db_name, flags=SQLITE_RO)
dbGetQuery(con,"pragma synchronous")
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
hid_m@x
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
source('~/my/git/alexeyche-junk/ml/dbn/db_sqlite.R', echo=TRUE)
?rredis
??rredis
?seq
Iall <- seq(-30,30, by=0.001)
Iall
I <- Iall
u <- 1
source("serv.R")
setwd("~/my/git/alexeyche-junk/cns/cpp/test_scripts")
source("serv.R")
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/gen_data.R', echo=TRUE)
source('~/my/git/alexeyche-junk/cns/cpp/test_scripts/gen_data.R', echo=TRUE)
load()
load()
load()
load()
load()
load()
load()
require(stringr)
l <- list()
for(i in ls()) {
m <- str_match(i, "ystat([0-9]+)")
if(!is.na(m[2])) {
l[[m[1]]] <- get(m[1])
}
}
plot_syn_stat_list(l)
