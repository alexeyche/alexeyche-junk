{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Ne",
				"NeuronAddress"
			],
			[
				"net",
				"net_neurons_count"
			],
			[
				"run",
				"runWorker"
			],
			[
				"neu",
				"neuron"
			],
			[
				"sim_r",
				"sim_run_c"
			],
			[
				"glob",
				"glob_c"
			],
			[
				"con",
				"content"
			],
			[
				"de",
				"deserialize"
			],
			[
				"ser",
				"serialized_message"
			],
			[
				"cons",
				"constants"
			],
			[
				"o",
				"ostream"
			],
			[
				"E",
				"EAdExNeuronStat"
			],
			[
				"adex",
				"adex_stat"
			],
			[
				"col",
				"collectStatistics"
			],
			[
				"Ad",
				"AdExNeuron"
			],
			[
				"AdEx",
				"AdExNeuronStat"
			],
			[
				"acc",
				"accessByGlobalId"
			],
			[
				"inpu",
				"input_layers"
			],
			[
				"neurons",
				"neurons_to_listen"
			],
			[
				"Ar",
				"Array"
			],
			[
				"neur",
				"neurons_to_listen"
			],
			[
				"neuro",
				"neurons"
			],
			[
				"write",
				"writeMessage"
			],
			[
				"Neuron",
				"NeuronStat"
			],
			[
				"stat",
				"statistics_file"
			],
			[
				"file",
				"filename"
			],
			[
				"Neur",
				"NeuronStat"
			],
			[
				"u",
				"u_rest"
			],
			[
				"inp",
				"input_ts"
			],
			[
				"pre",
				"precalculateInputLayerSpikes"
			],
			[
				"null",
				"nullptr"
			],
			[
				"input",
				"input_size"
			],
			[
				"pop_a",
				"pop_value"
			],
			[
				"lab",
				"label"
			],
			[
				"labe",
				"labels"
			],
			[
				"Time",
				"TimeSeries"
			],
			[
				"pop",
				"pop_value"
			],
			[
				"Layer",
				"Layer"
			],
			[
				"Syna",
				"SynapseC"
			],
			[
				"calc",
				"calculateDynamics"
			],
			[
				"neuo",
				"neurons"
			],
			[
				"syn",
				"syn_id"
			],
			[
				"ac",
				"active_synapses"
			],
			[
				"Bal",
				"BlankTuningCurve"
			],
			[
				"Blank",
				"BlankTuningCurve"
			],
			[
				"learn",
				"learning_rule"
			],
			[
				"tuning",
				"tuning_curve"
			],
			[
				"la",
				"layer"
			],
			[
				"glo",
				"glob_c"
			],
			[
				"SRMLa",
				"SRMLayer"
			],
			[
				"neuron",
				"neuron_conf"
			],
			[
				"add",
				"addNeuron"
			],
			[
				"global",
				"global_neuron_index"
			],
			[
				"tuni",
				"tuning_curve"
			],
			[
				"act",
				"act_func"
			],
			[
				"Lay",
				"Layer"
			],
			[
				"Act",
				"ActFunc"
			],
			[
				"lear",
				"learning_rule"
			],
			[
				"lea",
				"learning_rule"
			],
			[
				"sig",
				"sigma_square"
			],
			[
				"cal",
				"calculateResponse"
			],
			[
				"coded",
				"codedOut"
			],
			[
				"goo",
				"google::protobuf::io"
			],
			[
				"De",
				"DebugString"
			],
			[
				"setIn",
				"setInputTimeSeries"
			],
			[
				"Cons",
				"ConstObj"
			],
			[
				"Ob",
				"Object"
			],
			[
				"tun",
				"tuning_curve"
			],
			[
				"tuning_",
				"tuning_curves"
			],
			[
				"SRM",
				"SRMNeuron"
			],
			[
				"La",
				"layer"
			],
			[
				"SigmaTun",
				"SigmaTuningCurve"
			],
			[
				"Sigm",
				"SigmaTuningCurve"
			],
			[
				"in",
				"intercept"
			],
			[
				"Jso",
				"JsonBox"
			],
			[
				"EM",
				"EMPTY_DOUBLE"
			],
			[
				"doub",
				"doubleValue"
			],
			[
				"iner",
				"intercept"
			],
			[
				"A",
				"Array"
			],
			[
				"Js",
				"JsonBox"
			],
			[
				"inter",
				"intercept_low"
			],
			[
				"size",
				"size"
			],
			[
				"sz",
				"size_t"
			],
			[
				"Inp",
				"InputLayersConf"
			],
			[
				"t",
				"typename"
			],
			[
				"spikes",
				"spikes_list"
			],
			[
				"conn",
				"conn_map"
			],
			[
				"time",
				"time_series"
			],
			[
				"fill",
				"fill_structure"
			],
			[
				"ts",
				"ts_map_conf"
			],
			[
				"Con",
				"ConstObj"
			],
			[
				"Labe",
				"LabeledTimeSeriesList"
			],
			[
				"Syn",
				"synapses"
			],
			[
				"layer",
				"layers"
			],
			[
				"l",
				"l_aff_base"
			],
			[
				"siz",
				"size_t"
			],
			[
				"Op",
				"OptimalStdpC"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/User/make.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"CTa",
				"CTags: Show Symbols (all)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/act_funcs",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/learning",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/serialize",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/tuning_curves"
	],
	"file_history":
	[
		"/home/alexeyche/prog/snn_sim/sources/snnlib/sim/netsim.c",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/core.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/sim/sim.h",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/sim/configure.c",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/sim/sim.c",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/sim.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/tools/sim/snn_sim.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/sim.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/CMakeLists.txt",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/synapse.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/time_series.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/network.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/network.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/neuron.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config/factory.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/srm_neuron.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config/constants.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/adex_neuron.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos/time_series.proto",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/tuning_curves/tuning_curve.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/base.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/const.json",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/runtime_globals.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config/factory.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/neuron_stat.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/neuron_stat.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config/constants.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/serialize/serialize.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/util.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/json/value.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/serialize/proto_rw.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/json/json_box.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/util.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/tools/dumptool/ucr_ts.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/neuron_test.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/serialize/serialize.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/learning/learning_rule.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos/matrix.proto",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/build/snnlib/protos/stat.pb.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos/stat.proto",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/tools/dumptool/dumptool.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/build/snnlib/protos/adex_stat.pb.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/adex_neuron.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/act_funcs/exp_hennequin.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos/adex_stat.proto",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/act_funcs/act_func.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/CMakeLists.txt",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/adex_neuron_stat.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/json/solidus_escaper.cpp",
		"/home/alexeyche/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
		"/home/alexeyche/prog/snn_sim/constants.ini",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/prep/adex.c",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/act_funcs/determ.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/tuning_curves/sigma_tuning_curve.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/learning/optimal_stdp.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/json/grammar.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/tools/testproto/main.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/srm_layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/tools/testproto/a.out",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/layer.cpp",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/protos/CMakeLists.txt",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/common.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/sim_layer_test.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/sim_layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/sim_neuron.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/optionparser/opt.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/CMakeLists.txt",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/network_stat.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/.tags_sorted_by_file",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/.tags",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/core.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/act_funcs/act_func.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/sigma_tc_layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/sim/sim_input_layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/act_funcs/determ.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/config/type_maps.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/input_layer.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/CMakeLists.txt",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/layers/poisson.c",
		"/home/alexeyche/.config/sublime-text-3/Packages/CTags/CTags.sublime-settings",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/#pragma once",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/util/util.c",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/CMakeLists.txt",
		"/home/alexeyche/prog/snn_sim/sources/snnlib/util/util.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/snn_sim.sublime-project",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/layers/act_funcs/exp_hennequin.h",
		"/home/alexeyche/prog/alexeyche-junk/cns/cpp/sources/snnlib/util/json/array.cpp",
		"/home/alexeyche/.config/sublime-text-3/Packages/User/make.sublime-build",
		"/home/alexeyche/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/alexeyche/.config/sublime-text-3/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"impl",
			"attr",
			"barri",
			"propa",
			"GlobalsC",
			"glob_c",
			"glob",
			"GlobalsC",
			"glob_c",
			"amp_re",
			"const ConstObj *c",
			"adex",
			"u",
			"stat",
			"Layer",
			"stat.pb.h",
			"stat",
			"tau_w",
			"u_tr",
			"SRMLa",
			"SRMLayer",
			"SRMNeuron",
			"syns",
			"add_muta",
			"TimeSeries",
			"tuning",
			"NeuronConf",
			"InputLa",
			"gc",
			"layers",
			"InputLa",
			"SRMLayer",
			"LayerObj",
			"SRMNeuronC",
			"SRMLayerC",
			"Layer",
			"Sigma",
			"input_layer",
			"SigmaTuningCurveC",
			"sds",
			"NEURON",
			"getDouble",
			"SigmaL",
			"comple",
			"l_Id",
			"> ",
			"DetermC"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"RuntimeGlobals",
			"c",
			"const Constants &c",
			"AdExLayer",
			"AdExNeuron",
			"TS",
			"glob_c",
			"SRMNeuron",
			"Layer",
			"SRMLayerC",
			"SRMNeuronC",
			"Neuron",
			"sigma",
			"gains",
			"SRMNeuron",
			"ExpHennequinC"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 419.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "snn_sim.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"snn",
				"tools/sim/snn_sim.cpp"
			],
			[
				"cons",
				"snnlib/config/constants.h"
			],
			[
				"time_",
				"snnlib/util/time_series.h"
			],
			[
				"srm",
				"snnlib/layers/srm_neuron.h"
			],
			[
				"neu",
				"snnlib/layers/neuron.h"
			],
			[
				"ne",
				"snnlib/sim/network.cpp"
			],
			[
				"ad",
				"snnlib/layers/adex_neuron.h"
			],
			[
				"net",
				"snnlib/sim/network.h"
			],
			[
				"sim.",
				"snnlib/sim/sim.cpp"
			],
			[
				"fa",
				"snnlib/config/factory.cpp"
			],
			[
				"",
				"snnlib/layers/adex_neuron.h"
			],
			[
				"ru",
				"snnlib/sim/runtime_globals.h"
			],
			[
				"sr",
				"snnlib/layers/srm_neuron.h"
			],
			[
				"la",
				"snnlib/layers/layer.h"
			],
			[
				"sim.c",
				"snnlib/sim/sim.cpp"
			],
			[
				"sim",
				"snnlib/sim/sim.h"
			],
			[
				"fac",
				"snnlib/config/factory.cpp"
			],
			[
				"fao",
				"snnlib/config/factory.cpp"
			],
			[
				"srm_ne",
				"snnlib/layers/srm_neuron.h"
			],
			[
				"uti",
				"snnlib/util/util.h"
			],
			[
				"jso",
				"snnlib/util/json/json_box.h"
			],
			[
				"ut",
				"snnlib/util/util.cpp"
			],
			[
				"neur",
				"snnlib/layers/neuron.h"
			],
			[
				"seri",
				"snnlib/serialize/serialize.h"
			],
			[
				"time",
				"snnlib/util/time_series.h"
			],
			[
				"serl",
				"snnlib/serialize/serialize.cpp"
			],
			[
				"value",
				"snnlib/util/json/value.cpp"
			],
			[
				"ade",
				"snnlib/layers/adex_neuron.h"
			],
			[
				"pro",
				"snnlib/serialize/proto_rw.h"
			],
			[
				"dump",
				"tools/dumptool/dumptool.cpp"
			],
			[
				"ser",
				"snnlib/serialize/serialize.cpp"
			],
			[
				"seria",
				"snnlib/serialize/serialize.cpp"
			],
			[
				"exp",
				"snnlib/act_funcs/exp_hennequin.h"
			],
			[
				"act",
				"snnlib/act_funcs/act_func.h"
			],
			[
				"adex",
				"snnlib/layers/adex_neuron.h"
			],
			[
				"layer",
				"snnlib/layers/layer.h"
			],
			[
				"sim.cp",
				"snnlib/sim/sim.cpp"
			],
			[
				"sim.h",
				"snnlib/sim/sim.h"
			],
			[
				"det",
				"snnlib/act_funcs/determ.h"
			],
			[
				"sigm",
				"snnlib/tuning_curves/sigma_tuning_curve.h"
			],
			[
				"op",
				"snnlib/learning/optimal_stdp.h"
			],
			[
				"act_f",
				"snnlib/act_funcs/act_func.h"
			],
			[
				"deter",
				"snnlib/act_funcs/determ.h"
			],
			[
				"ac",
				"snnlib/act_funcs/act_func.h"
			],
			[
				"proto",
				"snnlib/serialize/proto_rw.h"
			],
			[
				"sigma",
				"snnlib/tuning_curves/sigma_tuning_curve.h"
			],
			[
				"tunin",
				"snnlib/tuning_curves/tuning_curve.h"
			],
			[
				"lay",
				"snnlib/layers/layer.h"
			],
			[
				"opt",
				"snnlib/learning/optimal_stdp.h"
			],
			[
				"lear",
				"snnlib/learning/learning_rule.h"
			],
			[
				"sig",
				"snnlib/tuning_curves/sigma_tuning_curve.h"
			],
			[
				"n",
				"snnlib/layers/neuron.h"
			],
			[
				"con",
				"snnlib/config/constants.h"
			],
			[
				"ucr",
				"tools/dumptool/ucr_ts.h"
			],
			[
				"dum",
				"tools/dumptool/dumptool.cpp"
			],
			[
				"snns",
				"tools/sim/snn_sim.cpp"
			],
			[
				"srm_",
				"snnlib/layers/srm_layer.h"
			],
			[
				"syna",
				"snnlib/layers/synapse.h"
			],
			[
				"syn",
				"snnlib/layers/synapse.h"
			],
			[
				"s",
				"snnlib/layers/synapse.h"
			],
			[
				"sy",
				"snnlib/layers/synapse.h"
			],
			[
				"ba",
				"snnlib/base.h"
			],
			[
				"bas",
				"snnlib/base.h"
			],
			[
				"neuro",
				"snnlib/layers/neuron_test.h"
			],
			[
				"lea",
				"snnlib/learning/learning_rule.h"
			],
			[
				"prot",
				"snnlib/serialize/proto_rw.h"
			],
			[
				"sim_la",
				"snnlib/sim/sim_layer.h"
			],
			[
				"simn",
				"snnlib/sim/sim_neuron.h"
			],
			[
				"tun",
				"snnlib/tuning_curves/tuning_curve.h"
			],
			[
				"tc_",
				"snnlib/tuning_curves/sigma_tuning_curve.h"
			],
			[
				"sn",
				"tools/sim/snn_sim.cpp"
			],
			[
				"simc",
				"snnlib/sim/sim.cpp"
			],
			[
				"sim_ne",
				"snnlib/sim/sim_neuron.h"
			],
			[
				"le",
				"snnlib/learning/learning_rule.h"
			],
			[
				"tuni",
				"snnlib/tuning_curves/tuning_curve.h"
			],
			[
				"si",
				"snnlib/sim/sim.h"
			],
			[
				"co",
				"snnlib/config/constants.h"
			],
			[
				"du",
				"tools/dumptool/dumptool.cpp"
			],
			[
				"cor",
				"snnlib/core.h"
			],
			[
				"const",
				"snnlib/config/constants.cpp"
			],
			[
				"core.",
				"snnlib/core.h"
			],
			[
				"snn_s",
				"tools/sim/snn_sim.cpp"
			],
			[
				"base.",
				"snnlib/base.h"
			],
			[
				"comm",
				"snnlib/layers/common.h"
			],
			[
				"facto",
				"snnlib/config/factory.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 227.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
