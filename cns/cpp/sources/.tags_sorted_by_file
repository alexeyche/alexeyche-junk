!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
ActFunction	dnn/act_functions/act_function.h	/^class ActFunction : public ActFunctionBase {$/;"	c	namespace:dnn
ActFunctionBase	dnn/act_functions/act_function.h	/^class ActFunctionBase : public SerializableBase {$/;"	c	namespace:dnn
ActFunctionInterface	dnn/act_functions/act_function.h	/^struct ActFunctionInterface {$/;"	s	namespace:dnn
__default	dnn/act_functions/act_function.h	/^	static double __default(const double &u) { $/;"	f	class:dnn::ActFunctionBase
c	dnn/act_functions/act_function.h	/^	Constants c;$/;"	m	class:dnn::ActFunction
dnn	dnn/act_functions/act_function.h	/^namespace dnn {$/;"	n
interface	dnn/act_functions/act_function.h	/^	typedef ActFunctionInterface interface;$/;"	t	class:dnn::ActFunctionBase
prob	dnn/act_functions/act_function.h	/^	funDelegate prob;$/;"	m	struct:dnn::ActFunctionInterface
probDeriv	dnn/act_functions/act_function.h	/^	funDelegate probDeriv;$/;"	m	struct:dnn::ActFunctionInterface
provideDefaultInterface	dnn/act_functions/act_function.h	/^	static void provideDefaultInterface(ActFunctionInterface &i) {$/;"	f	class:dnn::ActFunctionBase
serial_process	dnn/act_functions/act_function.h	/^	void serial_process() {$/;"	f	class:dnn::ActFunction
Determ	dnn/act_functions/determ.h	/^class Determ : public ActFunction<DetermC> {$/;"	c	namespace:dnn
DetermC	dnn/act_functions/determ.h	/^    DetermC() : treshold(15.0) {}$/;"	f	struct:dnn::DetermC
DetermC	dnn/act_functions/determ.h	/^struct DetermC : public Serializable<Protos::DetermC> {$/;"	s	namespace:dnn
dnn	dnn/act_functions/determ.h	/^namespace dnn {$/;"	n
name	dnn/act_functions/determ.h	/^    const string name() const {$/;"	f	class:dnn::Determ
prob	dnn/act_functions/determ.h	/^    double prob(const double &u) {$/;"	f	class:dnn::Determ
probDeriv	dnn/act_functions/determ.h	/^    double probDeriv(const double &u) {$/;"	f	class:dnn::Determ
provideInterface	dnn/act_functions/determ.h	/^    void provideInterface(ActFunctionInterface &i) {$/;"	f	class:dnn::Determ
serial_process	dnn/act_functions/determ.h	/^    void serial_process() {$/;"	f	struct:dnn::DetermC
treshold	dnn/act_functions/determ.h	/^    double treshold;$/;"	m	struct:dnn::DetermC
Object	dnn/base/base.h	/^class Object {$/;"	c	namespace:dnn
OptMods	dnn/base/base.h	/^typedef map<string, string> OptMods;$/;"	t	namespace:dnn
Printable	dnn/base/base.h	/^class Printable: public Object {$/;"	c	namespace:dnn
SynSpike	dnn/base/base.h	/^struct SynSpike {$/;"	s	namespace:dnn
Time	dnn/base/base.h	/^    Time(double _dt) : t(0), dt(_dt) {}$/;"	f	struct:dnn::Time
Time	dnn/base/base.h	/^struct Time {$/;"	s	namespace:dnn
attachDelegate	dnn/base/base.h	/^typedef FastDelegate1<const double&> attachDelegate;$/;"	t	namespace:dnn
calculateDynamicsDelegate	dnn/base/base.h	/^typedef FastDelegate1<const Time&> calculateDynamicsDelegate;$/;"	t	namespace:dnn
dnn	dnn/base/base.h	/^namespace dnn {$/;"	n
dt	dnn/base/base.h	/^    double dt;$/;"	m	struct:dnn::Time
funDelegate	dnn/base/base.h	/^typedef FastDelegate1<const double&, double> funDelegate;$/;"	t	namespace:dnn
getBoolCopyDelegate	dnn/base/base.h	/^typedef FastDelegate0<bool> getBoolCopyDelegate;$/;"	t	namespace:dnn
getBoolDelegate	dnn/base/base.h	/^typedef FastDelegate0<const bool&> getBoolDelegate;$/;"	t	namespace:dnn
getDoubleDelegate	dnn/base/base.h	/^typedef FastDelegate0<const double&> getDoubleDelegate;$/;"	t	namespace:dnn
getValueAtIndexDelegate	dnn/base/base.h	/^typedef FastDelegate1<const size_t&, const double&> getValueAtIndexDelegate;$/;"	t	namespace:dnn
n_id	dnn/base/base.h	/^    size_t n_id;$/;"	m	struct:dnn::SynSpike
operator ++	dnn/base/base.h	/^    void operator ++() {$/;"	f	struct:dnn::Time
operator <	dnn/base/base.h	/^    bool operator<(const double &dur) {$/;"	f	struct:dnn::Time
operator <<	dnn/base/base.h	/^    friend std::ostream& operator<<(std::ostream& str, const Printable &data) {$/;"	f	class:dnn::Printable
propSynSpikeDelegate	dnn/base/base.h	/^typedef FastDelegate1<const SynSpike&> propSynSpikeDelegate;$/;"	t	namespace:dnn
retDoubleDelegate	dnn/base/base.h	/^typedef FastDelegate0<double> retDoubleDelegate;$/;"	t	namespace:dnn
retRefDoubleAtTimeDelegate	dnn/base/base.h	/^typedef FastDelegate1<const Time&,const double&> retRefDoubleAtTimeDelegate;$/;"	t	namespace:dnn
stateDelegate	dnn/base/base.h	/^typedef FastDelegate0<> stateDelegate;$/;"	t	namespace:dnn
syn_id	dnn/base/base.h	/^    size_t syn_id;$/;"	m	struct:dnn::SynSpike
t	dnn/base/base.h	/^    double t;$/;"	m	struct:dnn::SynSpike
t	dnn/base/base.h	/^    double t;$/;"	m	struct:dnn::Time
~Object	dnn/base/base.h	/^    virtual ~Object() {}$/;"	f	class:dnn::Object
Constants	dnn/base/constants.h	/^	Constants(const string& fname, OptMods mods = OptMods()) {$/;"	f	struct:dnn::Constants
Constants	dnn/base/constants.h	/^struct Constants : public Printable {$/;"	s	namespace:dnn
SimConfiguration	dnn/base/constants.h	/^struct SimConfiguration : public Printable {$/;"	s	namespace:dnn
act_functions	dnn/base/constants.h	/^	map<string, string> act_functions;$/;"	m	struct:dnn::Constants
conn_map	dnn/base/constants.h	/^	multimap< pair<size_t, size_t>, string> conn_map;$/;"	m	struct:dnn::SimConfiguration
dnn	dnn/base/constants.h	/^namespace dnn {$/;"	n
dt	dnn/base/constants.h	/^	double dt;$/;"	m	struct:dnn::SimConfiguration
files	dnn/base/constants.h	/^	map<string, string> files;$/;"	m	struct:dnn::SimConfiguration
fill	dnn/base/constants.h	/^	static void fill(const Value &v, map<string, string> &m) {$/;"	f	struct:dnn::Constants
inputs	dnn/base/constants.h	/^	map<string, string> inputs;$/;"	m	struct:dnn::Constants
layers	dnn/base/constants.h	/^	vector<string> layers;$/;"	m	struct:dnn::SimConfiguration
neurons	dnn/base/constants.h	/^	map<string, string> neurons;$/;"	m	struct:dnn::Constants
neurons_to_listen	dnn/base/constants.h	/^	vector<size_t> neurons_to_listen;$/;"	m	struct:dnn::SimConfiguration
print	dnn/base/constants.h	/^	void print(ostream &o) const {$/;"	f	struct:dnn::Constants
print	dnn/base/constants.h	/^	void print(ostream &o) const {$/;"	f	struct:dnn::SimConfiguration
print_section	dnn/base/constants.h	/^	static void print_section(const string &sect_name, const map<string, string> &m, ostream &o) {$/;"	f	struct:dnn::Constants
seed	dnn/base/constants.h	/^	int seed;$/;"	m	struct:dnn::SimConfiguration
sim_conf	dnn/base/constants.h	/^	SimConfiguration sim_conf;$/;"	m	struct:dnn::Constants
synapses	dnn/base/constants.h	/^	map<string, string> synapses;$/;"	m	struct:dnn::Constants
Factory	dnn/base/factory.cpp	/^Factory::Factory() {$/;"	f	class:dnn::Factory
REG_TYPE	dnn/base/factory.cpp	26;"	d	file:
REG_TYPE_WITH_CONST	dnn/base/factory.cpp	29;"	d	file:
REG_TYPE_WITH_STATE_AND_CONST	dnn/base/factory.cpp	33;"	d	file:
createActFunction	dnn/base/factory.cpp	/^ActFunctionBase* Factory::createActFunction(string name) {$/;"	f	class:dnn::Factory
createObject	dnn/base/factory.cpp	/^SerializableBase* Factory::createObject(string name) {$/;"	f	class:dnn::Factory
createProto	dnn/base/factory.cpp	/^ProtoMessage Factory::createProto(string name) {$/;"	f	class:dnn::Factory
createSpikeNeuron	dnn/base/factory.cpp	/^SpikeNeuronBase* Factory::createSpikeNeuron(string name) {$/;"	f	class:dnn::Factory
deleteLast	dnn/base/factory.cpp	/^void Factory::deleteLast() {$/;"	f	class:dnn::Factory
dnn	dnn/base/factory.cpp	/^namespace dnn {$/;"	n	file:
getCachedTimeSeries	dnn/base/factory.cpp	/^TimeSeries* Factory::getCachedTimeSeries(const string &name, const string& filename, const string& format) {$/;"	f	class:dnn::Factory
getObjectsSlice	dnn/base/factory.cpp	/^pair<Factory::object_iter, Factory::object_iter> Factory::getObjectsSlice(const string& name) {$/;"	f	class:dnn::Factory
inst	dnn/base/factory.cpp	/^Factory& Factory::inst() {$/;"	f	class:dnn::Factory
prototypemap	dnn/base/factory.cpp	/^Factory::proto_map_type Factory::prototypemap;$/;"	m	class:dnn::Factory	file:
typemap	dnn/base/factory.cpp	/^Factory::entity_map_type Factory::typemap;$/;"	m	class:dnn::Factory	file:
~Factory	dnn/base/factory.cpp	/^Factory::~Factory() {$/;"	f	class:dnn::Factory
Factory	dnn/base/factory.h	/^class Factory {$/;"	c	namespace:dnn
createInstance	dnn/base/factory.h	/^    template<typename INST> static SerializableBase* createInstance() { return new INST; }$/;"	f	class:dnn::Factory
createProtoInstance	dnn/base/factory.h	/^    template<typename INST> static ProtoMessage createProtoInstance() { return new INST; }$/;"	f	class:dnn::Factory
dnn	dnn/base/factory.h	/^namespace dnn {$/;"	n
entity_map_type	dnn/base/factory.h	/^    typedef map<string, SerializableBase* (*)()> entity_map_type;$/;"	t	class:dnn::Factory
getObject	dnn/base/factory.h	/^    SerializableBase* getObject(object_iter &it) {$/;"	f	class:dnn::Factory
isProtoType	dnn/base/factory.h	/^    bool isProtoType(const string name) {$/;"	f	class:dnn::Factory
object_iter	dnn/base/factory.h	/^    typedef multimap<string, size_t>::iterator object_iter;$/;"	t	class:dnn::Factory
objects	dnn/base/factory.h	/^    vector<SerializableBase*> objects;$/;"	m	class:dnn::Factory
objects_map	dnn/base/factory.h	/^    multimap<string, size_t> objects_map;$/;"	m	class:dnn::Factory
proto_map_type	dnn/base/factory.h	/^    typedef map<string, ProtoMessage (*)()> proto_map_type;$/;"	t	class:dnn::Factory
proto_objects	dnn/base/factory.h	/^    vector<ProtoMessage> proto_objects;$/;"	m	class:dnn::Factory
prototypemap	dnn/base/factory.h	/^    static proto_map_type prototypemap;$/;"	m	class:dnn::Factory
registerType	dnn/base/factory.h	/^    static void registerType(const string type) {$/;"	f	class:dnn::Factory
ts_map	dnn/base/factory.h	/^    map<string, TimeSeries*> ts_map;$/;"	m	class:dnn::Factory
typemap	dnn/base/factory.h	/^    static entity_map_type typemap;$/;"	m	class:dnn::Factory
__BIN2ASCII_H__	dnn/contrib/pbjson/bin2ascii.h	9;"	d
b64_decode	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string b64_decode(const std::string &s)$/;"	f
b64_encode	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string b64_encode(const std::string &s)$/;"	f
bin2hex	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string bin2hex(const std::string &s)$/;"	f
hex2bin	dnn/contrib/pbjson/bin2ascii.h	/^inline std::string hex2bin(const std::string &s)$/;"	f
RETURN_ERR	dnn/contrib/pbjson/pbjson.cpp	36;"	d	file:
filed2json	dnn/contrib/pbjson/pbjson.cpp	/^    static rapidjson::Value* filed2json(const Message *msg, const FieldDescriptor *field,$/;"	f	namespace:pbjson
json2field	dnn/contrib/pbjson/pbjson.cpp	/^    static int json2field(const rapidjson::Value* json, Message* msg, const FieldDescriptor *field, std::string& err)$/;"	f	namespace:pbjson
json2pb	dnn/contrib/pbjson/pbjson.cpp	/^    int json2pb(const std::string& json, google::protobuf::Message* msg, std::string& err)$/;"	f	namespace:pbjson
json2string	dnn/contrib/pbjson/pbjson.cpp	/^    void json2string(const rapidjson::Value* json, std::string& str)$/;"	f	namespace:pbjson
jsonobject2pb	dnn/contrib/pbjson/pbjson.cpp	/^    int jsonobject2pb(const rapidjson::Value* json, google::protobuf::Message* msg, std::string& err)$/;"	f	namespace:pbjson
parse_json	dnn/contrib/pbjson/pbjson.cpp	/^    static int parse_json(const rapidjson::Value* json, Message* msg, std::string& err)$/;"	f	namespace:pbjson
parse_msg	dnn/contrib/pbjson/pbjson.cpp	/^    static rapidjson::Value* parse_msg(const Message *msg, rapidjson::Value::AllocatorType& allocator)$/;"	f	namespace:pbjson
pb2json	dnn/contrib/pbjson/pbjson.cpp	/^    void pb2json(const Message* msg, std::string& str)$/;"	f	namespace:pbjson
pb2jsonobject	dnn/contrib/pbjson/pbjson.cpp	/^    rapidjson::Value* pb2jsonobject(const google::protobuf::Message* msg)$/;"	f	namespace:pbjson
pb2jsonobject	dnn/contrib/pbjson/pbjson.cpp	/^    rapidjson::Value* pb2jsonobject(const google::protobuf::Message* msg, rapidjson::Value::AllocatorType& allocator)$/;"	f	namespace:pbjson
pbjson	dnn/contrib/pbjson/pbjson.cpp	/^namespace pbjson$/;"	n	file:
ERR_INVALID_ARG	dnn/contrib/pbjson/pbjson.hpp	38;"	d
ERR_INVALID_JSON	dnn/contrib/pbjson/pbjson.hpp	41;"	d
ERR_INVALID_PB	dnn/contrib/pbjson/pbjson.hpp	39;"	d
ERR_UNKNOWN_FIELD	dnn/contrib/pbjson/pbjson.hpp	40;"	d
PBJSON_HPP_	dnn/contrib/pbjson/pbjson.hpp	31;"	d
pbjson	dnn/contrib/pbjson/pbjson.hpp	/^namespace pbjson$/;"	n
AddChunk	dnn/contrib/rapidjson/allocators.h	/^    void AddChunk(size_t capacity) {$/;"	f	class:MemoryPoolAllocator
Capacity	dnn/contrib/rapidjson/allocators.h	/^    size_t Capacity() const {$/;"	f	class:MemoryPoolAllocator
ChunkHeader	dnn/contrib/rapidjson/allocators.h	/^    struct ChunkHeader {$/;"	s	class:MemoryPoolAllocator
Clear	dnn/contrib/rapidjson/allocators.h	/^    void Clear() {$/;"	f	class:MemoryPoolAllocator
CrtAllocator	dnn/contrib/rapidjson/allocators.h	/^class CrtAllocator {$/;"	c
Free	dnn/contrib/rapidjson/allocators.h	/^    static void Free(void *ptr) { (void)ptr; } \/\/ Do nothing$/;"	f	class:MemoryPoolAllocator
Free	dnn/contrib/rapidjson/allocators.h	/^    static void Free(void *ptr) { std::free(ptr); }$/;"	f	class:CrtAllocator
Malloc	dnn/contrib/rapidjson/allocators.h	/^    void* Malloc(size_t size) { return std::malloc(size); }$/;"	f	class:CrtAllocator
Malloc	dnn/contrib/rapidjson/allocators.h	/^    void* Malloc(size_t size) {$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    MemoryPoolAllocator(size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) : $/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    MemoryPoolAllocator(void *buffer, size_t size, size_t chunkSize = kDefaultChunkCapacity, BaseAllocator* baseAllocator = 0) :$/;"	f	class:MemoryPoolAllocator
MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^class MemoryPoolAllocator {$/;"	c
RAPIDJSON_ALLOCATORS_H_	dnn/contrib/rapidjson/allocators.h	22;"	d
Realloc	dnn/contrib/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) { (void)originalSize; return std::realloc(originalPtr, newSize); }$/;"	f	class:CrtAllocator
Realloc	dnn/contrib/rapidjson/allocators.h	/^    void* Realloc(void* originalPtr, size_t originalSize, size_t newSize) {$/;"	f	class:MemoryPoolAllocator
Size	dnn/contrib/rapidjson/allocators.h	/^    size_t Size() const {$/;"	f	class:MemoryPoolAllocator
baseAllocator_	dnn/contrib/rapidjson/allocators.h	/^    BaseAllocator* baseAllocator_;  \/\/!< base allocator for allocating memory chunks.$/;"	m	class:MemoryPoolAllocator
capacity	dnn/contrib/rapidjson/allocators.h	/^        size_t capacity;    \/\/!< Capacity of the chunk in bytes (excluding the header itself).$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
chunkHead_	dnn/contrib/rapidjson/allocators.h	/^    ChunkHeader *chunkHead_;    \/\/!< Head of the chunk linked-list. Only the head chunk serves allocation.$/;"	m	class:MemoryPoolAllocator
chunk_capacity_	dnn/contrib/rapidjson/allocators.h	/^    size_t chunk_capacity_;     \/\/!< The minimum capacity of chunk when they are allocated.$/;"	m	class:MemoryPoolAllocator
kDefaultChunkCapacity	dnn/contrib/rapidjson/allocators.h	/^    static const int kDefaultChunkCapacity = 64 * 1024; \/\/!< Default chunk capacity.$/;"	m	class:MemoryPoolAllocator
kNeedFree	dnn/contrib/rapidjson/allocators.h	/^    static const bool kNeedFree = false;    \/\/!< Tell users that no need to call Free() with this allocator. (concept Allocator)$/;"	m	class:MemoryPoolAllocator
kNeedFree	dnn/contrib/rapidjson/allocators.h	/^    static const bool kNeedFree = true;$/;"	m	class:CrtAllocator
next	dnn/contrib/rapidjson/allocators.h	/^        ChunkHeader *next;  \/\/!< Next chunk in the linked list.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
ownBaseAllocator_	dnn/contrib/rapidjson/allocators.h	/^    BaseAllocator* ownBaseAllocator_;   \/\/!< base allocator created by this object.$/;"	m	class:MemoryPoolAllocator
size	dnn/contrib/rapidjson/allocators.h	/^        size_t size;        \/\/!< Current size of allocated memory in bytes.$/;"	m	struct:MemoryPoolAllocator::ChunkHeader
userBuffer_	dnn/contrib/rapidjson/allocators.h	/^    void *userBuffer_;          \/\/!< User supplied buffer.$/;"	m	class:MemoryPoolAllocator
~MemoryPoolAllocator	dnn/contrib/rapidjson/allocators.h	/^    ~MemoryPoolAllocator() {$/;"	f	class:MemoryPoolAllocator
Accept	dnn/contrib/rapidjson/document.h	/^    bool Accept(Handler& handler) const {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    AddMember(StringRefType name, T value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(GenericValue&& name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
AddMember	dnn/contrib/rapidjson/document.h	/^    GenericValue& AddMember(StringRefType name, StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
AllocatorType	dnn/contrib/rapidjson/document.h	/^    typedef Allocator AllocatorType;                        \/\/!< Allocator type from template parameter.$/;"	t	class:GenericDocument
AllocatorType	dnn/contrib/rapidjson/document.h	/^    typedef Allocator AllocatorType;                \/\/!< Allocator type from template parameter.$/;"	t	class:GenericValue
Array	dnn/contrib/rapidjson/document.h	/^    struct Array {$/;"	s	class:GenericValue
BaseType	dnn/contrib/rapidjson/document.h	/^    typedef std::iterator<std::random_access_iterator_tag,ValueType> BaseType;$/;"	t	class:GenericMemberIterator
Begin	dnn/contrib/rapidjson/document.h	/^    ConstValueIterator Begin() const { return const_cast<GenericValue&>(*this).Begin(); }$/;"	f	class:GenericValue
Begin	dnn/contrib/rapidjson/document.h	/^    ValueIterator Begin() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements; }$/;"	f	class:GenericValue
Bool	dnn/contrib/rapidjson/document.h	/^    bool Bool(bool b) { new (stack_.template Push<ValueType>()) ValueType(b); return true; }$/;"	f	class:GenericDocument
Capacity	dnn/contrib/rapidjson/document.h	/^    SizeType Capacity() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.capacity; }$/;"	f	class:GenericValue
Ch	dnn/contrib/rapidjson/document.h	/^    typedef CharType Ch; \/\/!< character type of the string$/;"	t	struct:GenericStringRef
Ch	dnn/contrib/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;                       \/\/!< Character type derived from Encoding.$/;"	t	class:GenericDocument
Ch	dnn/contrib/rapidjson/document.h	/^    typedef typename Encoding::Ch Ch;               \/\/!< Character type derived from Encoding.$/;"	t	class:GenericValue
CharType	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(CharType (&str)[N]) \/* = delete *\/;$/;"	m	struct:GenericStringRef
Clear	dnn/contrib/rapidjson/document.h	/^    void Clear() {$/;"	f	class:GenericValue
ClearStack	dnn/contrib/rapidjson/document.h	/^    void ClearStack() {$/;"	f	class:GenericDocument
ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^        explicit ClearStackOnExit(GenericDocument& d) : d_(d) {}$/;"	f	struct:GenericDocument::ClearStackOnExit
ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericDocument
ConstIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator<true,Encoding,Allocator>  ConstIterator;$/;"	t	class:GenericMemberIterator
ConstMemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<true,Encoding,Allocator>::Iterator ConstMemberIterator;  \/\/!< Constant member iterator for iterating in object.$/;"	t	class:GenericValue
ConstValueIterator	dnn/contrib/rapidjson/document.h	/^    typedef const GenericValue* ConstValueIterator; \/\/!< Constant value iterator for iterating in array.$/;"	t	class:GenericValue
CopyFrom	dnn/contrib/rapidjson/document.h	/^    GenericValue& CopyFrom(const GenericValue<Encoding, SourceAllocator>& rhs, Allocator& allocator) {$/;"	f	class:GenericValue
Data	dnn/contrib/rapidjson/document.h	/^    union Data {$/;"	u	class:GenericValue
Destroy	dnn/contrib/rapidjson/document.h	/^    void Destroy() {$/;"	f	class:GenericDocument
DifferenceType	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::difference_type DifferenceType;$/;"	t	class:GenericMemberIterator
Document	dnn/contrib/rapidjson/document.h	/^typedef GenericDocument<UTF8<> > Document;$/;"	t
Double	dnn/contrib/rapidjson/document.h	/^    bool Double(double d) { new (stack_.template Push<ValueType>()) ValueType(d); return true; }$/;"	f	class:GenericDocument
Empty	dnn/contrib/rapidjson/document.h	/^    bool Empty() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size == 0; }$/;"	f	class:GenericValue
EncodingType	dnn/contrib/rapidjson/document.h	/^    typedef Encoding EncodingType;                  \/\/!< Encoding type from template parameter.$/;"	t	class:GenericValue
End	dnn/contrib/rapidjson/document.h	/^    ConstValueIterator End() const { return const_cast<GenericValue&>(*this).End(); }$/;"	f	class:GenericValue
End	dnn/contrib/rapidjson/document.h	/^    ValueIterator End() { RAPIDJSON_ASSERT(IsArray()); return data_.a.elements + data_.a.size; }$/;"	f	class:GenericValue
EndArray	dnn/contrib/rapidjson/document.h	/^    bool EndArray(SizeType elementCount) {$/;"	f	class:GenericDocument
EndObject	dnn/contrib/rapidjson/document.h	/^    bool EndObject(SizeType memberCount) {$/;"	f	class:GenericDocument
Erase	dnn/contrib/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator first, ConstValueIterator last) {$/;"	f	class:GenericValue
Erase	dnn/contrib/rapidjson/document.h	/^    ValueIterator Erase(ConstValueIterator pos) {$/;"	f	class:GenericValue
EraseMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator first, ConstMemberIterator last) {$/;"	f	class:GenericValue
EraseMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator EraseMember(ConstMemberIterator pos) {$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator FindMember(const Ch* name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator FindMember(const Ch* name) {$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
FindMember	dnn/contrib/rapidjson/document.h	/^    template <typename SourceAllocator> ConstMemberIterator FindMember(const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this).FindMember(name); }$/;"	f	class:GenericValue
GenericDocument	dnn/contrib/rapidjson/document.h	/^    GenericDocument(Allocator* allocator = 0, size_t stackCapacity = kDefaultStackCapacity, StackAllocator* stackAllocator = 0) : $/;"	f	class:GenericDocument
GenericDocument	dnn/contrib/rapidjson/document.h	/^class GenericDocument : public GenericValue<Encoding, Allocator> {$/;"	c
GenericMember	dnn/contrib/rapidjson/document.h	/^struct GenericMember { $/;"	s
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    GenericMemberIterator() : ptr_() {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    GenericMemberIterator(const NonConstIterator & it) : ptr_(it.ptr_) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^    explicit GenericMemberIterator(Pointer p) : ptr_(p) {}$/;"	f	class:GenericMemberIterator
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^class GenericMemberIterator$/;"	c
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^struct GenericMemberIterator<false,Encoding,Allocator> {$/;"	s
GenericMemberIterator	dnn/contrib/rapidjson/document.h	/^struct GenericMemberIterator<true,Encoding,Allocator> {$/;"	s
GenericStringRef	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(const CharType* str, SizeType len)$/;"	f	struct:GenericStringRef
GenericStringRef	dnn/contrib/rapidjson/document.h	/^    explicit GenericStringRef(const CharType* str)$/;"	f	struct:GenericStringRef
GenericStringRef	dnn/contrib/rapidjson/document.h	/^struct GenericStringRef {$/;"	s
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s, length), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch*s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^    GenericValue(const std::basic_string<Ch>& s, Allocator& allocator) : data_(), flags_() { SetStringRaw(StringRef(s), allocator); }$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^GenericValue<Encoding,Allocator>::GenericValue(const GenericValue<Encoding,SourceAllocator>& rhs, Allocator& allocator)$/;"	f	class:GenericValue
GenericValue	dnn/contrib/rapidjson/document.h	/^class GenericValue {$/;"	c
GetAllocator	dnn/contrib/rapidjson/document.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:GenericDocument
GetBool	dnn/contrib/rapidjson/document.h	/^    bool GetBool() const { RAPIDJSON_ASSERT(IsBool()); return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
GetDouble	dnn/contrib/rapidjson/document.h	/^    double GetDouble() const {$/;"	f	class:GenericValue
GetErrorOffset	dnn/contrib/rapidjson/document.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericDocument
GetInt	dnn/contrib/rapidjson/document.h	/^    int GetInt() const          { RAPIDJSON_ASSERT(flags_ & kIntFlag);   return data_.n.i.i;   }$/;"	f	class:GenericValue
GetInt64	dnn/contrib/rapidjson/document.h	/^    int64_t GetInt64() const    { RAPIDJSON_ASSERT(flags_ & kInt64Flag); return data_.n.i64; }$/;"	f	class:GenericValue
GetLength	dnn/contrib/rapidjson/document.h	/^        inline SizeType GetLength() const       { return  (SizeType)(MaxSize -  str[LenPos]); }$/;"	f	struct:GenericValue::ShortString
GetParseError	dnn/contrib/rapidjson/document.h	/^    ParseErrorCode GetParseError() const { return parseResult_.Code(); }$/;"	f	class:GenericDocument
GetStackCapacity	dnn/contrib/rapidjson/document.h	/^    size_t GetStackCapacity() const { return stack_.GetCapacity(); }$/;"	f	class:GenericDocument
GetString	dnn/contrib/rapidjson/document.h	/^    const Ch* GetString() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? data_.ss.str : data_.s.str); }$/;"	f	class:GenericValue
GetStringLength	dnn/contrib/rapidjson/document.h	/^    SizeType GetStringLength() const { RAPIDJSON_ASSERT(IsString()); return ((flags_ & kInlineStrFlag) ? (data_.ss.GetLength()) : data_.s.length); }$/;"	f	class:GenericValue
GetType	dnn/contrib/rapidjson/document.h	/^    Type GetType()  const { return static_cast<Type>(flags_ & kTypeMask); }$/;"	f	class:GenericValue
GetUint	dnn/contrib/rapidjson/document.h	/^    unsigned GetUint() const    { RAPIDJSON_ASSERT(flags_ & kUintFlag);  return data_.n.u.u;   }$/;"	f	class:GenericValue
GetUint64	dnn/contrib/rapidjson/document.h	/^    uint64_t GetUint64() const  { RAPIDJSON_ASSERT(flags_ & kUint64Flag); return data_.n.u64; }$/;"	f	class:GenericValue
HasMember	dnn/contrib/rapidjson/document.h	/^    bool HasMember(const Ch* name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasMember	dnn/contrib/rapidjson/document.h	/^    bool HasMember(const GenericValue<Encoding, SourceAllocator>& name) const { return FindMember(name) != MemberEnd(); }$/;"	f	class:GenericValue
HasParseError	dnn/contrib/rapidjson/document.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericDocument
I	dnn/contrib/rapidjson/document.h	/^        struct I {$/;"	s	union:GenericValue::Number
Int	dnn/contrib/rapidjson/document.h	/^    bool Int(int i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Int64	dnn/contrib/rapidjson/document.h	/^    bool Int64(int64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
IsArray	dnn/contrib/rapidjson/document.h	/^    bool IsArray()  const { return flags_ == kArrayFlag; }$/;"	f	class:GenericValue
IsBool	dnn/contrib/rapidjson/document.h	/^    bool IsBool()   const { return (flags_ & kBoolFlag) != 0; }$/;"	f	class:GenericValue
IsDouble	dnn/contrib/rapidjson/document.h	/^    bool IsDouble() const { return (flags_ & kDoubleFlag) != 0; }$/;"	f	class:GenericValue
IsFalse	dnn/contrib/rapidjson/document.h	/^    bool IsFalse()  const { return flags_ == kFalseFlag; }$/;"	f	class:GenericValue
IsGenericValue	dnn/contrib/rapidjson/document.h	/^template <typename T> struct IsGenericValue : IsGenericValueImpl<T>::Type {};$/;"	s	namespace:internal
IsGenericValueImpl	dnn/contrib/rapidjson/document.h	/^struct IsGenericValueImpl : FalseType {};$/;"	s	namespace:internal
IsGenericValueImpl	dnn/contrib/rapidjson/document.h	/^template <typename T> struct IsGenericValueImpl<T, typename Void<typename T::EncodingType>::Type, typename Void<typename T::AllocatorType>::Type>$/;"	s	namespace:internal
IsInt	dnn/contrib/rapidjson/document.h	/^    bool IsInt()    const { return (flags_ & kIntFlag) != 0; }$/;"	f	class:GenericValue
IsInt64	dnn/contrib/rapidjson/document.h	/^    bool IsInt64()  const { return (flags_ & kInt64Flag) != 0; }$/;"	f	class:GenericValue
IsNull	dnn/contrib/rapidjson/document.h	/^    bool IsNull()   const { return flags_ == kNullFlag; }$/;"	f	class:GenericValue
IsNumber	dnn/contrib/rapidjson/document.h	/^    bool IsNumber() const { return (flags_ & kNumberFlag) != 0; }$/;"	f	class:GenericValue
IsObject	dnn/contrib/rapidjson/document.h	/^    bool IsObject() const { return flags_ == kObjectFlag; }$/;"	f	class:GenericValue
IsString	dnn/contrib/rapidjson/document.h	/^    bool IsString() const { return (flags_ & kStringFlag) != 0; }$/;"	f	class:GenericValue
IsTrue	dnn/contrib/rapidjson/document.h	/^    bool IsTrue()   const { return flags_ == kTrueFlag; }$/;"	f	class:GenericValue
IsUint	dnn/contrib/rapidjson/document.h	/^    bool IsUint()   const { return (flags_ & kUintFlag) != 0; }$/;"	f	class:GenericValue
IsUint64	dnn/contrib/rapidjson/document.h	/^    bool IsUint64() const { return (flags_ & kUint64Flag) != 0; }$/;"	f	class:GenericValue
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator Iterator;$/;"	t	class:GenericMemberIterator
Iterator	dnn/contrib/rapidjson/document.h	/^    typedef const GenericMember<Encoding,Allocator>* Iterator;$/;"	t	struct:GenericMemberIterator
Key	dnn/contrib/rapidjson/document.h	/^    bool Key(const Ch* str, SizeType length, bool copy) { return String(str, length, copy); }$/;"	f	class:GenericDocument
LenPos	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon21
MaxChars	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon21
MaxSize	dnn/contrib/rapidjson/document.h	/^        enum { MaxChars = sizeof(String) \/ sizeof(Ch), MaxSize = MaxChars - 1, LenPos = MaxSize };$/;"	e	enum:GenericValue::ShortString::__anon21
Member	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding, Allocator> Member;$/;"	t	class:GenericValue
MemberBegin	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberBegin() const { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberBegin	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberBegin()            { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members); }$/;"	f	class:GenericValue
MemberCount	dnn/contrib/rapidjson/document.h	/^    SizeType MemberCount() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size; }$/;"	f	class:GenericValue
MemberEnd	dnn/contrib/rapidjson/document.h	/^    ConstMemberIterator MemberEnd() const   { RAPIDJSON_ASSERT(IsObject()); return ConstMemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberEnd	dnn/contrib/rapidjson/document.h	/^    MemberIterator MemberEnd()              { RAPIDJSON_ASSERT(IsObject()); return MemberIterator(data_.o.members + data_.o.size); }$/;"	f	class:GenericValue
MemberIterator	dnn/contrib/rapidjson/document.h	/^    typedef typename GenericMemberIterator<false,Encoding,Allocator>::Iterator MemberIterator;  \/\/!< Member iterator for iterating in object.$/;"	t	class:GenericValue
NonConstIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericMemberIterator<false,Encoding,Allocator> NonConstIterator;$/;"	t	class:GenericMemberIterator
Null	dnn/contrib/rapidjson/document.h	/^    bool Null() { new (stack_.template Push<ValueType>()) ValueType(); return true; }$/;"	f	class:GenericDocument
Number	dnn/contrib/rapidjson/document.h	/^    union Number {$/;"	u	class:GenericValue
Object	dnn/contrib/rapidjson/document.h	/^    struct Object {$/;"	s	class:GenericValue
ObjectEmpty	dnn/contrib/rapidjson/document.h	/^    bool ObjectEmpty() const { RAPIDJSON_ASSERT(IsObject()); return data_.o.size == 0; }$/;"	f	class:GenericValue
Parse	dnn/contrib/rapidjson/document.h	/^    GenericDocument& Parse(const Ch* str) {$/;"	f	class:GenericDocument
ParseInsitu	dnn/contrib/rapidjson/document.h	/^    GenericDocument& ParseInsitu(Ch* str) {$/;"	f	class:GenericDocument
ParseStream	dnn/contrib/rapidjson/document.h	/^    GenericDocument& ParseStream(InputStream& is) {$/;"	f	class:GenericDocument
PlainType	dnn/contrib/rapidjson/document.h	/^    typedef GenericMember<Encoding,Allocator> PlainType;$/;"	t	class:GenericMemberIterator
Pointer	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::pointer         Pointer;$/;"	t	class:GenericMemberIterator
PopBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PopBack() {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(GenericValue&& value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    GenericValue& PushBack(StringRefType value, Allocator& allocator) {$/;"	f	class:GenericValue
PushBack	dnn/contrib/rapidjson/document.h	/^    PushBack(T value, Allocator& allocator) {$/;"	f	class:GenericValue
RAPIDJSON_DOCUMENT_H_	dnn/contrib/rapidjson/document.h	22;"	d
RAPIDJSON_HAS_STDSTRING	dnn/contrib/rapidjson/document.h	44;"	d
RAPIDJSON_NOEXCEPT	dnn/contrib/rapidjson/document.h	/^    GenericStringRef(const CharType (&str)[N]) RAPIDJSON_NOEXCEPT$/;"	m	struct:GenericStringRef
Reference	dnn/contrib/rapidjson/document.h	/^    typedef typename BaseType::reference       Reference;$/;"	t	class:GenericMemberIterator
RemoveAllMembers	dnn/contrib/rapidjson/document.h	/^    void RemoveAllMembers() {$/;"	f	class:GenericValue
RemoveMember	dnn/contrib/rapidjson/document.h	/^    MemberIterator RemoveMember(MemberIterator m) {$/;"	f	class:GenericValue
RemoveMember	dnn/contrib/rapidjson/document.h	/^    bool RemoveMember(const Ch* name) {$/;"	f	class:GenericValue
RemoveMember	dnn/contrib/rapidjson/document.h	/^    bool RemoveMember(const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
Reserve	dnn/contrib/rapidjson/document.h	/^    GenericValue& Reserve(SizeType newCapacity, Allocator &allocator) {$/;"	f	class:GenericValue
SetArray	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetArray() {  this->~GenericValue(); new (this) GenericValue(kArrayType); return *this; }$/;"	f	class:GenericValue
SetArrayRaw	dnn/contrib/rapidjson/document.h	/^    void SetArrayRaw(GenericValue* values, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetBool	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetBool(bool b) { this->~GenericValue(); new (this) GenericValue(b); return *this; }$/;"	f	class:GenericValue
SetDouble	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetDouble(double d)       { this->~GenericValue(); new (this) GenericValue(d);    return *this; }$/;"	f	class:GenericValue
SetInt	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetInt(int i)             { this->~GenericValue(); new (this) GenericValue(i);    return *this; }$/;"	f	class:GenericValue
SetInt64	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetInt64(int64_t i64)     { this->~GenericValue(); new (this) GenericValue(i64);  return *this; }$/;"	f	class:GenericValue
SetLength	dnn/contrib/rapidjson/document.h	/^        inline void     SetLength(SizeType len) { str[LenPos] = (Ch)(MaxSize -  len); }$/;"	f	struct:GenericValue::ShortString
SetNull	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetNull() { this->~GenericValue(); new (this) GenericValue(); return *this; }$/;"	f	class:GenericValue
SetObject	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetObject() { this->~GenericValue(); new (this) GenericValue(kObjectType); return *this; }$/;"	f	class:GenericValue
SetObjectRaw	dnn/contrib/rapidjson/document.h	/^    void SetObjectRaw(Member* members, SizeType count, Allocator& allocator) {$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(StringRefType s) { this->~GenericValue(); SetStringRaw(s); return *this; }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, Allocator& allocator) { return SetString(s, internal::StrLen(s), allocator); }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length) { return SetString(StringRef(s, length)); }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const Ch* s, SizeType length, Allocator& allocator) { this->~GenericValue(); SetStringRaw(StringRef(s, length), allocator); return *this; }$/;"	f	class:GenericValue
SetString	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetString(const std::basic_string<Ch>& s, Allocator& allocator) { return SetString(s.data(), s.size(), allocator); }$/;"	f	class:GenericValue
SetStringRaw	dnn/contrib/rapidjson/document.h	/^    void SetStringRaw(StringRefType s, Allocator& allocator) {$/;"	f	class:GenericValue
SetUint	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetUint(unsigned u)       { this->~GenericValue(); new (this) GenericValue(u);    return *this; }$/;"	f	class:GenericValue
SetUint64	dnn/contrib/rapidjson/document.h	/^    GenericValue& SetUint64(uint64_t u64)   { this->~GenericValue(); new (this) GenericValue(u64);  return *this; }$/;"	f	class:GenericValue
ShortString	dnn/contrib/rapidjson/document.h	/^    struct ShortString {$/;"	s	class:GenericValue
Size	dnn/contrib/rapidjson/document.h	/^    SizeType Size() const { RAPIDJSON_ASSERT(IsArray()); return data_.a.size; }$/;"	f	class:GenericValue
StartArray	dnn/contrib/rapidjson/document.h	/^    bool StartArray() { new (stack_.template Push<ValueType>()) ValueType(kArrayType); return true; }$/;"	f	class:GenericDocument
StartObject	dnn/contrib/rapidjson/document.h	/^    bool StartObject() { new (stack_.template Push<ValueType>()) ValueType(kObjectType); return true; }$/;"	f	class:GenericDocument
String	dnn/contrib/rapidjson/document.h	/^    bool String(const Ch* str, SizeType length, bool copy) { $/;"	f	class:GenericDocument
String	dnn/contrib/rapidjson/document.h	/^    struct String {$/;"	s	class:GenericValue
StringEqual	dnn/contrib/rapidjson/document.h	/^    bool StringEqual(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str) {$/;"	f
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const CharType* str, size_t length) {$/;"	f
StringRef	dnn/contrib/rapidjson/document.h	/^inline GenericStringRef<CharType> StringRef(const std::basic_string<CharType>& str) {$/;"	f
StringRefType	dnn/contrib/rapidjson/document.h	/^    typedef GenericStringRef<Ch> StringRefType;     \/\/!< Reference to a constant string$/;"	t	class:GenericValue
U	dnn/contrib/rapidjson/document.h	/^        struct U {$/;"	s	union:GenericValue::Number
Uint	dnn/contrib/rapidjson/document.h	/^    bool Uint(unsigned i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Uint64	dnn/contrib/rapidjson/document.h	/^    bool Uint64(uint64_t i) { new (stack_.template Push<ValueType>()) ValueType(i); return true; }$/;"	f	class:GenericDocument
Usable	dnn/contrib/rapidjson/document.h	/^        inline static bool Usable(SizeType len) { return            (MaxSize >= len); }$/;"	f	struct:GenericValue::ShortString
Value	dnn/contrib/rapidjson/document.h	/^typedef GenericValue<UTF8<> > Value;$/;"	t
ValueIterator	dnn/contrib/rapidjson/document.h	/^    typedef GenericValue* ValueIterator;            \/\/!< Value iterator for iterating in array.$/;"	t	class:GenericValue
ValueType	dnn/contrib/rapidjson/document.h	/^    typedef GenericValue<Encoding, Allocator> ValueType;    \/\/!< Value type of the document.$/;"	t	class:GenericDocument
ValueType	dnn/contrib/rapidjson/document.h	/^    typedef typename internal::MaybeAddConst<Const,PlainType>::Type ValueType;$/;"	t	class:GenericMemberIterator
a	dnn/contrib/rapidjson/document.h	/^        Array a;$/;"	m	union:GenericValue::Data
allocator_	dnn/contrib/rapidjson/document.h	/^    Allocator* allocator_;$/;"	m	class:GenericDocument
capacity	dnn/contrib/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Array
capacity	dnn/contrib/rapidjson/document.h	/^        SizeType capacity;$/;"	m	struct:GenericValue::Object
d	dnn/contrib/rapidjson/document.h	/^        double d;$/;"	m	union:GenericValue::Number
d_	dnn/contrib/rapidjson/document.h	/^        GenericDocument& d_;$/;"	m	struct:GenericDocument::ClearStackOnExit
data_	dnn/contrib/rapidjson/document.h	/^    Data data_;$/;"	m	class:GenericValue
elements	dnn/contrib/rapidjson/document.h	/^        GenericValue* elements;$/;"	m	struct:GenericValue::Array
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue() RAPIDJSON_NOEXCEPT : data_(), flags_(kNullFlag) {}$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue(GenericValue&& rhs) RAPIDJSON_NOEXCEPT : data_(rhs.data_), flags_(rhs.flags_) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    GenericValue(const Ch* s, SizeType length) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(StringRef(s, length)); }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(StringRefType s) RAPIDJSON_NOEXCEPT : data_(), flags_() { SetStringRaw(s); }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(Type type) RAPIDJSON_NOEXCEPT : data_(), flags_() {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(double d) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberDoubleFlag) { data_.n.d = d; }$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(int i) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberIntFlag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(int64_t i64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberInt64Flag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(uint64_t u64) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUint64Flag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    explicit GenericValue(unsigned u) RAPIDJSON_NOEXCEPT : data_(), flags_(kNumberUintFlag) {$/;"	f	class:GenericValue
flags_	dnn/contrib/rapidjson/document.h	/^    unsigned flags_;$/;"	m	class:GenericValue
hashcode	dnn/contrib/rapidjson/document.h	/^        unsigned hashcode;  \/\/!< reserved$/;"	m	struct:GenericValue::String
i	dnn/contrib/rapidjson/document.h	/^            int i;$/;"	m	struct:GenericValue::Number::I
i	dnn/contrib/rapidjson/document.h	/^        }i;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::I
i64	dnn/contrib/rapidjson/document.h	/^        int64_t i64;$/;"	m	union:GenericValue::Number
internal	dnn/contrib/rapidjson/document.h	/^namespace internal {$/;"	n
kArrayFlag	dnn/contrib/rapidjson/document.h	/^        kArrayFlag = kArrayType,$/;"	e	enum:GenericValue::__anon20
kBoolFlag	dnn/contrib/rapidjson/document.h	/^        kBoolFlag = 0x100,$/;"	e	enum:GenericValue::__anon20
kConstStringFlag	dnn/contrib/rapidjson/document.h	/^        kConstStringFlag = kStringType | kStringFlag,$/;"	e	enum:GenericValue::__anon20
kCopyFlag	dnn/contrib/rapidjson/document.h	/^        kCopyFlag = 0x200000,$/;"	e	enum:GenericValue::__anon20
kCopyStringFlag	dnn/contrib/rapidjson/document.h	/^        kCopyStringFlag = kStringType | kStringFlag | kCopyFlag,$/;"	e	enum:GenericValue::__anon20
kDefaultArrayCapacity	dnn/contrib/rapidjson/document.h	/^    static const SizeType kDefaultArrayCapacity = 16;$/;"	m	class:GenericValue
kDefaultObjectCapacity	dnn/contrib/rapidjson/document.h	/^    static const SizeType kDefaultObjectCapacity = 16;$/;"	m	class:GenericValue
kDefaultStackCapacity	dnn/contrib/rapidjson/document.h	/^    static const size_t kDefaultStackCapacity = 1024;$/;"	m	class:GenericDocument
kDoubleFlag	dnn/contrib/rapidjson/document.h	/^        kDoubleFlag = 0x4000,$/;"	e	enum:GenericValue::__anon20
kFalseFlag	dnn/contrib/rapidjson/document.h	/^        kFalseFlag = kFalseType | kBoolFlag,$/;"	e	enum:GenericValue::__anon20
kInlineStrFlag	dnn/contrib/rapidjson/document.h	/^        kInlineStrFlag = 0x400000,$/;"	e	enum:GenericValue::__anon20
kInt64Flag	dnn/contrib/rapidjson/document.h	/^        kInt64Flag = 0x1000,$/;"	e	enum:GenericValue::__anon20
kIntFlag	dnn/contrib/rapidjson/document.h	/^        kIntFlag = 0x400,$/;"	e	enum:GenericValue::__anon20
kNullFlag	dnn/contrib/rapidjson/document.h	/^        kNullFlag = kNullType,$/;"	e	enum:GenericValue::__anon20
kNumberAnyFlag	dnn/contrib/rapidjson/document.h	/^        kNumberAnyFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag | kUintFlag | kUint64Flag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon20
kNumberDoubleFlag	dnn/contrib/rapidjson/document.h	/^        kNumberDoubleFlag = kNumberType | kNumberFlag | kDoubleFlag,$/;"	e	enum:GenericValue::__anon20
kNumberFlag	dnn/contrib/rapidjson/document.h	/^        kNumberFlag = 0x200,$/;"	e	enum:GenericValue::__anon20
kNumberInt64Flag	dnn/contrib/rapidjson/document.h	/^        kNumberInt64Flag = kNumberType | kNumberFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon20
kNumberIntFlag	dnn/contrib/rapidjson/document.h	/^        kNumberIntFlag = kNumberType | kNumberFlag | kIntFlag | kInt64Flag,$/;"	e	enum:GenericValue::__anon20
kNumberUint64Flag	dnn/contrib/rapidjson/document.h	/^        kNumberUint64Flag = kNumberType | kNumberFlag | kUint64Flag,$/;"	e	enum:GenericValue::__anon20
kNumberUintFlag	dnn/contrib/rapidjson/document.h	/^        kNumberUintFlag = kNumberType | kNumberFlag | kUintFlag | kUint64Flag | kInt64Flag,$/;"	e	enum:GenericValue::__anon20
kObjectFlag	dnn/contrib/rapidjson/document.h	/^        kObjectFlag = kObjectType,$/;"	e	enum:GenericValue::__anon20
kShortStringFlag	dnn/contrib/rapidjson/document.h	/^        kShortStringFlag = kStringType | kStringFlag | kCopyFlag | kInlineStrFlag,$/;"	e	enum:GenericValue::__anon20
kStringFlag	dnn/contrib/rapidjson/document.h	/^        kStringFlag = 0x100000,$/;"	e	enum:GenericValue::__anon20
kTrueFlag	dnn/contrib/rapidjson/document.h	/^        kTrueFlag = kTrueType | kBoolFlag,$/;"	e	enum:GenericValue::__anon20
kTypeMask	dnn/contrib/rapidjson/document.h	/^        kTypeMask = 0xFF    \/\/ bitwise-and with mask of 0xFF can be optimized by compiler$/;"	e	enum:GenericValue::__anon20
kUint64Flag	dnn/contrib/rapidjson/document.h	/^        kUint64Flag = 0x2000,$/;"	e	enum:GenericValue::__anon20
kUintFlag	dnn/contrib/rapidjson/document.h	/^        kUintFlag = 0x800,$/;"	e	enum:GenericValue::__anon20
length	dnn/contrib/rapidjson/document.h	/^        SizeType length;$/;"	m	struct:GenericValue::String
length	dnn/contrib/rapidjson/document.h	/^    const SizeType length; \/\/!< length of the string (excluding the trailing NULL terminator)$/;"	m	struct:GenericStringRef
members	dnn/contrib/rapidjson/document.h	/^        Member* members;$/;"	m	struct:GenericValue::Object
n	dnn/contrib/rapidjson/document.h	/^        Number n;$/;"	m	union:GenericValue::Data
name	dnn/contrib/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> name;     \/\/!< name of member (must be a string)$/;"	m	struct:GenericMember
o	dnn/contrib/rapidjson/document.h	/^        Object o;$/;"	m	union:GenericValue::Data
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(ConstIterator that) const { return ptr_ != that.ptr_; }$/;"	f	class:GenericMemberIterator
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(const Ch* rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    bool operator!=(const GenericValue<Encoding, SourceAllocator>& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& rhs) const { return !(*this == rhs); }$/;"	f	class:GenericValue
operator !=	dnn/contrib/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator!=(const T& lhs, const GenericValue& rhs) { return !(rhs == lhs); }$/;"	f	class:GenericValue
operator *	dnn/contrib/rapidjson/document.h	/^    Reference operator*() const { return *ptr_; }$/;"	f	class:GenericMemberIterator
operator +	dnn/contrib/rapidjson/document.h	/^    Iterator operator+(DifferenceType n) const { return Iterator(ptr_+n); }$/;"	f	class:GenericMemberIterator
operator ++	dnn/contrib/rapidjson/document.h	/^    Iterator  operator++(int){ Iterator old(*this); ++ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator ++	dnn/contrib/rapidjson/document.h	/^    Iterator& operator++(){ ++ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator +=	dnn/contrib/rapidjson/document.h	/^    Iterator& operator+=(DifferenceType n) { ptr_+=n; return *this; }$/;"	f	class:GenericMemberIterator
operator -	dnn/contrib/rapidjson/document.h	/^    DifferenceType operator-(ConstIterator that) const { return ptr_-that.ptr_; }$/;"	f	class:GenericMemberIterator
operator -	dnn/contrib/rapidjson/document.h	/^    Iterator operator-(DifferenceType n) const { return Iterator(ptr_-n); }$/;"	f	class:GenericMemberIterator
operator --	dnn/contrib/rapidjson/document.h	/^    Iterator  operator--(int){ Iterator old(*this); --ptr_; return old; }$/;"	f	class:GenericMemberIterator
operator --	dnn/contrib/rapidjson/document.h	/^    Iterator& operator--(){ --ptr_; return *this; }$/;"	f	class:GenericMemberIterator
operator -=	dnn/contrib/rapidjson/document.h	/^    Iterator& operator-=(DifferenceType n) { ptr_-=n; return *this; }$/;"	f	class:GenericMemberIterator
operator ->	dnn/contrib/rapidjson/document.h	/^    Pointer   operator->() const { return ptr_; }$/;"	f	class:GenericMemberIterator
operator <	dnn/contrib/rapidjson/document.h	/^    bool operator< (ConstIterator that) const { return ptr_ < that.ptr_; }$/;"	f	class:GenericMemberIterator
operator <=	dnn/contrib/rapidjson/document.h	/^    bool operator<=(ConstIterator that) const { return ptr_ <= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator =	dnn/contrib/rapidjson/document.h	/^    operator=(T value) {$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(ConstIterator that) const { return ptr_ == that.ptr_; }$/;"	f	class:GenericMemberIterator
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const Ch* rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const GenericValue<Encoding, SourceAllocator>& rhs) const {$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    bool operator==(const std::basic_string<Ch>& rhs) const { return *this == GenericValue(StringRef(rhs)); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    template <typename T> RAPIDJSON_DISABLEIF_RETURN((internal::OrExpr<internal::IsPointer<T>,internal::IsGenericValue<T> >), (bool)) operator==(const T& rhs) const { return *this == GenericValue(rhs); }$/;"	f	class:GenericValue
operator ==	dnn/contrib/rapidjson/document.h	/^    template <typename T> friend RAPIDJSON_DISABLEIF_RETURN((internal::IsGenericValue<T>), (bool)) operator==(const T& lhs, const GenericValue& rhs) { return rhs == lhs; }$/;"	f	class:GenericValue
operator >	dnn/contrib/rapidjson/document.h	/^    bool operator> (ConstIterator that) const { return ptr_ > that.ptr_; }$/;"	f	class:GenericMemberIterator
operator >=	dnn/contrib/rapidjson/document.h	/^    bool operator>=(ConstIterator that) const { return ptr_ >= that.ptr_; }$/;"	f	class:GenericMemberIterator
operator []	dnn/contrib/rapidjson/document.h	/^    GenericValue& operator[](SizeType index) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(GenericValue&)) operator[](T* name) {$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    RAPIDJSON_DISABLEIF_RETURN((internal::NotExpr<internal::IsSame<typename internal::RemoveConst<T>::Type, Ch> >),(const GenericValue&)) operator[](T* name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    Reference operator[](DifferenceType n) const { return ptr_[n]; }$/;"	f	class:GenericMemberIterator
operator []	dnn/contrib/rapidjson/document.h	/^    const GenericValue& operator[](SizeType index) const { return const_cast<GenericValue&>(*this)[index]; }$/;"	f	class:GenericValue
operator []	dnn/contrib/rapidjson/document.h	/^    const GenericValue& operator[](const GenericValue<Encoding, SourceAllocator>& name) const { return const_cast<GenericValue&>(*this)[name]; }$/;"	f	class:GenericValue
operator const Ch *	dnn/contrib/rapidjson/document.h	/^    operator const Ch *() const { return s; }$/;"	f	struct:GenericStringRef
ownAllocator_	dnn/contrib/rapidjson/document.h	/^    Allocator* ownAllocator_;$/;"	m	class:GenericDocument
padding	dnn/contrib/rapidjson/document.h	/^            char padding[4];$/;"	m	struct:GenericValue::Number::I
padding2	dnn/contrib/rapidjson/document.h	/^            char padding2[4];$/;"	m	struct:GenericValue::Number::U
parseResult_	dnn/contrib/rapidjson/document.h	/^          parseResult_(rhs.parseResult_)$/;"	f	class:GenericDocument
parseResult_	dnn/contrib/rapidjson/document.h	/^    ParseResult parseResult_;$/;"	m	class:GenericDocument
ptr_	dnn/contrib/rapidjson/document.h	/^    Pointer ptr_; \/\/!< raw pointer$/;"	m	class:GenericMemberIterator
s	dnn/contrib/rapidjson/document.h	/^        String s;$/;"	m	union:GenericValue::Data
s	dnn/contrib/rapidjson/document.h	/^    const Ch* const s; \/\/!< plain CharType pointer$/;"	m	struct:GenericStringRef
size	dnn/contrib/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Array
size	dnn/contrib/rapidjson/document.h	/^        SizeType size;$/;"	m	struct:GenericValue::Object
ss	dnn/contrib/rapidjson/document.h	/^        ShortString ss;$/;"	m	union:GenericValue::Data
stack_	dnn/contrib/rapidjson/document.h	/^    internal::Stack<StackAllocator> stack_;$/;"	m	class:GenericDocument
str	dnn/contrib/rapidjson/document.h	/^        Ch str[MaxChars];$/;"	m	struct:GenericValue::ShortString
str	dnn/contrib/rapidjson/document.h	/^        const Ch* str;$/;"	m	struct:GenericValue::String
u	dnn/contrib/rapidjson/document.h	/^            unsigned u;$/;"	m	struct:GenericValue::Number::U
u	dnn/contrib/rapidjson/document.h	/^        }u;$/;"	m	union:GenericValue::Number	typeref:struct:GenericValue::Number::U
u64	dnn/contrib/rapidjson/document.h	/^        uint64_t u64;$/;"	m	union:GenericValue::Number
value	dnn/contrib/rapidjson/document.h	/^    GenericValue<Encoding, Allocator> value;    \/\/!< value of member.$/;"	m	struct:GenericMember
~ClearStackOnExit	dnn/contrib/rapidjson/document.h	/^        ~ClearStackOnExit() { d_.ClearStack(); }$/;"	f	struct:GenericDocument::ClearStackOnExit
~GenericDocument	dnn/contrib/rapidjson/document.h	/^    ~GenericDocument() {$/;"	f	class:GenericDocument
~GenericValue	dnn/contrib/rapidjson/document.h	/^    ~GenericValue() {$/;"	f	class:GenericValue
AutoUTFInputStream	dnn/contrib/rapidjson/encodedstream.h	/^    AutoUTFInputStream(InputByteStream& is, UTFType type = kUTF8) : is_(&is), type_(type), hasBOM_(false) {$/;"	f	class:AutoUTFInputStream
AutoUTFInputStream	dnn/contrib/rapidjson/encodedstream.h	/^class AutoUTFInputStream {$/;"	c
AutoUTFOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^    AutoUTFOutputStream(OutputByteStream& os, UTFType type, bool putBOM) : os_(&os), type_(type) {$/;"	f	class:AutoUTFOutputStream
AutoUTFOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^class AutoUTFOutputStream {$/;"	c
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFInputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef CharType Ch;$/;"	t	class:AutoUTFOutputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedInputStream
Ch	dnn/contrib/rapidjson/encodedstream.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:EncodedOutputStream
DetectType	dnn/contrib/rapidjson/encodedstream.h	/^    void DetectType() {$/;"	f	class:AutoUTFInputStream
EncodedInputStream	dnn/contrib/rapidjson/encodedstream.h	/^    EncodedInputStream(InputByteStream& is) : is_(is) { $/;"	f	class:EncodedInputStream
EncodedInputStream	dnn/contrib/rapidjson/encodedstream.h	/^class EncodedInputStream {$/;"	c
EncodedOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^    EncodedOutputStream(OutputByteStream& os, bool putBOM = true) : os_(os) { $/;"	f	class:EncodedOutputStream
EncodedOutputStream	dnn/contrib/rapidjson/encodedstream.h	/^class EncodedOutputStream {$/;"	c
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:AutoUTFInputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:EncodedInputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { os_->Flush(); } $/;"	f	class:AutoUTFOutputStream
Flush	dnn/contrib/rapidjson/encodedstream.h	/^    void Flush() { os_.Flush(); }$/;"	f	class:EncodedOutputStream
GetType	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFInputStream
GetType	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType GetType() const { return type_; }$/;"	f	class:AutoUTFOutputStream
HasBOM	dnn/contrib/rapidjson/encodedstream.h	/^    bool HasBOM() const { return hasBOM_; }$/;"	f	class:AutoUTFInputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFOutputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedOutputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:AutoUTFInputStream
Peek	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Peek() const { return current_; }$/;"	f	class:EncodedInputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch c) { Encoding::Put(os_, c);  }$/;"	f	class:EncodedOutputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch c) { putFunc_(*os_, c); }$/;"	f	class:AutoUTFOutputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFInputStream
Put	dnn/contrib/rapidjson/encodedstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:EncodedInputStream
PutBOM	dnn/contrib/rapidjson/encodedstream.h	/^    void PutBOM() { $/;"	f	class:AutoUTFOutputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutBegin	dnn/contrib/rapidjson/encodedstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFInputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedInputStream
PutEnd	dnn/contrib/rapidjson/encodedstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:EncodedOutputStream
PutFunc	dnn/contrib/rapidjson/encodedstream.h	/^    typedef void (*PutFunc)(OutputByteStream&, Ch);$/;"	t	class:AutoUTFOutputStream
RAPIDJSON_ENCODEDSTREAM_H_	dnn/contrib/rapidjson/encodedstream.h	22;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodedstream.h	282;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodedstream.h	99;"	d
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = Encoding::Take(is_); return c; }$/;"	f	class:EncodedInputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { Ch c = current_; current_ = takeFunc_(*is_); return c; }$/;"	f	class:AutoUTFInputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false);  }$/;"	f	class:EncodedOutputStream
Take	dnn/contrib/rapidjson/encodedstream.h	/^    Ch Take() { RAPIDJSON_ASSERT(false); }$/;"	f	class:AutoUTFOutputStream
TakeFunc	dnn/contrib/rapidjson/encodedstream.h	/^    typedef Ch (*TakeFunc)(InputByteStream& is);$/;"	t	class:AutoUTFInputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false);  return 0; }$/;"	f	class:EncodedOutputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:AutoUTFOutputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_->Tell(); }$/;"	f	class:AutoUTFInputStream
Tell	dnn/contrib/rapidjson/encodedstream.h	/^    size_t Tell() const { return is_.Tell(); }$/;"	f	class:EncodedInputStream
current_	dnn/contrib/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:AutoUTFInputStream
current_	dnn/contrib/rapidjson/encodedstream.h	/^    Ch current_;$/;"	m	class:EncodedInputStream
hasBOM_	dnn/contrib/rapidjson/encodedstream.h	/^    bool hasBOM_;$/;"	m	class:AutoUTFInputStream
is_	dnn/contrib/rapidjson/encodedstream.h	/^    InputByteStream& is_;$/;"	m	class:EncodedInputStream
is_	dnn/contrib/rapidjson/encodedstream.h	/^    InputByteStream* is_;$/;"	m	class:AutoUTFInputStream
os_	dnn/contrib/rapidjson/encodedstream.h	/^    OutputByteStream& os_;$/;"	m	class:EncodedOutputStream
os_	dnn/contrib/rapidjson/encodedstream.h	/^    OutputByteStream* os_;$/;"	m	class:AutoUTFOutputStream
putFunc_	dnn/contrib/rapidjson/encodedstream.h	/^    PutFunc putFunc_;$/;"	m	class:AutoUTFOutputStream
takeFunc_	dnn/contrib/rapidjson/encodedstream.h	/^    TakeFunc takeFunc_;$/;"	m	class:AutoUTFInputStream
type_	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFInputStream
type_	dnn/contrib/rapidjson/encodedstream.h	/^    UTFType type_;$/;"	m	class:AutoUTFOutputStream
ASCII	dnn/contrib/rapidjson/encodings.h	/^struct ASCII {$/;"	s
AutoUTF	dnn/contrib/rapidjson/encodings.h	/^struct AutoUTF {$/;"	s
COPY	dnn/contrib/rapidjson/encodings.h	130;"	d
COPY	dnn/contrib/rapidjson/encodings.h	152;"	d
COPY	dnn/contrib/rapidjson/encodings.h	159;"	d
COPY	dnn/contrib/rapidjson/encodings.h	178;"	d
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:ASCII
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:AutoUTF
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF16
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF32
Ch	dnn/contrib/rapidjson/encodings.h	/^    typedef CharType Ch;$/;"	t	struct:UTF8
Decode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:AutoUTF
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:ASCII
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF16
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF32
Decode	dnn/contrib/rapidjson/encodings.h	/^    static bool Decode(InputStream& is, unsigned* codepoint) {$/;"	f	struct:UTF8
Encode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:AutoUTF
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:ASCII
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF16
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF32
Encode	dnn/contrib/rapidjson/encodings.h	/^    static void Encode(OutputStream& os, unsigned codepoint) {$/;"	f	struct:UTF8
GetRange	dnn/contrib/rapidjson/encodings.h	/^    static unsigned char GetRange(unsigned char c) {$/;"	f	struct:UTF8
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:ASCII
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, Ch c) {$/;"	f	struct:UTF8
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16BE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF16LE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32BE
Put	dnn/contrib/rapidjson/encodings.h	/^    static void Put(OutputByteStream& os, CharType c) {$/;"	f	struct:UTF32LE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:ASCII
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16BE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF16LE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32BE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF32LE
PutBOM	dnn/contrib/rapidjson/encodings.h	/^    static void PutBOM(OutputByteStream& os) {$/;"	f	struct:UTF8
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodings.h	560;"	d
RAPIDJSON_ENCODINGS_FUNC	dnn/contrib/rapidjson/encodings.h	583;"	d
RAPIDJSON_ENCODINGS_H_	dnn/contrib/rapidjson/encodings.h	22;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	132;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	154;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	161;"	d
TAIL	dnn/contrib/rapidjson/encodings.h	180;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	131;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	153;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	160;"	d
TRANS	dnn/contrib/rapidjson/encodings.h	179;"	d
Take	dnn/contrib/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:ASCII
Take	dnn/contrib/rapidjson/encodings.h	/^    static Ch Take(InputByteStream& is) {$/;"	f	struct:UTF8
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16BE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF16LE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32BE
Take	dnn/contrib/rapidjson/encodings.h	/^    static CharType Take(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:ASCII
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16BE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF16LE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32BE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF32LE
TakeBOM	dnn/contrib/rapidjson/encodings.h	/^    static CharType TakeBOM(InputByteStream& is) {$/;"	f	struct:UTF8
Transcode	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Transcode(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Transcoder	dnn/contrib/rapidjson/encodings.h	/^struct Transcoder {$/;"	s
Transcoder	dnn/contrib/rapidjson/encodings.h	/^struct Transcoder<Encoding, Encoding> {$/;"	s
UTF16	dnn/contrib/rapidjson/encodings.h	/^struct UTF16 {$/;"	s
UTF16BE	dnn/contrib/rapidjson/encodings.h	/^struct UTF16BE : UTF16<CharType> {$/;"	s
UTF16LE	dnn/contrib/rapidjson/encodings.h	/^struct UTF16LE : UTF16<CharType> {$/;"	s
UTF32	dnn/contrib/rapidjson/encodings.h	/^struct UTF32 {$/;"	s
UTF32BE	dnn/contrib/rapidjson/encodings.h	/^struct UTF32BE : UTF32<CharType> {$/;"	s
UTF32LE	dnn/contrib/rapidjson/encodings.h	/^struct UTF32LE : UTF32<CharType> {$/;"	s
UTF8	dnn/contrib/rapidjson/encodings.h	/^struct UTF8 {$/;"	s
UTFType	dnn/contrib/rapidjson/encodings.h	/^enum UTFType {$/;"	g
Validate	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:AutoUTF
Validate	dnn/contrib/rapidjson/encodings.h	/^    RAPIDJSON_FORCEINLINE static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:Transcoder
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:ASCII
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF16
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF32
Validate	dnn/contrib/rapidjson/encodings.h	/^    static bool Validate(InputStream& is, OutputStream& os) {$/;"	f	struct:UTF8
kUTF16BE	dnn/contrib/rapidjson/encodings.h	/^    kUTF16BE = 2,   \/\/!< UTF-16 big endian.$/;"	e	enum:UTFType
kUTF16LE	dnn/contrib/rapidjson/encodings.h	/^    kUTF16LE = 1,   \/\/!< UTF-16 little endian.$/;"	e	enum:UTFType
kUTF32BE	dnn/contrib/rapidjson/encodings.h	/^    kUTF32BE = 4    \/\/!< UTF-32 big endian.$/;"	e	enum:UTFType
kUTF32LE	dnn/contrib/rapidjson/encodings.h	/^    kUTF32LE = 3,   \/\/!< UTF-32 little endian.$/;"	e	enum:UTFType
kUTF8	dnn/contrib/rapidjson/encodings.h	/^    kUTF8 = 0,      \/\/!< UTF-8.$/;"	e	enum:UTFType
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 0 };$/;"	e	enum:ASCII::__anon18
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:AutoUTF::__anon19
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF16::__anon16
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF32::__anon17
supportUnicode	dnn/contrib/rapidjson/encodings.h	/^    enum { supportUnicode = 1 };$/;"	e	enum:UTF8::__anon15
GetParseError_En	dnn/contrib/rapidjson/error/en.h	/^inline const RAPIDJSON_ERROR_CHARTYPE* GetParseError_En(ParseErrorCode parseErrorCode) {$/;"	f
RAPIDJSON_ERROR_EN_H__	dnn/contrib/rapidjson/error/en.h	22;"	d
Clear	dnn/contrib/rapidjson/error/error.h	/^    void Clear() { Set(kParseErrorNone); }$/;"	f	struct:ParseResult
Code	dnn/contrib/rapidjson/error/error.h	/^    ParseErrorCode Code() const { return code_; }$/;"	f	struct:ParseResult
GetParseErrorFunc	dnn/contrib/rapidjson/error/error.h	/^typedef const RAPIDJSON_ERROR_CHARTYPE* (*GetParseErrorFunc)(ParseErrorCode);$/;"	t
IsError	dnn/contrib/rapidjson/error/error.h	/^    bool IsError() const { return code_ != kParseErrorNone; }$/;"	f	struct:ParseResult
Offset	dnn/contrib/rapidjson/error/error.h	/^    size_t Offset() const { return offset_; }$/;"	f	struct:ParseResult
ParseErrorCode	dnn/contrib/rapidjson/error/error.h	/^enum ParseErrorCode {$/;"	g
ParseResult	dnn/contrib/rapidjson/error/error.h	/^    ParseResult() : code_(kParseErrorNone), offset_(0) {}$/;"	f	struct:ParseResult
ParseResult	dnn/contrib/rapidjson/error/error.h	/^    ParseResult(ParseErrorCode code, size_t offset) : code_(code), offset_(offset) {}$/;"	f	struct:ParseResult
ParseResult	dnn/contrib/rapidjson/error/error.h	/^struct ParseResult {$/;"	s
RAPIDJSON_ERROR_CHARTYPE	dnn/contrib/rapidjson/error/error.h	38;"	d
RAPIDJSON_ERROR_ERROR_H__	dnn/contrib/rapidjson/error/error.h	22;"	d
RAPIDJSON_ERROR_STRING	dnn/contrib/rapidjson/error/error.h	51;"	d
Set	dnn/contrib/rapidjson/error/error.h	/^    void Set(ParseErrorCode code, size_t offset = 0) { code_ = code; offset_ = offset; }$/;"	f	struct:ParseResult
code_	dnn/contrib/rapidjson/error/error.h	/^    ParseErrorCode code_;$/;"	m	struct:ParseResult
kParseErrorArrayMissCommaOrSquareBracket	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorArrayMissCommaOrSquareBracket,   \/\/!< Missing a comma or ']' after an array element.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentEmpty	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorDocumentEmpty,                   \/\/!< The document is empty.$/;"	e	enum:ParseErrorCode
kParseErrorDocumentRootNotSingular	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorDocumentRootNotSingular,         \/\/!< The document root must not follow by other values.$/;"	e	enum:ParseErrorCode
kParseErrorNone	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNone = 0,                        \/\/!< No error.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissExponent	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberMissExponent,              \/\/!< Miss exponent in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberMissFraction	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberMissFraction,              \/\/!< Miss fraction part in number.$/;"	e	enum:ParseErrorCode
kParseErrorNumberTooBig	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorNumberTooBig,                    \/\/!< Number too big to be stored in double.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissColon	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissColon,                 \/\/!< Missing a colon after a name of object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissCommaOrCurlyBracket	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissCommaOrCurlyBracket,   \/\/!< Missing a comma or '}' after an object member.$/;"	e	enum:ParseErrorCode
kParseErrorObjectMissName	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorObjectMissName,                  \/\/!< Missing a name for object member.$/;"	e	enum:ParseErrorCode
kParseErrorStringEscapeInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringEscapeInvalid,             \/\/!< Invalid escape character in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringInvalidEncoding	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringInvalidEncoding,           \/\/!< Invalid encoding in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringMissQuotationMark	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringMissQuotationMark,         \/\/!< Missing a closing quotation mark in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeEscapeInvalidHex	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringUnicodeEscapeInvalidHex,   \/\/!< Incorrect hex digit after \\\\u escape in string.$/;"	e	enum:ParseErrorCode
kParseErrorStringUnicodeSurrogateInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorStringUnicodeSurrogateInvalid,   \/\/!< The surrogate pair in string is invalid.$/;"	e	enum:ParseErrorCode
kParseErrorTermination	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorTermination,                     \/\/!< Parsing was terminated.$/;"	e	enum:ParseErrorCode
kParseErrorUnspecificSyntaxError	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorUnspecificSyntaxError,           \/\/!< Unspecific syntax error.$/;"	e	enum:ParseErrorCode
kParseErrorValueInvalid	dnn/contrib/rapidjson/error/error.h	/^    kParseErrorValueInvalid,                    \/\/!< Invalid value.$/;"	e	enum:ParseErrorCode
offset_	dnn/contrib/rapidjson/error/error.h	/^    size_t offset_;$/;"	m	struct:ParseResult
operator ==	dnn/contrib/rapidjson/error/error.h	/^    bool operator==(ParseErrorCode code) const { return code_ == code; }$/;"	f	struct:ParseResult
operator ==	dnn/contrib/rapidjson/error/error.h	/^    bool operator==(const ParseResult& that) const { return code_ == that.code_; }$/;"	f	struct:ParseResult
operator ==	dnn/contrib/rapidjson/error/error.h	/^    friend bool operator==(ParseErrorCode code, const ParseResult & err) { return code == err.code_; }$/;"	f	struct:ParseResult
operator bool	dnn/contrib/rapidjson/error/error.h	/^    operator bool() const { return !IsError(); }$/;"	f	struct:ParseResult
Ch	dnn/contrib/rapidjson/filereadstream.h	/^    typedef char Ch;    \/\/!< Character type (byte).$/;"	t	class:FileReadStream
FileReadStream	dnn/contrib/rapidjson/filereadstream.h	/^    FileReadStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferSize_(bufferSize), bufferLast_(0), current_(buffer_), readCount_(0), count_(0), eof_(false) { $/;"	f	class:FileReadStream
FileReadStream	dnn/contrib/rapidjson/filereadstream.h	/^class FileReadStream {$/;"	c
Flush	dnn/contrib/rapidjson/filereadstream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); } $/;"	f	class:FileReadStream
Peek	dnn/contrib/rapidjson/filereadstream.h	/^    Ch Peek() const { return *current_; }$/;"	f	class:FileReadStream
Peek4	dnn/contrib/rapidjson/filereadstream.h	/^    const Ch* Peek4() const {$/;"	f	class:FileReadStream
Put	dnn/contrib/rapidjson/filereadstream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	class:FileReadStream
PutBegin	dnn/contrib/rapidjson/filereadstream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
PutEnd	dnn/contrib/rapidjson/filereadstream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileReadStream
RAPIDJSON_FILEREADSTREAM_H_	dnn/contrib/rapidjson/filereadstream.h	22;"	d
Read	dnn/contrib/rapidjson/filereadstream.h	/^    void Read() {$/;"	f	class:FileReadStream
Take	dnn/contrib/rapidjson/filereadstream.h	/^    Ch Take() { Ch c = *current_; Read(); return c; }$/;"	f	class:FileReadStream
Tell	dnn/contrib/rapidjson/filereadstream.h	/^    size_t Tell() const { return count_ + static_cast<size_t>(current_ - buffer_); }$/;"	f	class:FileReadStream
bufferLast_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *bufferLast_;$/;"	m	class:FileReadStream
bufferSize_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t bufferSize_;$/;"	m	class:FileReadStream
buffer_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *buffer_;$/;"	m	class:FileReadStream
count_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t count_;  \/\/!< Number of characters read$/;"	m	class:FileReadStream
current_	dnn/contrib/rapidjson/filereadstream.h	/^    Ch *current_;$/;"	m	class:FileReadStream
eof_	dnn/contrib/rapidjson/filereadstream.h	/^    bool eof_;$/;"	m	class:FileReadStream
fp_	dnn/contrib/rapidjson/filereadstream.h	/^    std::FILE* fp_;$/;"	m	class:FileReadStream
readCount_	dnn/contrib/rapidjson/filereadstream.h	/^    size_t readCount_;$/;"	m	class:FileReadStream
Ch	dnn/contrib/rapidjson/filestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileStream
FileStream	dnn/contrib/rapidjson/filestream.h	/^    FileStream(std::FILE* fp) : fp_(fp), current_('\\0'), count_(0) { Read(); }$/;"	f	class:FileStream
FileStream	dnn/contrib/rapidjson/filestream.h	/^class FileStream {$/;"	c
Flush	dnn/contrib/rapidjson/filestream.h	/^    void Flush() { fflush(fp_); }$/;"	f	class:FileStream
Peek	dnn/contrib/rapidjson/filestream.h	/^    char Peek() const { return current_; }$/;"	f	class:FileStream
Put	dnn/contrib/rapidjson/filestream.h	/^    void Put(char c) { fputc(c, fp_); }$/;"	f	class:FileStream
PutBegin	dnn/contrib/rapidjson/filestream.h	/^    char* PutBegin() { return 0; }$/;"	f	class:FileStream
PutEnd	dnn/contrib/rapidjson/filestream.h	/^    size_t PutEnd(char*) { return 0; }$/;"	f	class:FileStream
RAPIDJSON_FILESTREAM_H_	dnn/contrib/rapidjson/filestream.h	22;"	d
Read	dnn/contrib/rapidjson/filestream.h	/^    void Read() {$/;"	f	class:FileStream
Take	dnn/contrib/rapidjson/filestream.h	/^    char Take() { char c = current_; Read(); return c; }$/;"	f	class:FileStream
Tell	dnn/contrib/rapidjson/filestream.h	/^    size_t Tell() const { return count_; }$/;"	f	class:FileStream
count_	dnn/contrib/rapidjson/filestream.h	/^    size_t count_;$/;"	m	class:FileStream
current_	dnn/contrib/rapidjson/filestream.h	/^    char current_;$/;"	m	class:FileStream
fp_	dnn/contrib/rapidjson/filestream.h	/^    std::FILE* fp_;$/;"	m	class:FileStream
Ch	dnn/contrib/rapidjson/filewritestream.h	/^    typedef char Ch;    \/\/!< Character type. Only support char.$/;"	t	class:FileWriteStream
FileWriteStream	dnn/contrib/rapidjson/filewritestream.h	/^    FileWriteStream(std::FILE* fp, char* buffer, size_t bufferSize) : fp_(fp), buffer_(buffer), bufferEnd_(buffer + bufferSize), current_(buffer_) { $/;"	f	class:FileWriteStream
FileWriteStream	dnn/contrib/rapidjson/filewritestream.h	/^class FileWriteStream {$/;"	c
Flush	dnn/contrib/rapidjson/filewritestream.h	/^    void Flush() {$/;"	f	class:FileWriteStream
Peek	dnn/contrib/rapidjson/filewritestream.h	/^    char Peek() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Put	dnn/contrib/rapidjson/filewritestream.h	/^    void Put(char c) { $/;"	f	class:FileWriteStream
PutBegin	dnn/contrib/rapidjson/filewritestream.h	/^    char* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutEnd	dnn/contrib/rapidjson/filewritestream.h	/^    size_t PutEnd(char*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
PutN	dnn/contrib/rapidjson/filewritestream.h	/^    void PutN(char c, size_t n) {$/;"	f	class:FileWriteStream
PutN	dnn/contrib/rapidjson/filewritestream.h	/^inline void PutN(FileWriteStream& stream, char c, size_t n) {$/;"	f
RAPIDJSON_FILEWRITESTREAM_H_	dnn/contrib/rapidjson/filewritestream.h	22;"	d
Take	dnn/contrib/rapidjson/filewritestream.h	/^    char Take() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
Tell	dnn/contrib/rapidjson/filewritestream.h	/^    size_t Tell() const { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	class:FileWriteStream
bufferEnd_	dnn/contrib/rapidjson/filewritestream.h	/^    char *bufferEnd_;$/;"	m	class:FileWriteStream
buffer_	dnn/contrib/rapidjson/filewritestream.h	/^    char *buffer_;$/;"	m	class:FileWriteStream
current_	dnn/contrib/rapidjson/filewritestream.h	/^    char *current_;$/;"	m	class:FileWriteStream
fp_	dnn/contrib/rapidjson/filewritestream.h	/^    std::FILE* fp_;$/;"	m	class:FileWriteStream
AppendDecimal64	dnn/contrib/rapidjson/internal/biginteger.h	/^    void AppendDecimal64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger(const BigInteger& rhs) : count_(rhs.count_) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger(const char* decimals, size_t length) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^    explicit BigInteger(uint64_t u) : count_(1) {$/;"	f	class:internal::BigInteger
BigInteger	dnn/contrib/rapidjson/internal/biginteger.h	/^class BigInteger {$/;"	c	namespace:internal
Compare	dnn/contrib/rapidjson/internal/biginteger.h	/^    int Compare(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
Difference	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool Difference(const BigInteger& rhs, BigInteger* out) const {$/;"	f	class:internal::BigInteger
FullAdd	dnn/contrib/rapidjson/internal/biginteger.h	/^    static Type FullAdd(Type a, Type b, bool inCarry, bool* outCarry) {$/;"	f	class:internal::BigInteger
GetCount	dnn/contrib/rapidjson/internal/biginteger.h	/^    size_t GetCount() const { return count_; }$/;"	f	class:internal::BigInteger
GetDigit	dnn/contrib/rapidjson/internal/biginteger.h	/^    Type GetDigit(size_t index) const { RAPIDJSON_ASSERT(index < count_); return digits_[index]; }$/;"	f	class:internal::BigInteger
IsZero	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool IsZero() const { return count_ == 1 && digits_[0] == 0; }$/;"	f	class:internal::BigInteger
MulAdd64	dnn/contrib/rapidjson/internal/biginteger.h	/^    static uint64_t MulAdd64(uint64_t a, uint64_t b, uint64_t k, uint64_t* outHigh) {$/;"	f	class:internal::BigInteger
MultiplyPow5	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& MultiplyPow5(unsigned exp) {$/;"	f	class:internal::BigInteger
ParseUint64	dnn/contrib/rapidjson/internal/biginteger.h	/^    static uint64_t ParseUint64(const char* begin, const char* end) {$/;"	f	class:internal::BigInteger
PushBack	dnn/contrib/rapidjson/internal/biginteger.h	/^    void PushBack(Type digit) {$/;"	f	class:internal::BigInteger
RAPIDJSON_BIGINTEGER_H_	dnn/contrib/rapidjson/internal/biginteger.h	22;"	d
Type	dnn/contrib/rapidjson/internal/biginteger.h	/^    typedef uint64_t Type;$/;"	t	class:internal::BigInteger
count_	dnn/contrib/rapidjson/internal/biginteger.h	/^    size_t count_;$/;"	m	class:internal::BigInteger
digits_	dnn/contrib/rapidjson/internal/biginteger.h	/^    Type digits_[kCapacity];$/;"	m	class:internal::BigInteger
internal	dnn/contrib/rapidjson/internal/biginteger.h	/^namespace internal {$/;"	n
kBitCount	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kBitCount = 3328;  \/\/ 64bit * 54 > 10^1000$/;"	m	class:internal::BigInteger
kCapacity	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kCapacity = kBitCount \/ sizeof(Type);$/;"	m	class:internal::BigInteger
kTypeBit	dnn/contrib/rapidjson/internal/biginteger.h	/^    static const size_t kTypeBit = sizeof(Type) * 8;$/;"	m	class:internal::BigInteger
operator *=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint32_t u) {$/;"	f	class:internal::BigInteger
operator *=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator*=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator +=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator+=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator <<=	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator<<=(size_t shift) {$/;"	f	class:internal::BigInteger
operator =	dnn/contrib/rapidjson/internal/biginteger.h	/^    BigInteger& operator=(uint64_t u) {$/;"	f	class:internal::BigInteger
operator ==	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool operator==(const BigInteger& rhs) const {$/;"	f	class:internal::BigInteger
operator ==	dnn/contrib/rapidjson/internal/biginteger.h	/^    bool operator==(const Type rhs) const {$/;"	f	class:internal::BigInteger
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp() {}$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp(uint64_t fp, int exp) : f(fp), e(exp) {}$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^    explicit DiyFp(double d) {$/;"	f	struct:internal::DiyFp
DiyFp	dnn/contrib/rapidjson/internal/diyfp.h	/^struct DiyFp {$/;"	s	namespace:internal
GetCachedPower	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower(int e, int* K) {$/;"	f	namespace:internal
GetCachedPower10	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPower10(int exp, int *outExp) {$/;"	f	namespace:internal
GetCachedPowerByIndex	dnn/contrib/rapidjson/internal/diyfp.h	/^inline DiyFp GetCachedPowerByIndex(size_t index) {$/;"	f	namespace:internal
Normalize	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp Normalize() const {$/;"	f	struct:internal::DiyFp
NormalizeBoundary	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp NormalizeBoundary() const {$/;"	f	struct:internal::DiyFp
NormalizedBoundaries	dnn/contrib/rapidjson/internal/diyfp.h	/^    void NormalizedBoundaries(DiyFp* minus, DiyFp* plus) const {$/;"	f	struct:internal::DiyFp
RAPIDJSON_DIYFP_H_	dnn/contrib/rapidjson/internal/diyfp.h	26;"	d
ToDouble	dnn/contrib/rapidjson/internal/diyfp.h	/^    double ToDouble() const {$/;"	f	struct:internal::DiyFp
e	dnn/contrib/rapidjson/internal/diyfp.h	/^    int e;$/;"	m	struct:internal::DiyFp
f	dnn/contrib/rapidjson/internal/diyfp.h	/^    uint64_t f;$/;"	m	struct:internal::DiyFp
internal	dnn/contrib/rapidjson/internal/diyfp.h	/^namespace internal {$/;"	n
kDiySignificandSize	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDiySignificandSize = 64;$/;"	m	struct:internal::DiyFp
kDpDenormalExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpDenormalExponent = -kDpExponentBias + 1;$/;"	m	struct:internal::DiyFp
kDpExponentBias	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpExponentBias = 0x3FF + kDpSignificandSize;$/;"	m	struct:internal::DiyFp
kDpExponentMask	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpHiddenBit	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	struct:internal::DiyFp
kDpMaxExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpMaxExponent = 0x7FF - kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpMinExponent	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpMinExponent = -kDpExponentBias;$/;"	m	struct:internal::DiyFp
kDpSignificandMask	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const uint64_t kDpSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	struct:internal::DiyFp
kDpSignificandSize	dnn/contrib/rapidjson/internal/diyfp.h	/^    static const int kDpSignificandSize = 52;$/;"	m	struct:internal::DiyFp
operator *	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp operator*(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
operator -	dnn/contrib/rapidjson/internal/diyfp.h	/^    DiyFp operator-(const DiyFp& rhs) const {$/;"	f	struct:internal::DiyFp
CountDecimalDigit32	dnn/contrib/rapidjson/internal/dtoa.h	/^inline unsigned CountDecimalDigit32(uint32_t n) {$/;"	f	namespace:internal
DigitGen	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void DigitGen(const DiyFp& W, const DiyFp& Mp, uint64_t delta, char* buffer, int* len, int* K) {$/;"	f	namespace:internal
Grisu2	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void Grisu2(double value, char* buffer, int* length, int* K) {$/;"	f	namespace:internal
GrisuRound	dnn/contrib/rapidjson/internal/dtoa.h	/^inline void GrisuRound(char* buffer, int len, uint64_t delta, uint64_t rest, uint64_t ten_kappa, uint64_t wp_w) {$/;"	f	namespace:internal
Prettify	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* Prettify(char* buffer, int length, int k) {$/;"	f	namespace:internal
RAPIDJSON_DTOA_	dnn/contrib/rapidjson/internal/dtoa.h	26;"	d
WriteExponent	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* WriteExponent(int K, char* buffer) {$/;"	f	namespace:internal
dtoa	dnn/contrib/rapidjson/internal/dtoa.h	/^inline char* dtoa(double value, char* buffer) {$/;"	f	namespace:internal
internal	dnn/contrib/rapidjson/internal/dtoa.h	/^namespace internal {$/;"	n
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double() {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double(double d) : d(d) {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^    Double(uint64_t u) : u(u) {}$/;"	f	class:internal::Double
Double	dnn/contrib/rapidjson/internal/ieee754.h	/^class Double {$/;"	c	namespace:internal
EffectiveSignificandSize	dnn/contrib/rapidjson/internal/ieee754.h	/^    static unsigned EffectiveSignificandSize(int order) {$/;"	f	class:internal::Double
Exponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    int Exponent() const { return ((u & kExponentMask) >> kSignificandSize) - kExponentBias; }$/;"	f	class:internal::Double
IntegerExponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }$/;"	f	class:internal::Double
IntegerSignificand	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }$/;"	f	class:internal::Double
IsInf	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsInf() const { return (u & kExponentMask) == kExponentMask && Significand() == 0; }$/;"	f	class:internal::Double
IsNan	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsNan() const { return (u & kExponentMask) == kExponentMask && Significand() != 0; }$/;"	f	class:internal::Double
IsNormal	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool IsNormal() const { return (u & kExponentMask) != 0 || Significand() == 0; }$/;"	f	class:internal::Double
NextPositiveDouble	dnn/contrib/rapidjson/internal/ieee754.h	/^    double NextPositiveDouble() const {$/;"	f	class:internal::Double
PreviousPositiveDouble	dnn/contrib/rapidjson/internal/ieee754.h	/^    double PreviousPositiveDouble() const {$/;"	f	class:internal::Double
RAPIDJSON_IEEE754_	dnn/contrib/rapidjson/internal/ieee754.h	22;"	d
Sign	dnn/contrib/rapidjson/internal/ieee754.h	/^    bool Sign() const { return (u & kSignMask) != 0; }$/;"	f	class:internal::Double
Significand	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t Significand() const { return u & kSignificandMask; }$/;"	f	class:internal::Double
ToBias	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t ToBias() const { return (u & kSignMask) ? ~u + 1 : u | kSignMask; }$/;"	f	class:internal::Double
Uint64Value	dnn/contrib/rapidjson/internal/ieee754.h	/^    uint64_t Uint64Value() const { return u; }$/;"	f	class:internal::Double
Value	dnn/contrib/rapidjson/internal/ieee754.h	/^    double Value() const { return d; }$/;"	f	class:internal::Double
d	dnn/contrib/rapidjson/internal/ieee754.h	/^        double d;$/;"	m	union:internal::Double::__anon12
internal	dnn/contrib/rapidjson/internal/ieee754.h	/^namespace internal {$/;"	n
kDenormalExponent	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kDenormalExponent = 1 - kExponentBias;$/;"	m	class:internal::Double
kExponentBias	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kExponentBias = 0x3FF;$/;"	m	class:internal::Double
kExponentMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kExponentMask = RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);$/;"	m	class:internal::Double
kHiddenBit	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kHiddenBit = RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);$/;"	m	class:internal::Double
kSignMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignMask = RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);$/;"	m	class:internal::Double
kSignificandMask	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const uint64_t kSignificandMask = RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);$/;"	m	class:internal::Double
kSignificandSize	dnn/contrib/rapidjson/internal/ieee754.h	/^    static const int kSignificandSize = 52;$/;"	m	class:internal::Double
u	dnn/contrib/rapidjson/internal/ieee754.h	/^        uint64_t u;$/;"	m	union:internal::Double::__anon12
GetDigitsLut	dnn/contrib/rapidjson/internal/itoa.h	/^inline const char* GetDigitsLut() {$/;"	f	namespace:internal
RAPIDJSON_ITOA_	dnn/contrib/rapidjson/internal/itoa.h	22;"	d
i32toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* i32toa(int32_t value, char* buffer) {$/;"	f	namespace:internal
i64toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* i64toa(int64_t value, char* buffer) {$/;"	f	namespace:internal
internal	dnn/contrib/rapidjson/internal/itoa.h	/^namespace internal {$/;"	n
u32toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* u32toa(uint32_t value, char* buffer) {$/;"	f	namespace:internal
u64toa	dnn/contrib/rapidjson/internal/itoa.h	/^inline char* u64toa(uint64_t value, char* buffer) {$/;"	f	namespace:internal
AddConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	s	namespace:internal
AndExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct AndExpr : AndExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
AndExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct AndExprCond<true, true> : TrueType {};$/;"	s	namespace:internal
AndExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct AndExprCond : FalseType {};$/;"	s	namespace:internal
Apply	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	struct:internal::SelectIfImpl
Apply	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	struct:internal::SelectIfImpl
BoolExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C> struct BoolExpr : SelectIf<C,TrueType,FalseType>::Type {};$/;"	s	namespace:internal
BoolType	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond> struct BoolType {$/;"	s	namespace:internal
DisableIf	dnn/contrib/rapidjson/internal/meta.h	/^struct DisableIf : DisableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
DisableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	s	namespace:internal
DisableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct DisableIfCond<true, T> { \/* empty *\/ };$/;"	s	namespace:internal
EnableIf	dnn/contrib/rapidjson/internal/meta.h	/^struct EnableIf : EnableIfCond<Condition::Value, T> {};$/;"	s	namespace:internal
EnableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	s	namespace:internal
EnableIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct EnableIfCond<false, T> { \/* empty *\/ };$/;"	s	namespace:internal
FalseType	dnn/contrib/rapidjson/internal/meta.h	/^typedef BoolType<false> FalseType;$/;"	t	namespace:internal
Host	dnn/contrib/rapidjson/internal/meta.h	/^    struct Host {$/;"	s	struct:internal::IsBaseOfImpl
IsBaseOf	dnn/contrib/rapidjson/internal/meta.h	/^template <typename B, typename D> struct IsBaseOf$/;"	s	namespace:internal
IsBaseOfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template<typename B, typename D> struct IsBaseOfImpl {$/;"	s	namespace:internal
IsConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsConst : FalseType {};$/;"	s	namespace:internal
IsConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsConst<const T> : TrueType {};$/;"	s	namespace:internal
IsMoreConst	dnn/contrib/rapidjson/internal/meta.h	/^struct IsMoreConst$/;"	s	namespace:internal
IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer : FalseType {};$/;"	s	namespace:internal
IsPointer	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsPointer<T*> : TrueType {};$/;"	s	namespace:internal
IsSame	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T, typename U> struct IsSame : FalseType {};$/;"	s	namespace:internal
IsSame	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct IsSame<T, T> : TrueType {};$/;"	s	namespace:internal
MaybeAddConst	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Constify, typename T> struct MaybeAddConst : SelectIfCond<Constify, const T, T> {};$/;"	s	namespace:internal
No	dnn/contrib/rapidjson/internal/meta.h	/^    typedef char (&No) [2];$/;"	t	struct:internal::IsBaseOfImpl
NotExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C> struct NotExpr  : SelectIf<C,FalseType,TrueType>::Type {};$/;"	s	namespace:internal
OrExpr	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C1, typename C2> struct OrExpr  : OrExprCond<C1::Value, C2::Value>::Type {};$/;"	s	namespace:internal
OrExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct OrExprCond<false, false> : FalseType {};$/;"	s	namespace:internal
OrExprCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Cond1, bool Cond2> struct OrExprCond : TrueType {};$/;"	s	namespace:internal
RAPIDJSON_DISABLEIF	dnn/contrib/rapidjson/internal/meta.h	167;"	d
RAPIDJSON_DISABLEIF_RETURN	dnn/contrib/rapidjson/internal/meta.h	176;"	d
RAPIDJSON_ENABLEIF	dnn/contrib/rapidjson/internal/meta.h	163;"	d
RAPIDJSON_ENABLEIF_RETURN	dnn/contrib/rapidjson/internal/meta.h	171;"	d
RAPIDJSON_INTERNAL_META_H_	dnn/contrib/rapidjson/internal/meta.h	22;"	d
RAPIDJSON_REMOVEFPTR_	dnn/contrib/rapidjson/internal/meta.h	159;"	d
RemoveConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	s	namespace:internal
RemoveConst	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	s	namespace:internal
RemoveSfinaeTag	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	s	namespace:internal
SelectIf	dnn/contrib/rapidjson/internal/meta.h	/^template <typename C, typename T1, typename T2> struct SelectIf : SelectIfCond<C::Value, T1, T2> {};$/;"	s	namespace:internal
SelectIfCond	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C, typename T1, typename T2> struct SelectIfCond : SelectIfImpl<C>::template Apply<T1,T2> {};$/;"	s	namespace:internal
SelectIfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	s	namespace:internal
SelectIfImpl	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	s	namespace:internal
SfinaeTag	dnn/contrib/rapidjson/internal/meta.h	/^struct SfinaeTag {};$/;"	s	namespace:internal
TrueType	dnn/contrib/rapidjson/internal/meta.h	/^typedef BoolType<true> TrueType;$/;"	t	namespace:internal
Type	dnn/contrib/rapidjson/internal/meta.h	/^    typedef BoolType Type;$/;"	t	struct:internal::BoolType
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <> struct SelectIfImpl<false> { template <typename T1, typename T2> struct Apply { typedef T2 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool C> struct SelectIfImpl { template <typename T1, typename T2> struct Apply { typedef T1 Type; }; };$/;"	t	struct:internal::SelectIfImpl::Apply
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct DisableIfCond { typedef T Type; };$/;"	t	struct:internal::DisableIfCond
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <bool Condition, typename T = void> struct EnableIfCond  { typedef T Type; };$/;"	t	struct:internal::EnableIfCond
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct AddConst { typedef const T Type; };$/;"	t	struct:internal::AddConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveConst<const T> { typedef T Type; };$/;"	t	struct:internal::RemoveConst
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct RemoveSfinaeTag<SfinaeTag&(*)(T)> { typedef T Type; };$/;"	t	struct:internal::RemoveSfinaeTag
Type	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	t	struct:internal::Void
Value	dnn/contrib/rapidjson/internal/meta.h	/^    enum { Value = (sizeof(Check(Host(), 0)) == sizeof(Yes)) };$/;"	e	enum:internal::IsBaseOfImpl::__anon13
Value	dnn/contrib/rapidjson/internal/meta.h	/^    static const bool Value = Cond;$/;"	m	struct:internal::BoolType
Void	dnn/contrib/rapidjson/internal/meta.h	/^template <typename T> struct Void { typedef void Type; };$/;"	s	namespace:internal
Yes	dnn/contrib/rapidjson/internal/meta.h	/^    typedef char (&Yes)[1];$/;"	t	struct:internal::IsBaseOfImpl
internal	dnn/contrib/rapidjson/internal/meta.h	/^namespace internal {$/;"	n
Pow10	dnn/contrib/rapidjson/internal/pow10.h	/^inline double Pow10(int n) {$/;"	f	namespace:internal
RAPIDJSON_POW10_	dnn/contrib/rapidjson/internal/pow10.h	22;"	d
internal	dnn/contrib/rapidjson/internal/pow10.h	/^namespace internal {$/;"	n
Bottom	dnn/contrib/rapidjson/internal/stack.h	/^    T* Bottom() { return (T*)stack_; }$/;"	f	class:internal::Stack
Clear	dnn/contrib/rapidjson/internal/stack.h	/^    void Clear() { stackTop_ = stack_; }$/;"	f	class:internal::Stack
Destroy	dnn/contrib/rapidjson/internal/stack.h	/^    void Destroy() {$/;"	f	class:internal::Stack
Empty	dnn/contrib/rapidjson/internal/stack.h	/^    bool Empty() const { return stackTop_ == stack_; }$/;"	f	class:internal::Stack
Expand	dnn/contrib/rapidjson/internal/stack.h	/^    void Expand(size_t count) {$/;"	f	class:internal::Stack
GetAllocator	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator& GetAllocator() { return *allocator_; }$/;"	f	class:internal::Stack
GetCapacity	dnn/contrib/rapidjson/internal/stack.h	/^    size_t GetCapacity() const { return static_cast<size_t>(stackEnd_ - stack_); }$/;"	f	class:internal::Stack
GetSize	dnn/contrib/rapidjson/internal/stack.h	/^    size_t GetSize() const { return static_cast<size_t>(stackTop_ - stack_); }$/;"	f	class:internal::Stack
Pop	dnn/contrib/rapidjson/internal/stack.h	/^    T* Pop(size_t count) {$/;"	f	class:internal::Stack
Push	dnn/contrib/rapidjson/internal/stack.h	/^    RAPIDJSON_FORCEINLINE T* Push(size_t count = 1) {$/;"	f	class:internal::Stack
RAPIDJSON_INTERNAL_STACK_H_	dnn/contrib/rapidjson/internal/stack.h	22;"	d
Resize	dnn/contrib/rapidjson/internal/stack.h	/^    void Resize(size_t newCapacity) {$/;"	f	class:internal::Stack
ShrinkToFit	dnn/contrib/rapidjson/internal/stack.h	/^    void ShrinkToFit() { $/;"	f	class:internal::Stack
Stack	dnn/contrib/rapidjson/internal/stack.h	/^    Stack(Allocator* allocator, size_t stackCapacity) : allocator_(allocator), ownAllocator_(0), stack_(0), stackTop_(0), stackEnd_(0), initialCapacity_(stackCapacity) {$/;"	f	class:internal::Stack
Stack	dnn/contrib/rapidjson/internal/stack.h	/^    Stack(Stack&& rhs)$/;"	f	class:internal::Stack
Stack	dnn/contrib/rapidjson/internal/stack.h	/^class Stack {$/;"	c	namespace:internal
Top	dnn/contrib/rapidjson/internal/stack.h	/^    T* Top() { $/;"	f	class:internal::Stack
allocator_	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator* allocator_;$/;"	m	class:internal::Stack
initialCapacity_	dnn/contrib/rapidjson/internal/stack.h	/^    size_t initialCapacity_;$/;"	m	class:internal::Stack
internal	dnn/contrib/rapidjson/internal/stack.h	/^namespace internal {$/;"	n
operator =	dnn/contrib/rapidjson/internal/stack.h	/^    Stack& operator=(Stack&& rhs) {$/;"	f	class:internal::Stack
ownAllocator_	dnn/contrib/rapidjson/internal/stack.h	/^    Allocator* ownAllocator_;$/;"	m	class:internal::Stack
stackEnd_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stackEnd_;$/;"	m	class:internal::Stack
stackTop_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stackTop_;$/;"	m	class:internal::Stack
stack_	dnn/contrib/rapidjson/internal/stack.h	/^    char *stack_;$/;"	m	class:internal::Stack
~Stack	dnn/contrib/rapidjson/internal/stack.h	/^    ~Stack() {$/;"	f	class:internal::Stack
RAPIDJSON_INTERNAL_STRFUNC_H_	dnn/contrib/rapidjson/internal/strfunc.h	22;"	d
StrLen	dnn/contrib/rapidjson/internal/strfunc.h	/^inline SizeType StrLen(const Ch* s) {$/;"	f	namespace:internal
internal	dnn/contrib/rapidjson/internal/strfunc.h	/^namespace internal {$/;"	n
CheckWithinHalfULP	dnn/contrib/rapidjson/internal/strtod.h	/^inline int CheckWithinHalfULP(double b, const BigInteger& d, int dExp, bool* adjustToNegative) {$/;"	f	namespace:internal
FastPath	dnn/contrib/rapidjson/internal/strtod.h	/^inline double FastPath(double significand, int exp) {$/;"	f	namespace:internal
Min3	dnn/contrib/rapidjson/internal/strtod.h	/^inline T Min3(T a, T b, T c) {$/;"	f	namespace:internal
RAPIDJSON_STRTOD_	dnn/contrib/rapidjson/internal/strtod.h	22;"	d
StrtodBigInteger	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodBigInteger(double approx, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodDiyFp	dnn/contrib/rapidjson/internal/strtod.h	/^inline bool StrtodDiyFp(const char* decimals, size_t length, size_t decimalPosition, int exp, double* result) {$/;"	f	namespace:internal
StrtodFast	dnn/contrib/rapidjson/internal/strtod.h	/^inline bool StrtodFast(double d, int p, double* result) {$/;"	f	namespace:internal
StrtodFullPrecision	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodFullPrecision(double d, int p, const char* decimals, size_t length, size_t decimalPosition, int exp) {$/;"	f	namespace:internal
StrtodNormalPrecision	dnn/contrib/rapidjson/internal/strtod.h	/^inline double StrtodNormalPrecision(double d, int p) {$/;"	f	namespace:internal
internal	dnn/contrib/rapidjson/internal/strtod.h	/^namespace internal {$/;"	n
Ch	dnn/contrib/rapidjson/memorybuffer.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:GenericMemoryBuffer
Clear	dnn/contrib/rapidjson/memorybuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	struct:GenericMemoryBuffer
Flush	dnn/contrib/rapidjson/memorybuffer.h	/^    void Flush() {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^    GenericMemoryBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	struct:GenericMemoryBuffer
GenericMemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^struct GenericMemoryBuffer {$/;"	s
GetBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^    const Ch* GetBuffer() const {$/;"	f	struct:GenericMemoryBuffer
GetSize	dnn/contrib/rapidjson/memorybuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	struct:GenericMemoryBuffer
MemoryBuffer	dnn/contrib/rapidjson/memorybuffer.h	/^typedef GenericMemoryBuffer<> MemoryBuffer;$/;"	t
Pop	dnn/contrib/rapidjson/memorybuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Push	dnn/contrib/rapidjson/memorybuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	struct:GenericMemoryBuffer
Put	dnn/contrib/rapidjson/memorybuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	struct:GenericMemoryBuffer
PutN	dnn/contrib/rapidjson/memorybuffer.h	/^inline void PutN(MemoryBuffer& memoryBuffer, char c, size_t n) {$/;"	f
RAPIDJSON_MEMORYBUFFER_H_	dnn/contrib/rapidjson/memorybuffer.h	22;"	d
ShrinkToFit	dnn/contrib/rapidjson/memorybuffer.h	/^    void ShrinkToFit() { stack_.ShrinkToFit(); }$/;"	f	struct:GenericMemoryBuffer
kDefaultCapacity	dnn/contrib/rapidjson/memorybuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	struct:GenericMemoryBuffer
stack_	dnn/contrib/rapidjson/memorybuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	struct:GenericMemoryBuffer
Ch	dnn/contrib/rapidjson/memorystream.h	/^    typedef char Ch; \/\/ byte$/;"	t	struct:MemoryStream
Flush	dnn/contrib/rapidjson/memorystream.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
MemoryStream	dnn/contrib/rapidjson/memorystream.h	/^    MemoryStream(const Ch *src, size_t size) : src_(src), begin_(src), end_(src + size), size_(size) {}$/;"	f	struct:MemoryStream
MemoryStream	dnn/contrib/rapidjson/memorystream.h	/^struct MemoryStream {$/;"	s
Peek	dnn/contrib/rapidjson/memorystream.h	/^    Ch Peek() const { return (src_ == end_) ? '\\0' : *src_; }$/;"	f	struct:MemoryStream
Peek4	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* Peek4() const {$/;"	f	struct:MemoryStream
Put	dnn/contrib/rapidjson/memorystream.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:MemoryStream
PutBegin	dnn/contrib/rapidjson/memorystream.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
PutEnd	dnn/contrib/rapidjson/memorystream.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:MemoryStream
RAPIDJSON_MEMORYSTREAM_H_	dnn/contrib/rapidjson/memorystream.h	22;"	d
Take	dnn/contrib/rapidjson/memorystream.h	/^    Ch Take() { return (src_ == end_) ? '\\0' : *src_++; }$/;"	f	struct:MemoryStream
Tell	dnn/contrib/rapidjson/memorystream.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - begin_); }$/;"	f	struct:MemoryStream
begin_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* begin_;   \/\/!< Original head of the string.$/;"	m	struct:MemoryStream
end_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* end_;     \/\/!< End of stream.$/;"	m	struct:MemoryStream
size_	dnn/contrib/rapidjson/memorystream.h	/^    size_t size_;       \/\/!< Size of the stream.$/;"	m	struct:MemoryStream
src_	dnn/contrib/rapidjson/memorystream.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:MemoryStream
PRIX16	dnn/contrib/rapidjson/msinttypes/inttypes.h	114;"	d
PRIX32	dnn/contrib/rapidjson/msinttypes/inttypes.h	127;"	d
PRIX64	dnn/contrib/rapidjson/msinttypes/inttypes.h	140;"	d
PRIX8	dnn/contrib/rapidjson/msinttypes/inttypes.h	101;"	d
PRIXFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	122;"	d
PRIXFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	135;"	d
PRIXFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	148;"	d
PRIXFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	109;"	d
PRIXLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	118;"	d
PRIXLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	131;"	d
PRIXLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	144;"	d
PRIXLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	105;"	d
PRIXMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	153;"	d
PRIXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	158;"	d
PRId16	dnn/contrib/rapidjson/msinttypes/inttypes.h	70;"	d
PRId32	dnn/contrib/rapidjson/msinttypes/inttypes.h	77;"	d
PRId64	dnn/contrib/rapidjson/msinttypes/inttypes.h	84;"	d
PRId8	dnn/contrib/rapidjson/msinttypes/inttypes.h	63;"	d
PRIdFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	74;"	d
PRIdFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	81;"	d
PRIdFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	88;"	d
PRIdFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	67;"	d
PRIdLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	72;"	d
PRIdLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	79;"	d
PRIdLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	86;"	d
PRIdLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	65;"	d
PRIdMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	91;"	d
PRIdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	94;"	d
PRIi16	dnn/contrib/rapidjson/msinttypes/inttypes.h	71;"	d
PRIi32	dnn/contrib/rapidjson/msinttypes/inttypes.h	78;"	d
PRIi64	dnn/contrib/rapidjson/msinttypes/inttypes.h	85;"	d
PRIi8	dnn/contrib/rapidjson/msinttypes/inttypes.h	64;"	d
PRIiFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	75;"	d
PRIiFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	82;"	d
PRIiFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	89;"	d
PRIiFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	68;"	d
PRIiLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	73;"	d
PRIiLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	80;"	d
PRIiLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	87;"	d
PRIiLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	66;"	d
PRIiMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	92;"	d
PRIiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	95;"	d
PRIo16	dnn/contrib/rapidjson/msinttypes/inttypes.h	111;"	d
PRIo32	dnn/contrib/rapidjson/msinttypes/inttypes.h	124;"	d
PRIo64	dnn/contrib/rapidjson/msinttypes/inttypes.h	137;"	d
PRIo8	dnn/contrib/rapidjson/msinttypes/inttypes.h	98;"	d
PRIoFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	119;"	d
PRIoFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	132;"	d
PRIoFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	145;"	d
PRIoFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	106;"	d
PRIoLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	115;"	d
PRIoLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	128;"	d
PRIoLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	141;"	d
PRIoLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	102;"	d
PRIoMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	150;"	d
PRIoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	155;"	d
PRIu16	dnn/contrib/rapidjson/msinttypes/inttypes.h	112;"	d
PRIu32	dnn/contrib/rapidjson/msinttypes/inttypes.h	125;"	d
PRIu64	dnn/contrib/rapidjson/msinttypes/inttypes.h	138;"	d
PRIu8	dnn/contrib/rapidjson/msinttypes/inttypes.h	99;"	d
PRIuFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	120;"	d
PRIuFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	133;"	d
PRIuFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	146;"	d
PRIuFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	107;"	d
PRIuLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	116;"	d
PRIuLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	129;"	d
PRIuLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	142;"	d
PRIuLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	103;"	d
PRIuMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	151;"	d
PRIuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	156;"	d
PRIx16	dnn/contrib/rapidjson/msinttypes/inttypes.h	113;"	d
PRIx32	dnn/contrib/rapidjson/msinttypes/inttypes.h	126;"	d
PRIx64	dnn/contrib/rapidjson/msinttypes/inttypes.h	139;"	d
PRIx8	dnn/contrib/rapidjson/msinttypes/inttypes.h	100;"	d
PRIxFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	121;"	d
PRIxFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	134;"	d
PRIxFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	147;"	d
PRIxFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	108;"	d
PRIxLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	117;"	d
PRIxLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	130;"	d
PRIxLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	143;"	d
PRIxLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	104;"	d
PRIxMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	152;"	d
PRIxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	157;"	d
SCNX16	dnn/contrib/rapidjson/msinttypes/inttypes.h	217;"	d
SCNX32	dnn/contrib/rapidjson/msinttypes/inttypes.h	230;"	d
SCNX64	dnn/contrib/rapidjson/msinttypes/inttypes.h	243;"	d
SCNX8	dnn/contrib/rapidjson/msinttypes/inttypes.h	204;"	d
SCNXFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	225;"	d
SCNXFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	238;"	d
SCNXFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	251;"	d
SCNXFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	212;"	d
SCNXLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	221;"	d
SCNXLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	234;"	d
SCNXLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	247;"	d
SCNXLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	208;"	d
SCNXMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	256;"	d
SCNXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	262;"	d
SCNXPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	267;"	d
SCNd16	dnn/contrib/rapidjson/msinttypes/inttypes.h	168;"	d
SCNd32	dnn/contrib/rapidjson/msinttypes/inttypes.h	175;"	d
SCNd64	dnn/contrib/rapidjson/msinttypes/inttypes.h	182;"	d
SCNd8	dnn/contrib/rapidjson/msinttypes/inttypes.h	161;"	d
SCNdFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	172;"	d
SCNdFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	179;"	d
SCNdFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	186;"	d
SCNdFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	165;"	d
SCNdLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	170;"	d
SCNdLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	177;"	d
SCNdLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	184;"	d
SCNdLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	163;"	d
SCNdMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	189;"	d
SCNdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	193;"	d
SCNdPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	196;"	d
SCNi16	dnn/contrib/rapidjson/msinttypes/inttypes.h	169;"	d
SCNi32	dnn/contrib/rapidjson/msinttypes/inttypes.h	176;"	d
SCNi64	dnn/contrib/rapidjson/msinttypes/inttypes.h	183;"	d
SCNi8	dnn/contrib/rapidjson/msinttypes/inttypes.h	162;"	d
SCNiFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	173;"	d
SCNiFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	180;"	d
SCNiFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	187;"	d
SCNiFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	166;"	d
SCNiLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	171;"	d
SCNiLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	178;"	d
SCNiLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	185;"	d
SCNiLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	164;"	d
SCNiMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	190;"	d
SCNiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	194;"	d
SCNiPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	197;"	d
SCNo16	dnn/contrib/rapidjson/msinttypes/inttypes.h	214;"	d
SCNo32	dnn/contrib/rapidjson/msinttypes/inttypes.h	227;"	d
SCNo64	dnn/contrib/rapidjson/msinttypes/inttypes.h	240;"	d
SCNo8	dnn/contrib/rapidjson/msinttypes/inttypes.h	201;"	d
SCNoFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	222;"	d
SCNoFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	235;"	d
SCNoFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	248;"	d
SCNoFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	209;"	d
SCNoLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	218;"	d
SCNoLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	231;"	d
SCNoLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	244;"	d
SCNoLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	205;"	d
SCNoMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	253;"	d
SCNoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	259;"	d
SCNoPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	264;"	d
SCNu16	dnn/contrib/rapidjson/msinttypes/inttypes.h	215;"	d
SCNu32	dnn/contrib/rapidjson/msinttypes/inttypes.h	228;"	d
SCNu64	dnn/contrib/rapidjson/msinttypes/inttypes.h	241;"	d
SCNu8	dnn/contrib/rapidjson/msinttypes/inttypes.h	202;"	d
SCNuFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	223;"	d
SCNuFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	236;"	d
SCNuFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	249;"	d
SCNuFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	210;"	d
SCNuLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	219;"	d
SCNuLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	232;"	d
SCNuLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	245;"	d
SCNuLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	206;"	d
SCNuMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	254;"	d
SCNuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	260;"	d
SCNuPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	265;"	d
SCNx16	dnn/contrib/rapidjson/msinttypes/inttypes.h	216;"	d
SCNx32	dnn/contrib/rapidjson/msinttypes/inttypes.h	229;"	d
SCNx64	dnn/contrib/rapidjson/msinttypes/inttypes.h	242;"	d
SCNx8	dnn/contrib/rapidjson/msinttypes/inttypes.h	203;"	d
SCNxFAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	224;"	d
SCNxFAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	237;"	d
SCNxFAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	250;"	d
SCNxFAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	211;"	d
SCNxLEAST16	dnn/contrib/rapidjson/msinttypes/inttypes.h	220;"	d
SCNxLEAST32	dnn/contrib/rapidjson/msinttypes/inttypes.h	233;"	d
SCNxLEAST64	dnn/contrib/rapidjson/msinttypes/inttypes.h	246;"	d
SCNxLEAST8	dnn/contrib/rapidjson/msinttypes/inttypes.h	207;"	d
SCNxMAX	dnn/contrib/rapidjson/msinttypes/inttypes.h	255;"	d
SCNxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	261;"	d
SCNxPTR	dnn/contrib/rapidjson/msinttypes/inttypes.h	266;"	d
_MSC_INTTYPES_H_	dnn/contrib/rapidjson/msinttypes/inttypes.h	38;"	d
imaxabs	dnn/contrib/rapidjson/msinttypes/inttypes.h	275;"	d
imaxdiv	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon14
quot	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon14
rem	dnn/contrib/rapidjson/msinttypes/inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon14
strtoimax	dnn/contrib/rapidjson/msinttypes/inttypes.h	303;"	d
strtoumax	dnn/contrib/rapidjson/msinttypes/inttypes.h	304;"	d
wcstoimax	dnn/contrib/rapidjson/msinttypes/inttypes.h	307;"	d
wcstoumax	dnn/contrib/rapidjson/msinttypes/inttypes.h	308;"	d
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	273;"	d
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	51;"	d
INT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	62;"	d
INT16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	177;"	d
INT16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	176;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	274;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	52;"	d
INT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	63;"	d
INT32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	179;"	d
INT32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	178;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	275;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	53;"	d
INT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	64;"	d
INT64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	181;"	d
INT64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	180;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	272;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	50;"	d
INT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	61;"	d
INT8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	175;"	d
INT8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	174;"	d
INTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	286;"	d
INTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	75;"	d
INTMAX_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	228;"	d
INTMAX_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	227;"	d
INTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	218;"	d
INTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	222;"	d
INTPTR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	217;"	d
INTPTR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	221;"	d
INT_FAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	205;"	d
INT_FAST16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	204;"	d
INT_FAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	207;"	d
INT_FAST32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	206;"	d
INT_FAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	209;"	d
INT_FAST64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	208;"	d
INT_FAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	203;"	d
INT_FAST8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	202;"	d
INT_LEAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	191;"	d
INT_LEAST16_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	190;"	d
INT_LEAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	193;"	d
INT_LEAST32_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	192;"	d
INT_LEAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	195;"	d
INT_LEAST64_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	194;"	d
INT_LEAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	189;"	d
INT_LEAST8_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	188;"	d
PTRDIFF_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	235;"	d
PTRDIFF_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	238;"	d
PTRDIFF_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	234;"	d
PTRDIFF_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	237;"	d
SIG_ATOMIC_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	242;"	d
SIG_ATOMIC_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	241;"	d
SIZE_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	246;"	d
SIZE_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	248;"	d
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	278;"	d
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	55;"	d
UINT16_C	dnn/contrib/rapidjson/msinttypes/stdint.h	67;"	d
UINT16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	183;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	279;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	56;"	d
UINT32_C	dnn/contrib/rapidjson/msinttypes/stdint.h	68;"	d
UINT32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	184;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	280;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	57;"	d
UINT64_C	dnn/contrib/rapidjson/msinttypes/stdint.h	69;"	d
UINT64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	185;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	277;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	54;"	d
UINT8_C	dnn/contrib/rapidjson/msinttypes/stdint.h	66;"	d
UINT8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	182;"	d
UINTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	289;"	d
UINTMAX_C	dnn/contrib/rapidjson/msinttypes/stdint.h	78;"	d
UINTMAX_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	229;"	d
UINTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	219;"	d
UINTPTR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	223;"	d
UINT_FAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	211;"	d
UINT_FAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	212;"	d
UINT_FAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	213;"	d
UINT_FAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	210;"	d
UINT_LEAST16_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	197;"	d
UINT_LEAST32_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	198;"	d
UINT_LEAST64_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	199;"	d
UINT_LEAST8_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	196;"	d
WCHAR_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	257;"	d
WCHAR_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	254;"	d
WINT_MAX	dnn/contrib/rapidjson/msinttypes/stdint.h	261;"	d
WINT_MIN	dnn/contrib/rapidjson/msinttypes/stdint.h	260;"	d
_MSC_STDINT_H_	dnn/contrib/rapidjson/msinttypes/stdint.h	38;"	d
_W64	dnn/contrib/rapidjson/msinttypes/stdint.h	102;"	d
_W64	dnn/contrib/rapidjson/msinttypes/stdint.h	104;"	d
int16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
intmax_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
uint16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	dnn/contrib/rapidjson/msinttypes/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
Base	dnn/contrib/rapidjson/prettywriter.h	/^    typedef Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> Base;$/;"	t	class:PrettyWriter
Bool	dnn/contrib/rapidjson/prettywriter.h	/^    bool Bool(bool b)           { PrettyPrefix(b ? kTrueType : kFalseType); return Base::WriteBool(b); }$/;"	f	class:PrettyWriter
Ch	dnn/contrib/rapidjson/prettywriter.h	/^    typedef typename Base::Ch Ch;$/;"	t	class:PrettyWriter
Double	dnn/contrib/rapidjson/prettywriter.h	/^    bool Double(double d)       { PrettyPrefix(kNumberType); return Base::WriteDouble(d); }$/;"	f	class:PrettyWriter
EndArray	dnn/contrib/rapidjson/prettywriter.h	/^    bool EndArray(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
EndObject	dnn/contrib/rapidjson/prettywriter.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:PrettyWriter
Int	dnn/contrib/rapidjson/prettywriter.h	/^    bool Int(int i)             { PrettyPrefix(kNumberType); return Base::WriteInt(i); }$/;"	f	class:PrettyWriter
Int64	dnn/contrib/rapidjson/prettywriter.h	/^    bool Int64(int64_t i64)     { PrettyPrefix(kNumberType); return Base::WriteInt64(i64); }$/;"	f	class:PrettyWriter
Key	dnn/contrib/rapidjson/prettywriter.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
Key	dnn/contrib/rapidjson/prettywriter.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:PrettyWriter
Null	dnn/contrib/rapidjson/prettywriter.h	/^    bool Null()                 { PrettyPrefix(kNullType);   return Base::WriteNull(); }$/;"	f	class:PrettyWriter
PrettyPrefix	dnn/contrib/rapidjson/prettywriter.h	/^    void PrettyPrefix(Type type) {$/;"	f	class:PrettyWriter
PrettyWriter	dnn/contrib/rapidjson/prettywriter.h	/^    PrettyWriter(OutputStream& os, StackAllocator* allocator = 0, size_t levelDepth = Base::kDefaultLevelDepth) : $/;"	f	class:PrettyWriter
PrettyWriter	dnn/contrib/rapidjson/prettywriter.h	/^class PrettyWriter : public Writer<OutputStream, SourceEncoding, TargetEncoding, StackAllocator> {$/;"	c
RAPIDJSON_PRETTYWRITER_H_	dnn/contrib/rapidjson/prettywriter.h	22;"	d
SetIndent	dnn/contrib/rapidjson/prettywriter.h	/^    PrettyWriter& SetIndent(Ch indentChar, unsigned indentCharCount) {$/;"	f	class:PrettyWriter
StartArray	dnn/contrib/rapidjson/prettywriter.h	/^    bool StartArray() {$/;"	f	class:PrettyWriter
StartObject	dnn/contrib/rapidjson/prettywriter.h	/^    bool StartObject() {$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:PrettyWriter
String	dnn/contrib/rapidjson/prettywriter.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:PrettyWriter
Uint	dnn/contrib/rapidjson/prettywriter.h	/^    bool Uint(unsigned u)       { PrettyPrefix(kNumberType); return Base::WriteUint(u); }$/;"	f	class:PrettyWriter
Uint64	dnn/contrib/rapidjson/prettywriter.h	/^    bool Uint64(uint64_t u64)   { PrettyPrefix(kNumberType); return Base::WriteUint64(u64);  }$/;"	f	class:PrettyWriter
WriteIndent	dnn/contrib/rapidjson/prettywriter.h	/^    void WriteIndent()  {$/;"	f	class:PrettyWriter
indentCharCount_	dnn/contrib/rapidjson/prettywriter.h	/^    unsigned indentCharCount_;$/;"	m	class:PrettyWriter
indentChar_	dnn/contrib/rapidjson/prettywriter.h	/^    Ch indentChar_;$/;"	m	class:PrettyWriter
Ch	dnn/contrib/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericInsituStringStream
Ch	dnn/contrib/rapidjson/rapidjson.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:GenericStringStream
Flush	dnn/contrib/rapidjson/rapidjson.h	/^    void Flush() { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
Flush	dnn/contrib/rapidjson/rapidjson.h	/^    void Flush() {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^    GenericInsituStringStream(Ch *src) : src_(src), dst_(0), head_(src) {}$/;"	f	struct:GenericInsituStringStream
GenericInsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^struct GenericInsituStringStream {$/;"	s
GenericStringStream	dnn/contrib/rapidjson/rapidjson.h	/^    GenericStringStream(const Ch *src) : src_(src), head_(src) {}$/;"	f	struct:GenericStringStream
GenericStringStream	dnn/contrib/rapidjson/rapidjson.h	/^struct GenericStringStream {$/;"	s
InsituStringStream	dnn/contrib/rapidjson/rapidjson.h	/^typedef GenericInsituStringStream<UTF8<> > InsituStringStream;$/;"	t
Peek	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Peek() const { return *src_; }$/;"	f	struct:GenericStringStream
Peek	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Peek() { return *src_; }$/;"	f	struct:GenericInsituStringStream
Pop	dnn/contrib/rapidjson/rapidjson.h	/^    void Pop(size_t count) { dst_ -= count; }$/;"	f	struct:GenericInsituStringStream
Push	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* Push(size_t count) { Ch* begin = dst_; dst_ += count; return begin; }$/;"	f	struct:GenericInsituStringStream
Put	dnn/contrib/rapidjson/rapidjson.h	/^    void Put(Ch c) { RAPIDJSON_ASSERT(dst_ != 0); *dst_++ = c; }$/;"	f	struct:GenericInsituStringStream
Put	dnn/contrib/rapidjson/rapidjson.h	/^    void Put(Ch) { RAPIDJSON_ASSERT(false); }$/;"	f	struct:GenericStringStream
PutBegin	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* PutBegin() { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutBegin	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* PutBegin() { return dst_ = src_; }$/;"	f	struct:GenericInsituStringStream
PutEnd	dnn/contrib/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch* begin) { return static_cast<size_t>(dst_ - begin); }$/;"	f	struct:GenericInsituStringStream
PutEnd	dnn/contrib/rapidjson/rapidjson.h	/^    size_t PutEnd(Ch*) { RAPIDJSON_ASSERT(false); return 0; }$/;"	f	struct:GenericStringStream
PutN	dnn/contrib/rapidjson/rapidjson.h	/^inline void PutN(Stream& stream, Ch c, size_t n) {$/;"	f
RAPIDJSON_64BIT	dnn/contrib/rapidjson/rapidjson.h	202;"	d
RAPIDJSON_64BIT	dnn/contrib/rapidjson/rapidjson.h	204;"	d
RAPIDJSON_ALIGN	dnn/contrib/rapidjson/rapidjson.h	219;"	d
RAPIDJSON_ASSERT	dnn/contrib/rapidjson/rapidjson.h	315;"	d
RAPIDJSON_BIGENDIAN	dnn/contrib/rapidjson/rapidjson.h	144;"	d
RAPIDJSON_DELETE	dnn/contrib/rapidjson/rapidjson.h	458;"	d
RAPIDJSON_DIAG_OFF	dnn/contrib/rapidjson/rapidjson.h	381;"	d
RAPIDJSON_DIAG_POP	dnn/contrib/rapidjson/rapidjson.h	387;"	d
RAPIDJSON_DIAG_PRAGMA	dnn/contrib/rapidjson/rapidjson.h	380;"	d
RAPIDJSON_DIAG_PUSH	dnn/contrib/rapidjson/rapidjson.h	386;"	d
RAPIDJSON_DO_JOIN	dnn/contrib/rapidjson/rapidjson.h	331;"	d
RAPIDJSON_DO_JOIN2	dnn/contrib/rapidjson/rapidjson.h	332;"	d
RAPIDJSON_DO_STRINGIFY	dnn/contrib/rapidjson/rapidjson.h	367;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	163;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	165;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	173;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	175;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	181;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	183;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	186;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	188;"	d
RAPIDJSON_ENDIAN	dnn/contrib/rapidjson/rapidjson.h	190;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	132;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	134;"	d
RAPIDJSON_FORCEINLINE	dnn/contrib/rapidjson/rapidjson.h	136;"	d
RAPIDJSON_GNUC	dnn/contrib/rapidjson/rapidjson.h	373;"	d
RAPIDJSON_HAS_CXX11_NOEXCEPT	dnn/contrib/rapidjson/rapidjson.h	428;"	d
RAPIDJSON_HAS_CXX11_RVALUE_REFS	dnn/contrib/rapidjson/rapidjson.h	416;"	d
RAPIDJSON_HAS_CXX11_TYPETRAITS	dnn/contrib/rapidjson/rapidjson.h	444;"	d
RAPIDJSON_JOIN	dnn/contrib/rapidjson/rapidjson.h	330;"	d
RAPIDJSON_LITTLEENDIAN	dnn/contrib/rapidjson/rapidjson.h	143;"	d
RAPIDJSON_MULTILINEMACRO_BEGIN	dnn/contrib/rapidjson/rapidjson.h	357;"	d
RAPIDJSON_MULTILINEMACRO_END	dnn/contrib/rapidjson/rapidjson.h	358;"	d
RAPIDJSON_NAMESPACE	dnn/contrib/rapidjson/rapidjson.h	88;"	d
RAPIDJSON_NAMESPACE_BEGIN	dnn/contrib/rapidjson/rapidjson.h	91;"	d
RAPIDJSON_NAMESPACE_END	dnn/contrib/rapidjson/rapidjson.h	94;"	d
RAPIDJSON_NEW	dnn/contrib/rapidjson/rapidjson.h	454;"	d
RAPIDJSON_NOEXCEPT	dnn/contrib/rapidjson/rapidjson.h	437;"	d
RAPIDJSON_NO_INT64DEFINE	dnn/contrib/rapidjson/rapidjson.h	122;"	d
RAPIDJSON_NO_SIZETYPEDEFINE	dnn/contrib/rapidjson/rapidjson.h	285;"	d
RAPIDJSON_PRAGMA	dnn/contrib/rapidjson/rapidjson.h	379;"	d
RAPIDJSON_RAPIDJSON_H_	dnn/contrib/rapidjson/rapidjson.h	22;"	d
RAPIDJSON_SIMD	dnn/contrib/rapidjson/rapidjson.h	262;"	d
RAPIDJSON_STATIC_ASSERT	dnn/contrib/rapidjson/rapidjson.h	346;"	d
RAPIDJSON_STATIC_ASSERT_UNUSED_ATTRIBUTE	dnn/contrib/rapidjson/rapidjson.h	335;"	d
RAPIDJSON_STRINGIFY	dnn/contrib/rapidjson/rapidjson.h	366;"	d
RAPIDJSON_UINT64_C2	dnn/contrib/rapidjson/rapidjson.h	232;"	d
RAPIDJSON_VERSION_CODE	dnn/contrib/rapidjson/rapidjson.h	362;"	d
STATIC_ASSERTION_FAILURE	dnn/contrib/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	s
SizeType	dnn/contrib/rapidjson/rapidjson.h	/^typedef unsigned SizeType;$/;"	t
StaticAssertTest	dnn/contrib/rapidjson/rapidjson.h	/^template<int x> struct StaticAssertTest {};$/;"	s
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits {$/;"	s
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits<GenericInsituStringStream<Encoding> > {$/;"	s
StreamTraits	dnn/contrib/rapidjson/rapidjson.h	/^struct StreamTraits<GenericStringStream<Encoding> > {$/;"	s
StringStream	dnn/contrib/rapidjson/rapidjson.h	/^typedef GenericStringStream<UTF8<> > StringStream;$/;"	t
Take	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericInsituStringStream
Take	dnn/contrib/rapidjson/rapidjson.h	/^    Ch Take() { return *src_++; }$/;"	f	struct:GenericStringStream
Tell	dnn/contrib/rapidjson/rapidjson.h	/^    size_t Tell() const { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericStringStream
Tell	dnn/contrib/rapidjson/rapidjson.h	/^    size_t Tell() { return static_cast<size_t>(src_ - head_); }$/;"	f	struct:GenericInsituStringStream
Type	dnn/contrib/rapidjson/rapidjson.h	/^enum Type {$/;"	g
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 0 };$/;"	e	enum:StreamTraits::__anon23
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon24
copyOptimization	dnn/contrib/rapidjson/rapidjson.h	/^    enum { copyOptimization = 1 };$/;"	e	enum:StreamTraits::__anon25
dst_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* dst_;$/;"	m	struct:GenericInsituStringStream
head_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* head_;$/;"	m	struct:GenericInsituStringStream
head_	dnn/contrib/rapidjson/rapidjson.h	/^    const Ch* head_;    \/\/!< Original head of the string.$/;"	m	struct:GenericStringStream
kArrayType	dnn/contrib/rapidjson/rapidjson.h	/^    kArrayType = 4,     \/\/!< array $/;"	e	enum:Type
kFalseType	dnn/contrib/rapidjson/rapidjson.h	/^    kFalseType = 1,     \/\/!< false$/;"	e	enum:Type
kNullType	dnn/contrib/rapidjson/rapidjson.h	/^    kNullType = 0,      \/\/!< null$/;"	e	enum:Type
kNumberType	dnn/contrib/rapidjson/rapidjson.h	/^    kNumberType = 6     \/\/!< number$/;"	e	enum:Type
kObjectType	dnn/contrib/rapidjson/rapidjson.h	/^    kObjectType = 3,    \/\/!< object$/;"	e	enum:Type
kStringType	dnn/contrib/rapidjson/rapidjson.h	/^    kStringType = 5,    \/\/!< string$/;"	e	enum:Type
kTrueType	dnn/contrib/rapidjson/rapidjson.h	/^    kTrueType = 2,      \/\/!< true$/;"	e	enum:Type
src_	dnn/contrib/rapidjson/rapidjson.h	/^    Ch* src_;$/;"	m	struct:GenericInsituStringStream
src_	dnn/contrib/rapidjson/rapidjson.h	/^    const Ch* src_;     \/\/!< Current read position.$/;"	m	struct:GenericStringStream
value	dnn/contrib/rapidjson/rapidjson.h	/^template <> struct STATIC_ASSERTION_FAILURE<true> { enum { value = 1 }; };$/;"	e	enum:STATIC_ASSERTION_FAILURE::__anon22
Base	dnn/contrib/rapidjson/reader.h	/^        typedef NumberStream<InputStream, false> Base;$/;"	t	class:GenericReader::NumberStream
BaseReaderHandler	dnn/contrib/rapidjson/reader.h	/^struct BaseReaderHandler {$/;"	s
Bool	dnn/contrib/rapidjson/reader.h	/^    bool Bool(bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Ch	dnn/contrib/rapidjson/reader.h	/^        typedef CharType Ch;$/;"	t	class:GenericReader::StackStream
Ch	dnn/contrib/rapidjson/reader.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	struct:BaseReaderHandler
Ch	dnn/contrib/rapidjson/reader.h	/^    typedef typename SourceEncoding::Ch Ch; \/\/!< SourceEncoding character type$/;"	t	class:GenericReader
ClearStack	dnn/contrib/rapidjson/reader.h	/^    void ClearStack() { stack_.Clear(); }$/;"	f	class:GenericReader
ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^        explicit ClearStackOnExit(GenericReader& r) : r_(r) {}$/;"	f	struct:GenericReader::ClearStackOnExit
ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^    struct ClearStackOnExit {$/;"	s	class:GenericReader
ColonToken	dnn/contrib/rapidjson/reader.h	/^        ColonToken,$/;"	e	enum:GenericReader::Token
CommaToken	dnn/contrib/rapidjson/reader.h	/^        CommaToken,$/;"	e	enum:GenericReader::Token
Default	dnn/contrib/rapidjson/reader.h	/^    bool Default() { return true; }$/;"	f	struct:BaseReaderHandler
Double	dnn/contrib/rapidjson/reader.h	/^    bool Double(double) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndArray	dnn/contrib/rapidjson/reader.h	/^    bool EndArray(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
EndObject	dnn/contrib/rapidjson/reader.h	/^    bool EndObject(SizeType) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
FalseToken	dnn/contrib/rapidjson/reader.h	/^        FalseToken,$/;"	e	enum:GenericReader::Token
GenericReader	dnn/contrib/rapidjson/reader.h	/^    GenericReader(StackAllocator* stackAllocator = 0, size_t stackCapacity = kDefaultStackCapacity) : stack_(stackAllocator, stackCapacity), parseResult_() {}$/;"	f	class:GenericReader
GenericReader	dnn/contrib/rapidjson/reader.h	/^class GenericReader {$/;"	c
GetErrorOffset	dnn/contrib/rapidjson/reader.h	/^    size_t GetErrorOffset() const { return parseResult_.Offset(); }$/;"	f	class:GenericReader
GetParseErrorCode	dnn/contrib/rapidjson/reader.h	/^    ParseErrorCode GetParseErrorCode() const { return parseResult_.Code(); }$/;"	f	class:GenericReader
HandleError	dnn/contrib/rapidjson/reader.h	/^    void HandleError(IterativeParsingState src, InputStream& is) {$/;"	f	class:GenericReader
HasParseError	dnn/contrib/rapidjson/reader.h	/^    bool HasParseError() const { return parseResult_.IsError(); }$/;"	f	class:GenericReader
Int	dnn/contrib/rapidjson/reader.h	/^    bool Int(int) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Int64	dnn/contrib/rapidjson/reader.h	/^    bool Int64(int64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
IterativeParse	dnn/contrib/rapidjson/reader.h	/^    ParseResult IterativeParse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
IterativeParsingArrayFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingArrayFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingArrayInitialState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingArrayInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingElementDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingElementState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingElementState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingErrorState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingErrorState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingKeyValueDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingKeyValueDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberDelimiterState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberDelimiterState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberKeyState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberKeyState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingMemberValueState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingMemberValueState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectFinishState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingObjectFinishState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingObjectInitialState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingObjectInitialState,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingStartState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingStartState = 0,$/;"	e	enum:GenericReader::IterativeParsingState
IterativeParsingState	dnn/contrib/rapidjson/reader.h	/^    enum IterativeParsingState {$/;"	g	class:GenericReader
IterativeParsingValueState	dnn/contrib/rapidjson/reader.h	/^        IterativeParsingValueState,$/;"	e	enum:GenericReader::IterativeParsingState
Key	dnn/contrib/rapidjson/reader.h	/^    bool Key(const Ch* str, SizeType len, bool copy) { return static_cast<Override&>(*this).String(str, len, copy); }$/;"	f	struct:BaseReaderHandler
LeftBracketToken	dnn/contrib/rapidjson/reader.h	/^        LeftBracketToken = 0,$/;"	e	enum:GenericReader::Token
LeftCurlyBracketToken	dnn/contrib/rapidjson/reader.h	/^        LeftCurlyBracketToken,$/;"	e	enum:GenericReader::Token
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() const { return length_; }$/;"	f	class:GenericReader::StackStream
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() { return 0; }$/;"	f	class:GenericReader::NumberStream
Length	dnn/contrib/rapidjson/reader.h	/^        size_t Length() { return stackStream.Length(); }$/;"	f	class:GenericReader::NumberStream
N	dnn/contrib/rapidjson/reader.h	1042;"	d
N	dnn/contrib/rapidjson/reader.h	1056;"	d
N16	dnn/contrib/rapidjson/reader.h	1043;"	d
N16	dnn/contrib/rapidjson/reader.h	1057;"	d
Null	dnn/contrib/rapidjson/reader.h	/^    bool Null() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
NullToken	dnn/contrib/rapidjson/reader.h	/^        NullToken,$/;"	e	enum:GenericReader::Token
NumberStream	dnn/contrib/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& is) : NumberStream<InputStream, false>(reader, is), stackStream(reader.stack_) {}$/;"	f	class:GenericReader::NumberStream
NumberStream	dnn/contrib/rapidjson/reader.h	/^        NumberStream(GenericReader& reader, InputStream& s) : is(s) { (void)reader;  }$/;"	f	class:GenericReader::NumberStream
NumberStream	dnn/contrib/rapidjson/reader.h	/^    class NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberStream	dnn/contrib/rapidjson/reader.h	/^    class NumberStream<InputStream, true> : public NumberStream<InputStream, false> {$/;"	c	class:GenericReader
NumberToken	dnn/contrib/rapidjson/reader.h	/^        NumberToken,$/;"	e	enum:GenericReader::Token
Override	dnn/contrib/rapidjson/reader.h	/^    typedef typename internal::SelectIf<internal::IsSame<Derived, void>, BaseReaderHandler, Derived>::Type Override;$/;"	t	struct:BaseReaderHandler
Parse	dnn/contrib/rapidjson/reader.h	/^    ParseResult Parse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseArray	dnn/contrib/rapidjson/reader.h	/^    void ParseArray(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFalse	dnn/contrib/rapidjson/reader.h	/^    void ParseFalse(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseFlag	dnn/contrib/rapidjson/reader.h	/^enum ParseFlag {$/;"	g
ParseHex4	dnn/contrib/rapidjson/reader.h	/^    unsigned ParseHex4(InputStream& is) {$/;"	f	class:GenericReader
ParseNull	dnn/contrib/rapidjson/reader.h	/^    void ParseNull(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseNumber	dnn/contrib/rapidjson/reader.h	/^    void ParseNumber(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseObject	dnn/contrib/rapidjson/reader.h	/^    void ParseObject(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseString	dnn/contrib/rapidjson/reader.h	/^    void ParseString(InputStream& is, Handler& handler, bool isKey = false) {$/;"	f	class:GenericReader
ParseStringToStream	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE void ParseStringToStream(InputStream& is, OutputStream& os) {$/;"	f	class:GenericReader
ParseTrue	dnn/contrib/rapidjson/reader.h	/^    void ParseTrue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
ParseValue	dnn/contrib/rapidjson/reader.h	/^    void ParseValue(InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
Peek	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Peek() const { return is.Peek(); }$/;"	f	class:GenericReader::NumberStream
Pop	dnn/contrib/rapidjson/reader.h	/^        Ch* Pop() {$/;"	f	class:GenericReader::StackStream
Pop	dnn/contrib/rapidjson/reader.h	/^        const char* Pop() { return 0; }$/;"	f	class:GenericReader::NumberStream
Pop	dnn/contrib/rapidjson/reader.h	/^        const char* Pop() {$/;"	f	class:GenericReader::NumberStream
Predict	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Predict(IterativeParsingState state, Token token) {$/;"	f	class:GenericReader
Put	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE void Put(Ch c) {$/;"	f	class:GenericReader::StackStream
RAPIDJSON_NOTHING	dnn/contrib/rapidjson/reader.h	54;"	d
RAPIDJSON_PARSE_DEFAULT_FLAGS	dnn/contrib/rapidjson/reader.h	136;"	d
RAPIDJSON_PARSE_ERROR	dnn/contrib/rapidjson/reader.h	115;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN	dnn/contrib/rapidjson/reader.h	56;"	d
RAPIDJSON_PARSE_ERROR_EARLY_RETURN_VOID	dnn/contrib/rapidjson/reader.h	61;"	d
RAPIDJSON_PARSE_ERROR_NORETURN	dnn/contrib/rapidjson/reader.h	96;"	d
RAPIDJSON_READER_H_	dnn/contrib/rapidjson/reader.h	22;"	d
Reader	dnn/contrib/rapidjson/reader.h	/^typedef GenericReader<UTF8<>, UTF8<> > Reader;$/;"	t
RightBracketToken	dnn/contrib/rapidjson/reader.h	/^        RightBracketToken,$/;"	e	enum:GenericReader::Token
RightCurlyBracketToken	dnn/contrib/rapidjson/reader.h	/^        RightCurlyBracketToken,$/;"	e	enum:GenericReader::Token
SetParseError	dnn/contrib/rapidjson/reader.h	/^    void SetParseError(ParseErrorCode code, size_t offset) { parseResult_.Set(code, offset); }$/;"	f	class:GenericReader
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^template<> inline void SkipWhitespace(InsituStringStream& is) { $/;"	f
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^template<> inline void SkipWhitespace(StringStream& is) {$/;"	f
SkipWhitespace	dnn/contrib/rapidjson/reader.h	/^void SkipWhitespace(InputStream& is) {$/;"	f
SkipWhitespace_SIMD	dnn/contrib/rapidjson/reader.h	/^inline const char *SkipWhitespace_SIMD(const char* p) {$/;"	f
StackStream	dnn/contrib/rapidjson/reader.h	/^        StackStream(internal::Stack<StackAllocator>& stack) : stack_(stack), length_(0) {}$/;"	f	class:GenericReader::StackStream
StackStream	dnn/contrib/rapidjson/reader.h	/^    class StackStream {$/;"	c	class:GenericReader
StartArray	dnn/contrib/rapidjson/reader.h	/^    bool StartArray() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StartObject	dnn/contrib/rapidjson/reader.h	/^    bool StartObject() { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    StreamLocalCopy(Stream& original) : s(original), original_(original) {}$/;"	f	class:internal::StreamLocalCopy
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 0> {$/;"	c	namespace:internal
StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^class StreamLocalCopy<Stream, 1> {$/;"	c	namespace:internal
String	dnn/contrib/rapidjson/reader.h	/^    bool String(const Ch*, SizeType, bool) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
StringToken	dnn/contrib/rapidjson/reader.h	/^        StringToken,$/;"	e	enum:GenericReader::Token
Take	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch Take() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() { return is.Take(); }$/;"	f	class:GenericReader::NumberStream
TakePush	dnn/contrib/rapidjson/reader.h	/^        RAPIDJSON_FORCEINLINE Ch TakePush() {$/;"	f	class:GenericReader::NumberStream
Tell	dnn/contrib/rapidjson/reader.h	/^        size_t Tell() { return is.Tell(); }$/;"	f	class:GenericReader::NumberStream
Token	dnn/contrib/rapidjson/reader.h	/^    enum Token {$/;"	g	class:GenericReader
Tokenize	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE Token Tokenize(Ch c) {$/;"	f	class:GenericReader
Transit	dnn/contrib/rapidjson/reader.h	/^    RAPIDJSON_FORCEINLINE IterativeParsingState Transit(IterativeParsingState src, Token token, IterativeParsingState dst, InputStream& is, Handler& handler) {$/;"	f	class:GenericReader
TrueToken	dnn/contrib/rapidjson/reader.h	/^        TrueToken,$/;"	e	enum:GenericReader::Token
Uint	dnn/contrib/rapidjson/reader.h	/^    bool Uint(unsigned) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Uint64	dnn/contrib/rapidjson/reader.h	/^    bool Uint64(uint64_t) { return static_cast<Override&>(*this).Default(); }$/;"	f	struct:BaseReaderHandler
Z16	dnn/contrib/rapidjson/reader.h	674;"	d
Z16	dnn/contrib/rapidjson/reader.h	682;"	d
cIterativeParsingStateCount	dnn/contrib/rapidjson/reader.h	/^        cIterativeParsingStateCount$/;"	e	enum:GenericReader::IterativeParsingState
internal	dnn/contrib/rapidjson/reader.h	/^namespace internal {$/;"	n
is	dnn/contrib/rapidjson/reader.h	/^        InputStream& is;$/;"	m	class:GenericReader::NumberStream
kDefaultStackCapacity	dnn/contrib/rapidjson/reader.h	/^    static const size_t kDefaultStackCapacity = 256;    \/\/!< Default stack capacity in bytes for storing a single decoded string.$/;"	m	class:GenericReader
kParseDefaultFlags	dnn/contrib/rapidjson/reader.h	/^    kParseDefaultFlags = RAPIDJSON_PARSE_DEFAULT_FLAGS  \/\/!< Default parse flags. Can be customized by defining RAPIDJSON_PARSE_DEFAULT_FLAGS$/;"	e	enum:ParseFlag
kParseFullPrecisionFlag	dnn/contrib/rapidjson/reader.h	/^    kParseFullPrecisionFlag = 16,   \/\/!< Parse number in full precision (but slower).$/;"	e	enum:ParseFlag
kParseInsituFlag	dnn/contrib/rapidjson/reader.h	/^    kParseInsituFlag = 1,           \/\/!< In-situ(destructive) parsing.$/;"	e	enum:ParseFlag
kParseIterativeFlag	dnn/contrib/rapidjson/reader.h	/^    kParseIterativeFlag = 4,        \/\/!< Iterative(constant complexity in terms of function call stack size) parsing.$/;"	e	enum:ParseFlag
kParseNoFlags	dnn/contrib/rapidjson/reader.h	/^    kParseNoFlags = 0,              \/\/!< No flags are set.$/;"	e	enum:ParseFlag
kParseStopWhenDoneFlag	dnn/contrib/rapidjson/reader.h	/^    kParseStopWhenDoneFlag = 8,     \/\/!< After parsing a complete JSON root from stream, stop further processing the rest of stream. When this flag is used, parser will not generate kParseErrorDocumentRootNotSingular error.$/;"	e	enum:ParseFlag
kParseValidateEncodingFlag	dnn/contrib/rapidjson/reader.h	/^    kParseValidateEncodingFlag = 2, \/\/!< Validate encoding of JSON strings.$/;"	e	enum:ParseFlag
kTokenCount	dnn/contrib/rapidjson/reader.h	/^        kTokenCount$/;"	e	enum:GenericReader::Token
length_	dnn/contrib/rapidjson/reader.h	/^        SizeType length_;$/;"	m	class:GenericReader::StackStream
original_	dnn/contrib/rapidjson/reader.h	/^    Stream& original_;$/;"	m	class:internal::StreamLocalCopy
parseResult_	dnn/contrib/rapidjson/reader.h	/^    ParseResult parseResult_;$/;"	m	class:GenericReader
r_	dnn/contrib/rapidjson/reader.h	/^        GenericReader& r_;$/;"	m	struct:GenericReader::ClearStackOnExit
s	dnn/contrib/rapidjson/reader.h	/^    Stream s;$/;"	m	class:internal::StreamLocalCopy
s	dnn/contrib/rapidjson/reader.h	/^    Stream& s;$/;"	m	class:internal::StreamLocalCopy
stackStream	dnn/contrib/rapidjson/reader.h	/^        StackStream<char> stackStream;$/;"	m	class:GenericReader::NumberStream
stack_	dnn/contrib/rapidjson/reader.h	/^        internal::Stack<StackAllocator>& stack_;$/;"	m	class:GenericReader::StackStream
stack_	dnn/contrib/rapidjson/reader.h	/^    internal::Stack<StackAllocator> stack_;  \/\/!< A stack for storing decoded string temporarily during non-destructive parsing.$/;"	m	class:GenericReader
~ClearStackOnExit	dnn/contrib/rapidjson/reader.h	/^        ~ClearStackOnExit() { r_.ClearStack(); }$/;"	f	struct:GenericReader::ClearStackOnExit
~NumberStream	dnn/contrib/rapidjson/reader.h	/^        ~NumberStream() {}$/;"	f	class:GenericReader::NumberStream
~StreamLocalCopy	dnn/contrib/rapidjson/reader.h	/^    ~StreamLocalCopy() { original_ = s; }$/;"	f	class:internal::StreamLocalCopy
Ch	dnn/contrib/rapidjson/stringbuffer.h	/^    typedef typename Encoding::Ch Ch;$/;"	t	class:GenericStringBuffer
Clear	dnn/contrib/rapidjson/stringbuffer.h	/^    void Clear() { stack_.Clear(); }$/;"	f	class:GenericStringBuffer
Flush	dnn/contrib/rapidjson/stringbuffer.h	/^    void Flush() {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer(Allocator* allocator = 0, size_t capacity = kDefaultCapacity) : stack_(allocator, capacity) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer(GenericStringBuffer&& rhs) : stack_(std::move(rhs.stack_)) {}$/;"	f	class:GenericStringBuffer
GenericStringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^class GenericStringBuffer {$/;"	c
GetSize	dnn/contrib/rapidjson/stringbuffer.h	/^    size_t GetSize() const { return stack_.GetSize(); }$/;"	f	class:GenericStringBuffer
GetString	dnn/contrib/rapidjson/stringbuffer.h	/^    const Ch* GetString() const {$/;"	f	class:GenericStringBuffer
Pop	dnn/contrib/rapidjson/stringbuffer.h	/^    void Pop(size_t count) { stack_.template Pop<Ch>(count); }$/;"	f	class:GenericStringBuffer
Push	dnn/contrib/rapidjson/stringbuffer.h	/^    Ch* Push(size_t count) { return stack_.template Push<Ch>(count); }$/;"	f	class:GenericStringBuffer
Put	dnn/contrib/rapidjson/stringbuffer.h	/^    void Put(Ch c) { *stack_.template Push<Ch>() = c; }$/;"	f	class:GenericStringBuffer
PutN	dnn/contrib/rapidjson/stringbuffer.h	/^inline void PutN(GenericStringBuffer<UTF8<> >& stream, char c, size_t n) {$/;"	f
RAPIDJSON_STRINGBUFFER_H_	dnn/contrib/rapidjson/stringbuffer.h	22;"	d
ShrinkToFit	dnn/contrib/rapidjson/stringbuffer.h	/^    void ShrinkToFit() {$/;"	f	class:GenericStringBuffer
StringBuffer	dnn/contrib/rapidjson/stringbuffer.h	/^typedef GenericStringBuffer<UTF8<> > StringBuffer;$/;"	t
kDefaultCapacity	dnn/contrib/rapidjson/stringbuffer.h	/^    static const size_t kDefaultCapacity = 256;$/;"	m	class:GenericStringBuffer
operator =	dnn/contrib/rapidjson/stringbuffer.h	/^    GenericStringBuffer& operator=(GenericStringBuffer&& rhs) {$/;"	f	class:GenericStringBuffer
stack_	dnn/contrib/rapidjson/stringbuffer.h	/^    mutable internal::Stack<Allocator> stack_;$/;"	m	class:GenericStringBuffer
Bool	dnn/contrib/rapidjson/writer.h	/^    bool Bool(bool b)           { Prefix(b ? kTrueType : kFalseType); return WriteBool(b); }$/;"	f	class:Writer
Ch	dnn/contrib/rapidjson/writer.h	/^    typedef typename SourceEncoding::Ch Ch;$/;"	t	class:Writer
Double	dnn/contrib/rapidjson/writer.h	/^    bool Double(double d)       { Prefix(kNumberType); return WriteDouble(d); }$/;"	f	class:Writer
EndArray	dnn/contrib/rapidjson/writer.h	/^    bool EndArray(SizeType elementCount = 0) {$/;"	f	class:Writer
EndObject	dnn/contrib/rapidjson/writer.h	/^    bool EndObject(SizeType memberCount = 0) {$/;"	f	class:Writer
Int	dnn/contrib/rapidjson/writer.h	/^    bool Int(int i)             { Prefix(kNumberType); return WriteInt(i); }$/;"	f	class:Writer
Int64	dnn/contrib/rapidjson/writer.h	/^    bool Int64(int64_t i64)     { Prefix(kNumberType); return WriteInt64(i64); }$/;"	f	class:Writer
IsComplete	dnn/contrib/rapidjson/writer.h	/^    bool IsComplete() const {$/;"	f	class:Writer
Key	dnn/contrib/rapidjson/writer.h	/^    bool Key(const Ch* str) { return Key(str, internal::StrLen(str)); }$/;"	f	class:Writer
Key	dnn/contrib/rapidjson/writer.h	/^    bool Key(const Ch* str, SizeType length, bool copy = false) { return String(str, length, copy); }$/;"	f	class:Writer
Level	dnn/contrib/rapidjson/writer.h	/^        Level(bool inArray_) : valueCount(0), inArray(inArray_) {}$/;"	f	struct:Writer::Level
Level	dnn/contrib/rapidjson/writer.h	/^    struct Level {$/;"	s	class:Writer
Null	dnn/contrib/rapidjson/writer.h	/^    bool Null()                 { Prefix(kNullType);   return WriteNull(); }$/;"	f	class:Writer
Prefix	dnn/contrib/rapidjson/writer.h	/^    void Prefix(Type type) {$/;"	f	class:Writer
RAPIDJSON_WRITER_H_	dnn/contrib/rapidjson/writer.h	22;"	d
Reset	dnn/contrib/rapidjson/writer.h	/^    void Reset(OutputStream& os) {$/;"	f	class:Writer
StartArray	dnn/contrib/rapidjson/writer.h	/^    bool StartArray() {$/;"	f	class:Writer
StartObject	dnn/contrib/rapidjson/writer.h	/^    bool StartObject() {$/;"	f	class:Writer
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const Ch* str) { return String(str, internal::StrLen(str)); }$/;"	f	class:Writer
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const Ch* str, SizeType length, bool copy = false) {$/;"	f	class:Writer
String	dnn/contrib/rapidjson/writer.h	/^    bool String(const std::basic_string<Ch>& str) {$/;"	f	class:Writer
Uint	dnn/contrib/rapidjson/writer.h	/^    bool Uint(unsigned u)       { Prefix(kNumberType); return WriteUint(u); }$/;"	f	class:Writer
Uint64	dnn/contrib/rapidjson/writer.h	/^    bool Uint64(uint64_t u64)   { Prefix(kNumberType); return WriteUint64(u64); }$/;"	f	class:Writer
WriteBool	dnn/contrib/rapidjson/writer.h	/^    bool WriteBool(bool b)  {$/;"	f	class:Writer
WriteDouble	dnn/contrib/rapidjson/writer.h	/^    bool WriteDouble(double d) {$/;"	f	class:Writer
WriteDouble	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteDouble(double d) {$/;"	f	class:Writer
WriteEndArray	dnn/contrib/rapidjson/writer.h	/^    bool WriteEndArray()    { os_->Put(']'); return true; }$/;"	f	class:Writer
WriteEndObject	dnn/contrib/rapidjson/writer.h	/^    bool WriteEndObject()   { os_->Put('}'); return true; }$/;"	f	class:Writer
WriteInt	dnn/contrib/rapidjson/writer.h	/^    bool WriteInt(int i) {$/;"	f	class:Writer
WriteInt	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt(int i) {$/;"	f	class:Writer
WriteInt64	dnn/contrib/rapidjson/writer.h	/^    bool WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteInt64	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteInt64(int64_t i64) {$/;"	f	class:Writer
WriteNull	dnn/contrib/rapidjson/writer.h	/^    bool WriteNull()  {$/;"	f	class:Writer
WriteStartArray	dnn/contrib/rapidjson/writer.h	/^    bool WriteStartArray()  { os_->Put('['); return true; }$/;"	f	class:Writer
WriteStartObject	dnn/contrib/rapidjson/writer.h	/^    bool WriteStartObject() { os_->Put('{'); return true; }$/;"	f	class:Writer
WriteString	dnn/contrib/rapidjson/writer.h	/^    bool WriteString(const Ch* str, SizeType length)  {$/;"	f	class:Writer
WriteUint	dnn/contrib/rapidjson/writer.h	/^    bool WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint(unsigned u) {$/;"	f	class:Writer
WriteUint64	dnn/contrib/rapidjson/writer.h	/^    bool WriteUint64(uint64_t u64) {$/;"	f	class:Writer
WriteUint64	dnn/contrib/rapidjson/writer.h	/^inline bool Writer<StringBuffer>::WriteUint64(uint64_t u) {$/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^    Writer(OutputStream& os, StackAllocator* stackAllocator = 0, size_t levelDepth = kDefaultLevelDepth) : $/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^    Writer(StackAllocator* allocator = 0, size_t levelDepth = kDefaultLevelDepth) :$/;"	f	class:Writer
Writer	dnn/contrib/rapidjson/writer.h	/^class Writer {$/;"	c
Z16	dnn/contrib/rapidjson/writer.h	253;"	d
Z16	dnn/contrib/rapidjson/writer.h	261;"	d
hasRoot_	dnn/contrib/rapidjson/writer.h	/^    bool hasRoot_;$/;"	m	class:Writer
inArray	dnn/contrib/rapidjson/writer.h	/^        bool inArray;       \/\/!< true if in array, otherwise in object$/;"	m	struct:Writer::Level
kDefaultLevelDepth	dnn/contrib/rapidjson/writer.h	/^    static const size_t kDefaultLevelDepth = 32;$/;"	m	class:Writer
level_stack_	dnn/contrib/rapidjson/writer.h	/^    internal::Stack<StackAllocator> level_stack_;$/;"	m	class:Writer
os_	dnn/contrib/rapidjson/writer.h	/^    OutputStream* os_;$/;"	m	class:Writer
valueCount	dnn/contrib/rapidjson/writer.h	/^        size_t valueCount;  \/\/!< number of values in this level$/;"	m	struct:Writer::Level
ProtoMessage	dnn/core.h	/^typedef google::protobuf::Message* ProtoMessage;$/;"	t
KNOWN_TYPES	dnn/generate_protos.py	/^KNOWN_TYPES = { $/;"	v
PROTO_FILE	dnn/generate_protos.py	/^PROTO_FILE = "generated.proto"$/;"	v
VECTOR_RE	dnn/generate_protos.py	/^VECTOR_RE = re.compile("vector<([^ ]*?)>")$/;"	v
args	dnn/generate_protos.py	/^    args = parser.parse_args() $/;"	v
generateProtos	dnn/generate_protos.py	/^def generateProtos(structures, package, dst):$/;"	f
parseSources	dnn/generate_protos.py	/^def parseSources(src):$/;"	f
parser	dnn/generate_protos.py	/^    parser = argparse.ArgumentParser()$/;"	v
structures	dnn/generate_protos.py	/^    structures = parseSources(args.source_path)$/;"	v
def_value	dnn/inputs/input.cpp	/^const double InputBase::def_value = 0.0;$/;"	m	class:dnn::InputBase	file:
dnn	dnn/inputs/input.cpp	/^namespace dnn {$/;"	n	file:
Input	dnn/inputs/input.h	/^class Input : public InputBase {$/;"	c	namespace:dnn
InputBase	dnn/inputs/input.h	/^class InputBase : public SerializableBase {$/;"	c	namespace:dnn
InputInterface	dnn/inputs/input.h	/^struct InputInterface {$/;"	s	namespace:dnn
c	dnn/inputs/input.h	/^    Constants c;$/;"	m	class:dnn::Input
def_value	dnn/inputs/input.h	/^    static const double def_value;$/;"	m	class:dnn::InputBase
dnn	dnn/inputs/input.h	/^namespace dnn {$/;"	n
getValue	dnn/inputs/input.h	/^    retRefDoubleAtTimeDelegate getValue;$/;"	m	struct:dnn::InputInterface
getValueDefault	dnn/inputs/input.h	/^    static const double& getValueDefault(const Time &t) {$/;"	f	class:dnn::InputBase
interface	dnn/inputs/input.h	/^    typedef InputInterface interface;$/;"	t	class:dnn::InputBase
provideDefaultInterface	dnn/inputs/input.h	/^    static void provideDefaultInterface(InputInterface &i) {$/;"	f	class:dnn::InputBase
s	dnn/inputs/input.h	/^    State s;$/;"	m	class:dnn::Input
serial_process	dnn/inputs/input.h	/^    void serial_process() {$/;"	f	class:dnn::Input
InputTimeSeries	dnn/inputs/input_time_series.h	/^class InputTimeSeries : public Input<InputTimeSeriesC, InputTimeSeriesState> {$/;"	c	namespace:dnn
InputTimeSeriesC	dnn/inputs/input_time_series.h	/^    InputTimeSeriesC() : dt(1.0) {}$/;"	f	struct:dnn::InputTimeSeriesC
InputTimeSeriesC	dnn/inputs/input_time_series.h	/^struct InputTimeSeriesC : public Serializable<Protos::InputTimeSeriesC> {$/;"	s	namespace:dnn
InputTimeSeriesState	dnn/inputs/input_time_series.h	/^    InputTimeSeriesState() : index(0), _t(0) {}$/;"	f	struct:dnn::InputTimeSeriesState
InputTimeSeriesState	dnn/inputs/input_time_series.h	/^struct InputTimeSeriesState : public Serializable<Protos::InputTimeSeriesState> {$/;"	s	namespace:dnn
Parent	dnn/inputs/input_time_series.h	/^    typedef Input<InputTimeSeriesC, InputTimeSeriesState> Parent;$/;"	t	class:dnn::InputTimeSeries
_t	dnn/inputs/input_time_series.h	/^    double _t;$/;"	m	struct:dnn::InputTimeSeriesState
dnn	dnn/inputs/input_time_series.h	/^namespace dnn {$/;"	n
dt	dnn/inputs/input_time_series.h	/^    double dt;$/;"	m	struct:dnn::InputTimeSeriesC
getDuration	dnn/inputs/input_time_series.h	/^    double getDuration() {$/;"	f	class:dnn::InputTimeSeries
getValue	dnn/inputs/input_time_series.h	/^	const double& getValue(const Time &t) {$/;"	f	class:dnn::InputTimeSeries
index	dnn/inputs/input_time_series.h	/^    size_t index;$/;"	m	struct:dnn::InputTimeSeriesState
name	dnn/inputs/input_time_series.h	/^    const string name() const {$/;"	f	class:dnn::InputTimeSeries
provideInterface	dnn/inputs/input_time_series.h	/^    void provideInterface(InputInterface &i) {$/;"	f	class:dnn::InputTimeSeries
serial_process	dnn/inputs/input_time_series.h	/^    void serial_process() {$/;"	f	struct:dnn::InputTimeSeriesC
serial_process	dnn/inputs/input_time_series.h	/^    void serial_process() {$/;"	f	struct:dnn::InputTimeSeriesState
setTimeSeries	dnn/inputs/input_time_series.h	/^    void setTimeSeries(const string& filename, const string& format) {$/;"	f	class:dnn::InputTimeSeries
ts	dnn/inputs/input_time_series.h	/^    InterfacedPtr<TimeSeries> ts;$/;"	m	class:dnn::InputTimeSeries
dnn	dnn/io/serialize.cpp	/^namespace dnn {$/;"	n	file:
ASSERT_FIELDS	dnn/io/serialize.h	208;"	d
EndMarker	dnn/io/serialize.h	/^    enum EndMarker { end };$/;"	g	class:dnn::SerializableBase
ProcessMode	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	g	class:dnn::SerializableBase
ProcessingInput	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	e	enum:dnn::SerializableBase::ProcessMode
ProcessingOutput	dnn/io/serialize.h	/^    enum ProcessMode { ProcessingInput, ProcessingOutput };$/;"	e	enum:dnn::SerializableBase::ProcessMode
ProtoMessage	dnn/io/serialize.h	/^typedef google::protobuf::Message* ProtoMessage;$/;"	t
ProtoType	dnn/io/serialize.h	/^    typedef Proto ProtoType;$/;"	t	class:dnn::Serializable
ProtoType	dnn/io/serialize.h	/^    typedef Protos::EmptyProto ProtoType;$/;"	t	class:dnn::SerializableBase
Self	dnn/io/serialize.h	/^    typedef Serializable<Proto> Self;$/;"	t	class:dnn::Serializable
Self	dnn/io/serialize.h	/^    typedef SerializableBase Self;$/;"	t	class:dnn::SerializableBase
Serializable	dnn/io/serialize.h	/^class Serializable : public SerializableBase {$/;"	c	namespace:dnn
SerializableBase	dnn/io/serialize.h	/^    SerializableBase() : mode(ProcessingOutput), messages(nullptr), header(nullptr) {$/;"	f	class:dnn::SerializableBase
SerializableBase	dnn/io/serialize.h	/^class SerializableBase  : public Object {$/;"	c	namespace:dnn
addMessage	dnn/io/serialize.h	/^    void addMessage(ProtoMessage m) {$/;"	f	class:dnn::SerializableBase
begin	dnn/io/serialize.h	/^    Serializable& begin() {$/;"	f	class:dnn::Serializable
begin	dnn/io/serialize.h	/^    SerializableBase& begin() {$/;"	f	class:dnn::SerializableBase
clean	dnn/io/serialize.h	/^    void clean() {$/;"	f	class:dnn::SerializableBase
copyM	dnn/io/serialize.h	/^    static ProtoMessage copyM(ProtoMessage m) {$/;"	f	class:dnn::SerializableBase
currentMessage	dnn/io/serialize.h	/^    ProtoMessage currentMessage() {$/;"	f	class:dnn::SerializableBase
deleteCurrentMessage	dnn/io/serialize.h	/^    void deleteCurrentMessage() {$/;"	f	class:dnn::SerializableBase
dnn	dnn/io/serialize.h	/^namespace dnn {$/;"	n
end	dnn/io/serialize.h	/^    enum EndMarker { end };$/;"	e	enum:dnn::SerializableBase::EndMarker
field_descr	dnn/io/serialize.h	/^    const google::protobuf::FieldDescriptor* field_descr;$/;"	m	class:dnn::Serializable
getDeserialized	dnn/io/serialize.h	/^    void getDeserialized(vector<ProtoMessage> &inp_mess) {$/;"	f	class:dnn::SerializableBase
getHeader	dnn/io/serialize.h	/^    Protos::ClassName* getHeader() {$/;"	f	class:dnn::SerializableBase
getHeader	dnn/io/serialize.h	/^    static Protos::ClassName* getHeader(vector<ProtoMessage> &messages) {$/;"	f	class:dnn::SerializableBase
getSerialized	dnn/io/serialize.h	/^    vector<ProtoMessage>& getSerialized() {$/;"	f	class:dnn::SerializableBase
hasProto	dnn/io/serialize.h	/^    static const bool hasProto = false;$/;"	m	class:dnn::SerializableBase
hasProto	dnn/io/serialize.h	/^    static const bool hasProto = true;$/;"	m	class:dnn::Serializable
header	dnn/io/serialize.h	/^    Protos::ClassName *header;$/;"	m	class:dnn::SerializableBase
messages	dnn/io/serialize.h	/^    vector<ProtoMessage> *messages;$/;"	m	class:dnn::SerializableBase
mode	dnn/io/serialize.h	/^    ProcessMode mode;$/;"	m	class:dnn::SerializableBase
name	dnn/io/serialize.h	/^    const string name() const {$/;"	f	class:dnn::Serializable
newProto	dnn/io/serialize.h	/^    ProtoMessage newProto() {$/;"	f	class:dnn::Serializable
newProto	dnn/io/serialize.h	/^    virtual ProtoMessage newProto() {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (bool &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (const char *vraw) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (double &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (int &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (size_t &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (string &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (vector<double> &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (vector<size_t> &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    Serializable& operator << (vector<string> &v) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (InterfacedPtr<T> &b) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (SerializableBase &b) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    SerializableBase& operator << (const char *vraw) {$/;"	f	class:dnn::SerializableBase
operator <<	dnn/io/serialize.h	/^    void operator << (EndMarker e) {$/;"	f	class:dnn::Serializable
operator <<	dnn/io/serialize.h	/^    void operator << (EndMarker e) {$/;"	f	class:dnn::SerializableBase
~SerializableBase	dnn/io/serialize.h	/^    virtual ~SerializableBase() {$/;"	f	class:dnn::SerializableBase
P	dnn/io/stream.cpp	49;"	d	file:
dnn	dnn/io/stream.cpp	/^namespace dnn {$/;"	n	file:
jsonReader	dnn/io/stream.cpp	/^void Stream::jsonReader(string name, const Value &v, vector<ProtoMessage> &messages) {$/;"	f	class:dnn::Stream
protoReader	dnn/io/stream.cpp	/^void Stream::protoReader(vector<ProtoMessage> &messages) {$/;"	f	class:dnn::Stream
readObject	dnn/io/stream.cpp	/^SerializableBase* Stream::readObject() {$/;"	f	class:dnn::Stream
readObjectProtos	dnn/io/stream.cpp	/^vector<ProtoMessage> Stream::readObjectProtos() {$/;"	f	class:dnn::Stream
writeObject	dnn/io/stream.cpp	/^void Stream::writeObject(SerializableBase *b) {$/;"	f	class:dnn::Stream
Binary	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	e	enum:dnn::Stream::Repr
Repr	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	g	class:dnn::Stream
Stream	dnn/io/stream.h	/^    Stream(istream &str, Repr _r = Binary, bool _destroy_stream=false) $/;"	f	class:dnn::Stream
Stream	dnn/io/stream.h	/^    Stream(ostream &str, Repr _r = Binary, bool _destroy_stream=false) $/;"	f	class:dnn::Stream
Stream	dnn/io/stream.h	/^class Stream {$/;"	c	namespace:dnn
Text	dnn/io/stream.h	/^    enum Repr { Binary, Text };$/;"	e	enum:dnn::Stream::Repr
_input_str	dnn/io/stream.h	/^    istream *_input_str;$/;"	m	class:dnn::Stream
_output_str	dnn/io/stream.h	/^    ostream *_output_str;$/;"	m	class:dnn::Stream
codedIn	dnn/io/stream.h	/^    CodedInputStream *codedIn;$/;"	m	class:dnn::Stream
codedOut	dnn/io/stream.h	/^    CodedOutputStream *codedOut;$/;"	m	class:dnn::Stream
destroy_stream	dnn/io/stream.h	/^    bool destroy_stream;$/;"	m	class:dnn::Stream
dnn	dnn/io/stream.h	/^namespace dnn {$/;"	n
document	dnn/io/stream.h	/^    Document document;$/;"	m	class:dnn::Stream
getInputStream	dnn/io/stream.h	/^    istream& getInputStream() {$/;"	f	class:dnn::Stream
getOutputStream	dnn/io/stream.h	/^    ostream& getOutputStream() {$/;"	f	class:dnn::Stream
getRepr	dnn/io/stream.h	/^    Repr getRepr() {$/;"	f	class:dnn::Stream
isInput	dnn/io/stream.h	/^    bool isInput() {$/;"	f	class:dnn::Stream
isOutput	dnn/io/stream.h	/^    bool isOutput() {$/;"	f	class:dnn::Stream
iterator	dnn/io/stream.h	/^    Value::ConstMemberIterator iterator;$/;"	m	class:dnn::Stream
r	dnn/io/stream.h	/^    Repr r;$/;"	m	class:dnn::Stream
readBinaryMessage	dnn/io/stream.h	/^    bool readBinaryMessage(ProtoMessage mess, istream *str) {        $/;"	f	class:dnn::Stream
readObject	dnn/io/stream.h	/^    T* readObject() {$/;"	f	class:dnn::Stream
writeBinaryMessage	dnn/io/stream.h	/^    void writeBinaryMessage(ProtoMessage mess, ostream *str) {$/;"	f	class:dnn::Stream
zeroIn	dnn/io/stream.h	/^    IstreamInputStream *zeroIn;$/;"	m	class:dnn::Stream
zeroOut	dnn/io/stream.h	/^    OstreamOutputStream *zeroOut;$/;"	m	class:dnn::Stream
~Stream	dnn/io/stream.h	/^    ~Stream() {$/;"	f	class:dnn::Stream
Layer	dnn/layers/layer.h	/^class Layer {$/;"	c	namespace:dnn
dnn	dnn/layers/layer.h	/^namespace dnn {$/;"	n
C	dnn/neurons/leaky_integrate_and_fire.h	/^    double C;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
LeakyIntegrateAndFire	dnn/neurons/leaky_integrate_and_fire.h	/^class LeakyIntegrateAndFire : public SpikeNeuron<LeakyIntegrateAndFireC, LeakyIntegrateAndFireState> {$/;"	c	namespace:dnn
LeakyIntegrateAndFireC	dnn/neurons/leaky_integrate_and_fire.h	/^    LeakyIntegrateAndFireC() : R(1.0), C(50.0) {}$/;"	f	struct:dnn::LeakyIntegrateAndFireC
LeakyIntegrateAndFireC	dnn/neurons/leaky_integrate_and_fire.h	/^struct LeakyIntegrateAndFireC : public Serializable<Protos::LeakyIntegrateAndFireC> {$/;"	s	namespace:dnn
LeakyIntegrateAndFireState	dnn/neurons/leaky_integrate_and_fire.h	/^    LeakyIntegrateAndFireState() : p(0.0), u(0.0), fired(false) {}$/;"	f	struct:dnn::LeakyIntegrateAndFireState
LeakyIntegrateAndFireState	dnn/neurons/leaky_integrate_and_fire.h	/^struct LeakyIntegrateAndFireState : public Serializable<Protos::LeakyIntegrateAndFireState>  {$/;"	s	namespace:dnn
R	dnn/neurons/leaky_integrate_and_fire.h	/^    double R;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
calculateDynamics	dnn/neurons/leaky_integrate_and_fire.h	/^    void calculateDynamics(const Time& t) {$/;"	f	class:dnn::LeakyIntegrateAndFire
dnn	dnn/neurons/leaky_integrate_and_fire.h	/^namespace dnn {$/;"	n
fired	dnn/neurons/leaky_integrate_and_fire.h	/^    bool fired;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
getFiringProbability	dnn/neurons/leaky_integrate_and_fire.h	/^    const double& getFiringProbability() {$/;"	f	class:dnn::LeakyIntegrateAndFire
leak	dnn/neurons/leaky_integrate_and_fire.h	/^    double leak;$/;"	m	struct:dnn::LeakyIntegrateAndFireC
name	dnn/neurons/leaky_integrate_and_fire.h	/^    const string name() const {$/;"	f	class:dnn::LeakyIntegrateAndFire
p	dnn/neurons/leaky_integrate_and_fire.h	/^    double p;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
propagateSynapseSpike	dnn/neurons/leaky_integrate_and_fire.h	/^    void propagateSynapseSpike(const SynSpike &sp) {$/;"	f	class:dnn::LeakyIntegrateAndFire
provideInterface	dnn/neurons/leaky_integrate_and_fire.h	/^    void provideInterface(SpikeNeuronInterface &i) {$/;"	f	class:dnn::LeakyIntegrateAndFire
pullFiring	dnn/neurons/leaky_integrate_and_fire.h	/^    bool pullFiring() {$/;"	f	class:dnn::LeakyIntegrateAndFire
reset	dnn/neurons/leaky_integrate_and_fire.h	/^    void reset() {$/;"	f	class:dnn::LeakyIntegrateAndFire
serial_process	dnn/neurons/leaky_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::LeakyIntegrateAndFireC
serial_process	dnn/neurons/leaky_integrate_and_fire.h	/^    void serial_process() {$/;"	f	struct:dnn::LeakyIntegrateAndFireState
u	dnn/neurons/leaky_integrate_and_fire.h	/^    double u;$/;"	m	struct:dnn::LeakyIntegrateAndFireState
dnn	dnn/neurons/spike_neuron.cpp	/^namespace dnn {$/;"	n	file:
global_neuron_index	dnn/neurons/spike_neuron.cpp	/^	size_t global_neuron_index = 0;$/;"	m	namespace:dnn	file:
SpikeNeuron	dnn/neurons/spike_neuron.h	/^class SpikeNeuron : public SpikeNeuronBase {$/;"	c	namespace:dnn
SpikeNeuronBase	dnn/neurons/spike_neuron.h	/^	SpikeNeuronBase() {$/;"	f	class:dnn::SpikeNeuronBase
SpikeNeuronBase	dnn/neurons/spike_neuron.h	/^class SpikeNeuronBase : public SerializableBase {$/;"	c	namespace:dnn
SpikeNeuronInfo	dnn/neurons/spike_neuron.h	/^struct SpikeNeuronInfo : public Serializable<Protos::SpikeNeuronInfo> {$/;"	s	namespace:dnn
SpikeNeuronInterface	dnn/neurons/spike_neuron.h	/^struct SpikeNeuronInterface {$/;"	s	namespace:dnn
__calculateDynamicsDefault	dnn/neurons/spike_neuron.h	/^	static void __calculateDynamicsDefault(const Time &t) {$/;"	f	class:dnn::SpikeNeuronBase
__getFiringProbabilityDefault	dnn/neurons/spike_neuron.h	/^	static const double& __getFiringProbabilityDefault() {$/;"	f	class:dnn::SpikeNeuronBase
__propagateSynapseSpikeDefault	dnn/neurons/spike_neuron.h	/^	static void __propagateSynapseSpikeDefault(const SynSpike &s) {$/;"	f	class:dnn::SpikeNeuronBase
__pullFiringDefault	dnn/neurons/spike_neuron.h	/^	static bool __pullFiringDefault() {$/;"	f	class:dnn::SpikeNeuronBase
_id	dnn/neurons/spike_neuron.h	/^	size_t _id;$/;"	m	class:dnn::SpikeNeuronBase
act_f	dnn/neurons/spike_neuron.h	/^	InterfacedPtr<ActFunctionBase> act_f;$/;"	m	class:dnn::SpikeNeuronBase
act_function_is_set	dnn/neurons/spike_neuron.h	/^	bool act_function_is_set;$/;"	m	struct:dnn::SpikeNeuronInfo
addSynapse	dnn/neurons/spike_neuron.h	/^	void addSynapse(InterfacedPtr<SynapseBase> syn) {$/;"	f	class:dnn::SpikeNeuronBase
axonDelay	dnn/neurons/spike_neuron.h	/^	inline const double& axonDelay() {$/;"	f	class:dnn::SpikeNeuronBase
axon_delay	dnn/neurons/spike_neuron.h	/^	double axon_delay;$/;"	m	class:dnn::SpikeNeuronBase
axon_delay	dnn/neurons/spike_neuron.h	/^	double axon_delay;$/;"	m	struct:dnn::SpikeNeuronInfo
c	dnn/neurons/spike_neuron.h	/^	Constants c;$/;"	m	class:dnn::SpikeNeuron
calculateDynamics	dnn/neurons/spike_neuron.h	/^	calculateDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::SpikeNeuronInterface
dnn	dnn/neurons/spike_neuron.h	/^namespace dnn {$/;"	n
getFiringProbability	dnn/neurons/spike_neuron.h	/^	getDoubleDelegate getFiringProbability;$/;"	m	struct:dnn::SpikeNeuronInterface
getInfo	dnn/neurons/spike_neuron.h	/^	SpikeNeuronInfo getInfo() {$/;"	f	class:dnn::SpikeNeuron
getInput	dnn/neurons/spike_neuron.h	/^	InputBase& getInput() {$/;"	f	class:dnn::SpikeNeuronBase
getSynapses	dnn/neurons/spike_neuron.h	/^	inline vector<InterfacedPtr<SynapseBase>>& getSynapses() {$/;"	f	class:dnn::SpikeNeuronBase
id	dnn/neurons/spike_neuron.h	/^	inline const size_t& id() {$/;"	f	class:dnn::SpikeNeuronBase
id	dnn/neurons/spike_neuron.h	/^	size_t id;$/;"	m	struct:dnn::SpikeNeuronInfo
info	dnn/neurons/spike_neuron.h	/^	SpikeNeuronInfo info;$/;"	m	class:dnn::SpikeNeuron
input	dnn/neurons/spike_neuron.h	/^	InterfacedPtr<InputBase> input;$/;"	m	class:dnn::SpikeNeuronBase
inputIsSet	dnn/neurons/spike_neuron.h	/^	bool inputIsSet() {$/;"	f	class:dnn::SpikeNeuronBase
input_is_set	dnn/neurons/spike_neuron.h	/^	bool input_is_set;$/;"	m	struct:dnn::SpikeNeuronInfo
interface	dnn/neurons/spike_neuron.h	/^	typedef SpikeNeuronInterface interface;$/;"	t	class:dnn::SpikeNeuronBase
num_of_synapses	dnn/neurons/spike_neuron.h	/^	size_t num_of_synapses;$/;"	m	struct:dnn::SpikeNeuronInfo
propagateSynapseSpike	dnn/neurons/spike_neuron.h	/^	propSynSpikeDelegate propagateSynapseSpike;$/;"	m	struct:dnn::SpikeNeuronInterface
provideDefaultInterface	dnn/neurons/spike_neuron.h	/^	static void provideDefaultInterface(SpikeNeuronInterface &i) {$/;"	f	class:dnn::SpikeNeuronBase
pullFiring	dnn/neurons/spike_neuron.h	/^	getBoolCopyDelegate pullFiring;$/;"	m	struct:dnn::SpikeNeuronInterface
s	dnn/neurons/spike_neuron.h	/^	State s;$/;"	m	class:dnn::SpikeNeuron
serial_process	dnn/neurons/spike_neuron.h	/^	void serial_process() {$/;"	f	class:dnn::SpikeNeuron
serial_process	dnn/neurons/spike_neuron.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikeNeuronInfo
setActFunction	dnn/neurons/spike_neuron.h	/^	void setActFunction(ActFunctionBase *_act_f) { act_f.set(_act_f); }$/;"	f	class:dnn::SpikeNeuronBase
setAxonDelay	dnn/neurons/spike_neuron.h	/^	void setAxonDelay(double d) {$/;"	f	class:dnn::SpikeNeuronBase
setInput	dnn/neurons/spike_neuron.h	/^	void setInput(InputBase *_input) { input.set(_input); }$/;"	f	class:dnn::SpikeNeuronBase
stat	dnn/neurons/spike_neuron.h	/^	Statistics stat;$/;"	m	class:dnn::SpikeNeuronBase
syns	dnn/neurons/spike_neuron.h	/^	vector<InterfacedPtr<SynapseBase>> syns;$/;"	m	class:dnn::SpikeNeuronBase
Builder	dnn/sim/builder.h	/^	Builder(const Constants &_c) : c(_c), input_stream(nullptr) {$/;"	f	class:dnn::Builder
Builder	dnn/sim/builder.h	/^class Builder {$/;"	c	namespace:dnn
Layer	dnn/sim/builder.h	/^	struct Layer {$/;"	s	class:dnn::Builder
buildNeurons	dnn/sim/builder.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> buildNeurons() {$/;"	f	class:dnn::Builder
buildObjectFromConstants	dnn/sim/builder.h	/^	static T* buildObjectFromConstants(const string &name, const map<string, string> &object_const_map) {$/;"	f	class:dnn::Builder
c	dnn/sim/builder.h	/^	const Constants &c;$/;"	m	class:dnn::Builder
connectLayers	dnn/sim/builder.h	/^	void connectLayers(Layer &pre, Layer &post, const string &conn_conf_s) {$/;"	f	class:dnn::Builder
dnn	dnn/sim/builder.h	/^namespace dnn {$/;"	n
input_stream	dnn/sim/builder.h	/^	Stream *input_stream;$/;"	m	class:dnn::Builder
neurons	dnn/sim/builder.h	/^		vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	struct:dnn::Builder::Layer
setInputModelStream	dnn/sim/builder.h	/^	void setInputModelStream(Stream *s) {$/;"	f	class:dnn::Builder
Layer	dnn/sim/layer.h	/^struct Layer {$/;"	s
neurons	dnn/sim/layer.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	struct:Layer
Conn	dnn/sim/network.h	/^	Conn(size_t _n_id, size_t _syn_id) : n_id(_n_id), syn_id(_syn_id) {}$/;"	f	class:dnn::Conn
Conn	dnn/sim/network.h	/^class Conn : public Printable {$/;"	c	namespace:dnn
Network	dnn/sim/network.h	/^	Network(vector<InterfacedPtr<SpikeNeuronBase>>& neurons) {$/;"	f	class:dnn::Network
Network	dnn/sim/network.h	/^class Network : public Printable {$/;"	c	namespace:dnn
conn_map	dnn/sim/network.h	/^	vector<vector<Conn>> conn_map;$/;"	m	class:dnn::Network
dnn	dnn/sim/network.h	/^namespace dnn {$/;"	n
n_id	dnn/sim/network.h	/^	size_t n_id;$/;"	m	class:dnn::Conn
print	dnn/sim/network.h	/^	void print(std::ostream &str) const {$/;"	f	class:dnn::Network
print	dnn/sim/network.h	/^	void print(std::ostream& str) const {$/;"	f	class:dnn::Conn
spikes_list	dnn/sim/network.h	/^	SpikesList spikes_list;$/;"	m	class:dnn::Network
syn_id	dnn/sim/network.h	/^	size_t syn_id;$/;"	m	class:dnn::Conn
Sim	dnn/sim/sim.h	/^	Sim(const Constants &_c) : c(_c), duration(0.0) {$/;"	f	class:dnn::Sim
Sim	dnn/sim/sim.h	/^class Sim {$/;"	c	namespace:dnn
build	dnn/sim/sim.h	/^	void build(Stream* input_stream = nullptr) {$/;"	f	class:dnn::Sim
c	dnn/sim/sim.h	/^	const Constants &c;$/;"	m	class:dnn::Sim
dnn	dnn/sim/sim.h	/^namespace dnn {$/;"	n
duration	dnn/sim/sim.h	/^	double duration;$/;"	m	class:dnn::Sim
net	dnn/sim/sim.h	/^	uptr<Network> net;$/;"	m	class:dnn::Sim
neurons	dnn/sim/sim.h	/^	vector<InterfacedPtr<SpikeNeuronBase>> neurons;$/;"	m	class:dnn::Sim
run	dnn/sim/sim.h	/^	void run(size_t jobs) {$/;"	f	class:dnn::Sim
runWorker	dnn/sim/sim.h	/^	static void runWorker(Sim &s, size_t from, size_t to, SpinningBarrier &barrier) {$/;"	f	class:dnn::Sim
saveStat	dnn/sim/sim.h	/^	void saveStat(Stream &str) {$/;"	f	class:dnn::Sim
serialize	dnn/sim/sim.h	/^	void serialize(Stream &output_stream) {$/;"	f	class:dnn::Sim
StaticSynapse	dnn/synapses/static_synapse.h	/^class StaticSynapse : public Synapse<StaticSynapseC, StaticSynapseState> {$/;"	c	namespace:dnn
StaticSynapseC	dnn/synapses/static_synapse.h	/^    StaticSynapseC() : psp_decay(15.0), amp(1.0) {}$/;"	f	struct:dnn::StaticSynapseC
StaticSynapseC	dnn/synapses/static_synapse.h	/^struct StaticSynapseC : public Serializable<Protos::StaticSynapseC>  {$/;"	s	namespace:dnn
StaticSynapseState	dnn/synapses/static_synapse.h	/^    StaticSynapseState() : x(0.0) {}$/;"	f	struct:dnn::StaticSynapseState
StaticSynapseState	dnn/synapses/static_synapse.h	/^struct StaticSynapseState : public Serializable<Protos::StaticSynapseState>  {$/;"	s	namespace:dnn
amp	dnn/synapses/static_synapse.h	/^    double amp;$/;"	m	struct:dnn::StaticSynapseC
calculateDynamics	dnn/synapses/static_synapse.h	/^    void calculateDynamics(const Time &t) {$/;"	f	class:dnn::StaticSynapse
dnn	dnn/synapses/static_synapse.h	/^namespace dnn {$/;"	n
getMembranePotential	dnn/synapses/static_synapse.h	/^    const double& getMembranePotential() {$/;"	f	class:dnn::StaticSynapse
name	dnn/synapses/static_synapse.h	/^    const string name() const {$/;"	f	class:dnn::StaticSynapse
propagateSpike	dnn/synapses/static_synapse.h	/^    void propagateSpike() {$/;"	f	class:dnn::StaticSynapse
provideInterface	dnn/synapses/static_synapse.h	/^    void provideInterface(SynapseInterface &i) {$/;"	f	class:dnn::StaticSynapse
psp_decay	dnn/synapses/static_synapse.h	/^    double psp_decay;$/;"	m	struct:dnn::StaticSynapseC
serial_process	dnn/synapses/static_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::StaticSynapseC
serial_process	dnn/synapses/static_synapse.h	/^    void serial_process() {$/;"	f	struct:dnn::StaticSynapseState
x	dnn/synapses/static_synapse.h	/^    double x;$/;"	m	struct:dnn::StaticSynapseState
Synapse	dnn/synapses/synapse.h	/^class Synapse : public SynapseBase {$/;"	c	namespace:dnn
SynapseBase	dnn/synapses/synapse.h	/^class SynapseBase : public SerializableBase {$/;"	c	namespace:dnn
SynapseInfo	dnn/synapses/synapse.h	/^struct SynapseInfo : public Serializable<Protos::SynapseInfo> {$/;"	s	namespace:dnn
SynapseInterface	dnn/synapses/synapse.h	/^struct SynapseInterface {$/;"	s	namespace:dnn
c	dnn/synapses/synapse.h	/^	Constants c;$/;"	m	class:dnn::Synapse
calculateDynamics	dnn/synapses/synapse.h	/^	calculateDynamicsDelegate calculateDynamics;$/;"	m	struct:dnn::SynapseInterface
dendrite_delay	dnn/synapses/synapse.h	/^	double dendrite_delay;$/;"	m	class:dnn::SynapseBase
dendrite_delay	dnn/synapses/synapse.h	/^	double dendrite_delay;$/;"	m	struct:dnn::SynapseInfo
dnn	dnn/synapses/synapse.h	/^namespace dnn {$/;"	n
getIdPre	dnn/synapses/synapse.h	/^	inline const size_t& getIdPre() { $/;"	f	class:dnn::SynapseBase
getInfo	dnn/synapses/synapse.h	/^	SynapseInfo getInfo() {$/;"	f	class:dnn::Synapse
getMembranePotential	dnn/synapses/synapse.h	/^	getDoubleDelegate getMembranePotential;$/;"	m	struct:dnn::SynapseInterface
id_pre	dnn/synapses/synapse.h	/^	size_t id_pre;$/;"	m	class:dnn::SynapseBase
id_pre	dnn/synapses/synapse.h	/^	size_t id_pre;$/;"	m	struct:dnn::SynapseInfo
interface	dnn/synapses/synapse.h	/^	typedef SynapseInterface interface;$/;"	t	class:dnn::SynapseBase
propagateSpike	dnn/synapses/synapse.h	/^	stateDelegate propagateSpike;$/;"	m	struct:dnn::SynapseInterface
provideDefaultInterface	dnn/synapses/synapse.h	/^	static void provideDefaultInterface(SynapseInterface &i) {$/;"	f	class:dnn::SynapseBase
s	dnn/synapses/synapse.h	/^	State s;$/;"	m	class:dnn::Synapse
serial_process	dnn/synapses/synapse.h	/^	void serial_process() {$/;"	f	class:dnn::Synapse
serial_process	dnn/synapses/synapse.h	/^	void serial_process() {$/;"	f	struct:dnn::SynapseInfo
setDendriteDelay	dnn/synapses/synapse.h	/^	void setDendriteDelay(double _dendrite_delay) {$/;"	f	class:dnn::SynapseBase
setIdPre	dnn/synapses/synapse.h	/^	void setIdPre(size_t _id_pre) {$/;"	f	class:dnn::SynapseBase
setWeight	dnn/synapses/synapse.h	/^	void setWeight(double w) {$/;"	f	class:dnn::SynapseBase
weight	dnn/synapses/synapse.h	/^	double weight;$/;"	m	class:dnn::SynapseBase
weight	dnn/synapses/synapse.h	/^	double weight;$/;"	m	struct:dnn::SynapseInfo
Barrier	dnn/util/barrier.h	/^    explicit Barrier(std::size_t count) : _count{count} { }$/;"	f	class:Barrier
Barrier	dnn/util/barrier.h	/^class Barrier$/;"	c
_count	dnn/util/barrier.h	/^    std::size_t _count;$/;"	m	class:Barrier
_cv	dnn/util/barrier.h	/^    std::condition_variable _cv;$/;"	m	class:Barrier
_mutex	dnn/util/barrier.h	/^    std::mutex _mutex;$/;"	m	class:Barrier
wait	dnn/util/barrier.h	/^    void wait()$/;"	f	class:Barrier
Distribution	dnn/util/distributions.h	/^class Distribution : public Printable {$/;"	c	namespace:dnn
ExpDistribution	dnn/util/distributions.h	/^    ExpDistribution(double _gain, double _rate) : gain(_gain), rate(_rate) {}$/;"	f	class:dnn::ExpDistribution
ExpDistribution	dnn/util/distributions.h	/^class ExpDistribution : public Distribution<double> {$/;"	c	namespace:dnn
NormalDistribution	dnn/util/distributions.h	/^    NormalDistribution(double _mu, double _sigma) : mu(_mu), sigma(_sigma) {}$/;"	f	class:dnn::NormalDistribution
NormalDistribution	dnn/util/distributions.h	/^class NormalDistribution : public Distribution<double> {$/;"	c	namespace:dnn
UniformDistribution	dnn/util/distributions.h	/^    UniformDistribution(double _from, double _to) : from(_from), to(_to) {}$/;"	f	class:dnn::UniformDistribution
UniformDistribution	dnn/util/distributions.h	/^class UniformDistribution : public Distribution<double> {$/;"	c	namespace:dnn
dnn	dnn/util/distributions.h	/^namespace dnn {$/;"	n
from	dnn/util/distributions.h	/^    double from;$/;"	m	class:dnn::UniformDistribution
gain	dnn/util/distributions.h	/^    double gain;$/;"	m	class:dnn::ExpDistribution
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::ExpDistribution
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::NormalDistribution
getSample	dnn/util/distributions.h	/^    double getSample() {$/;"	f	class:dnn::UniformDistribution
mu	dnn/util/distributions.h	/^    double mu;$/;"	m	class:dnn::NormalDistribution
parseDistribution	dnn/util/distributions.h	/^uptr<Distribution<T>> parseDistribution(const string &str_init) {$/;"	f	namespace:dnn
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::ExpDistribution
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::NormalDistribution
print	dnn/util/distributions.h	/^    void print(std::ostream& str) const {$/;"	f	class:dnn::UniformDistribution
rate	dnn/util/distributions.h	/^    double rate;$/;"	m	class:dnn::ExpDistribution
sigma	dnn/util/distributions.h	/^    double sigma;$/;"	m	class:dnn::NormalDistribution
to	dnn/util/distributions.h	/^    double to;$/;"	m	class:dnn::UniformDistribution
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate0 < R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate1 < Param1, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate2 < Param1, Param2, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate3 < Param1, Param2, Param3, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate4 < Param1, Param2, Param3, Param4, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate5 < Param1, Param2, Param3, Param4, Param5, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate6 < Param1, Param2, Param3, Param4, Param5, Param6, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate7 < Param1, Param2, Param3, Param4, Param5, Param6, Param7, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
BaseType	dnn/util/fast_delegate.h	/^  typedef FastDelegate8 < Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, R > BaseType;$/;"	t	class:fastdelegate::FastDelegate
ClosurePtr	dnn/util/fast_delegate.h	/^class ClosurePtr : public DelegateMemento {$/;"	c	namespace:fastdelegate::detail
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate0
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate1
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate2
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate3
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate4
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate5
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate6
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate7
ClosureType	dnn/util/fast_delegate.h	/^	typedef detail::ClosurePtr<GenericMemFn, StaticFunctionPtr, UnvoidStaticFunctionPtr> ClosureType;$/;"	t	class:fastdelegate::FastDelegate8
Convert	dnn/util/fast_delegate.h	/^	inline static GenericClass *Convert(X *pthis, XFuncType function_to_bind,$/;"	f	struct:fastdelegate::detail::SimplifyMemFunc
CopyFrom	dnn/util/fast_delegate.h	/^	inline void CopyFrom (DerivedClass *pParent, const DelegateMemento &right) {$/;"	f	class:fastdelegate::detail::ClosurePtr
CopyFrom	dnn/util/fast_delegate.h	/^	inline void CopyFrom (DerivedClass *pParent, const DelegateMemento &x) {$/;"	f	class:fastdelegate::detail::ClosurePtr
DefaultVoid	dnn/util/fast_delegate.h	/^typedef const void * DefaultVoid;$/;"	t	namespace:fastdelegate::detail
DefaultVoid	dnn/util/fast_delegate.h	/^typedef void DefaultVoid;$/;"	t	namespace:fastdelegate::detail
DefaultVoidToVoid	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid { typedef T type; };$/;"	s	namespace:fastdelegate::detail
DefaultVoidToVoid	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid<DefaultVoid> {	typedef void type; };$/;"	s	namespace:fastdelegate::detail
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento (const DelegateMemento &right)  :$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento() : m_pthis(0), m_pFunction(0) {};$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^	DelegateMemento() : m_pthis(0), m_pFunction(0), m_pStaticFunction(0) {};$/;"	f	class:fastdelegate::DelegateMemento
DelegateMemento	dnn/util/fast_delegate.h	/^class DelegateMemento {$/;"	c	namespace:fastdelegate
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate0
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate1
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate2
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate3
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate4
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate5
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate6
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate7
DesiredRetType	dnn/util/fast_delegate.h	/^	typedef typename detail::DefaultVoidToVoid<RetType>::type DesiredRetType;$/;"	t	class:fastdelegate::FastDelegate8
FASTDELEGATEDECLARE	dnn/util/fast_delegate.h	191;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	105;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	110;"	d
FASTDELEGATE_ALLOW_FUNCTION_TYPE_SYNTAX	dnn/util/fast_delegate.h	115;"	d
FASTDELEGATE_GCC_BUG_8271	dnn/util/fast_delegate.h	120;"	d
FASTDELEGATE_H	dnn/util/fast_delegate.h	49;"	d
FASTDELEGATE_USESTATICFUNCTIONHACK	dnn/util/fast_delegate.h	195;"	d
FASTDELEGATE_USESTATICFUNCTIONHACK	dnn/util/fast_delegate.h	67;"	d
FASTDLGT_HASINHERITANCE_KEYWORDS	dnn/util/fast_delegate.h	99;"	d
FASTDLGT_ISMSVC	dnn/util/fast_delegate.h	81;"	d
FASTDLGT_MICROSOFT_MFP	dnn/util/fast_delegate.h	95;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	1997;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	1999;"	d
FASTDLGT_RETTYPE	dnn/util/fast_delegate.h	2103;"	d
FASTDLGT_VC6	dnn/util/fast_delegate.h	84;"	d
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate() : BaseType() { }$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)(  ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(R (*function_to_bind)( Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8 ))$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(Y * pthis,$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^  FastDelegate(const Y *pthis,$/;"	f	class:fastdelegate::FastDelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R (  ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6, Param7 ) >$/;"	c	namespace:fastdelegate
FastDelegate	dnn/util/fast_delegate.h	/^class FastDelegate< R ( Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8 ) >$/;"	c	namespace:fastdelegate
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0() { clear(); }$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(DesiredRetType (*function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(Y *pthis, DesiredRetType (X::* function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(const FastDelegate0 &x) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^	FastDelegate0(const Y *pthis, DesiredRetType (X::* function_to_bind)() const) {$/;"	f	class:fastdelegate::FastDelegate0
FastDelegate0	dnn/util/fast_delegate.h	/^class FastDelegate0 {$/;"	c	namespace:fastdelegate
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1() { clear(); }$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(DesiredRetType (*function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(const FastDelegate1 &x) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^	FastDelegate1(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) const) {$/;"	f	class:fastdelegate::FastDelegate1
FastDelegate1	dnn/util/fast_delegate.h	/^class FastDelegate1 {$/;"	c	namespace:fastdelegate
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2() { clear(); }$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(const FastDelegate2 &x) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^	FastDelegate2(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) const) {$/;"	f	class:fastdelegate::FastDelegate2
FastDelegate2	dnn/util/fast_delegate.h	/^class FastDelegate2 {$/;"	c	namespace:fastdelegate
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3() { clear(); }$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(const FastDelegate3 &x) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^	FastDelegate3(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	class:fastdelegate::FastDelegate3
FastDelegate3	dnn/util/fast_delegate.h	/^class FastDelegate3 {$/;"	c	namespace:fastdelegate
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4() { clear(); }$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(const FastDelegate4 &x) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^	FastDelegate4(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	class:fastdelegate::FastDelegate4
FastDelegate4	dnn/util/fast_delegate.h	/^class FastDelegate4 {$/;"	c	namespace:fastdelegate
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5() { clear(); }$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(const FastDelegate5 &x) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^	FastDelegate5(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	class:fastdelegate::FastDelegate5
FastDelegate5	dnn/util/fast_delegate.h	/^class FastDelegate5 {$/;"	c	namespace:fastdelegate
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6() { clear(); }$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(const FastDelegate6 &x) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^	FastDelegate6(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	class:fastdelegate::FastDelegate6
FastDelegate6	dnn/util/fast_delegate.h	/^class FastDelegate6 {$/;"	c	namespace:fastdelegate
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7() { clear(); }$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(const FastDelegate7 &x) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^	FastDelegate7(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	class:fastdelegate::FastDelegate7
FastDelegate7	dnn/util/fast_delegate.h	/^class FastDelegate7 {$/;"	c	namespace:fastdelegate
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8() { clear(); }$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(const FastDelegate8 &x) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^	FastDelegate8(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	class:fastdelegate::FastDelegate8
FastDelegate8	dnn/util/fast_delegate.h	/^class FastDelegate8 {$/;"	c	namespace:fastdelegate
GenericClass	dnn/util/fast_delegate.h	/^	class GenericClass {};$/;"	c	namespace:fastdelegate::detail
GenericClass	dnn/util/fast_delegate.h	/^	class __single_inheritance GenericClass;$/;"	m	namespace:fastdelegate::detail	typeref:class:fastdelegate::detail::__single_inheritance
GenericFuncPtr	dnn/util/fast_delegate.h	/^	typedef void (*GenericFuncPtr)(); \/\/ arbitrary code pointer$/;"	t	class:fastdelegate::DelegateMemento
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)();$/;"	t	class:fastdelegate::FastDelegate0
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
GenericMemFn	dnn/util/fast_delegate.h	/^	typedef RetType (detail::GenericClass::*GenericMemFn)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
GenericMemFuncType	dnn/util/fast_delegate.h	/^	typedef void (detail::GenericClass::*GenericMemFuncType)(); \/\/ arbitrary MFP.$/;"	t	class:fastdelegate::DelegateMemento
GenericVirtualClass	dnn/util/fast_delegate.h	/^struct GenericVirtualClass : virtual public GenericClass$/;"	s	namespace:fastdelegate::detail
GetClosureMemPtr	dnn/util/fast_delegate.h	/^	inline GenericMemFunc GetClosureMemPtr() const { return reinterpret_cast<GenericMemFunc>(m_pFunction); }$/;"	f	class:fastdelegate::detail::ClosurePtr
GetClosureThis	dnn/util/fast_delegate.h	/^	inline GenericClass *GetClosureThis() const { return m_pthis; }$/;"	f	class:fastdelegate::detail::ClosurePtr
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate0
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate1
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate2
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate3
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate4
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate5
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate6
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate7
GetMemento	dnn/util/fast_delegate.h	/^	const DelegateMemento & GetMemento() { return m_Closure; }$/;"	f	class:fastdelegate::FastDelegate8
GetStaticFunction	dnn/util/fast_delegate.h	/^	inline UnvoidStaticFuncPtr GetStaticFunction() const {$/;"	f	class:fastdelegate::detail::ClosurePtr
GetThis	dnn/util/fast_delegate.h	/^	GenericVirtualClass * GetThis() { return this; }$/;"	f	struct:fastdelegate::detail::GenericVirtualClass
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction() const {$/;"	f	class:fastdelegate::FastDelegate0
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1) const {$/;"	f	class:fastdelegate::FastDelegate1
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2) const {$/;"	f	class:fastdelegate::FastDelegate2
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3) const {$/;"	f	class:fastdelegate::FastDelegate3
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const {$/;"	f	class:fastdelegate::FastDelegate4
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const {$/;"	f	class:fastdelegate::FastDelegate5
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const {$/;"	f	class:fastdelegate::FastDelegate6
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const {$/;"	f	class:fastdelegate::FastDelegate7
InvokeStaticFunction	dnn/util/fast_delegate.h	/^	RetType InvokeStaticFunction(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const {$/;"	f	class:fastdelegate::FastDelegate8
IsEqual	dnn/util/fast_delegate.h	/^	inline bool IsEqual (const DelegateMemento &x) const{$/;"	f	class:fastdelegate::DelegateMemento
IsEqualToStaticFuncPtr	dnn/util/fast_delegate.h	/^	inline bool IsEqualToStaticFuncPtr(StaticFuncPtr funcptr){$/;"	f	class:fastdelegate::detail::ClosurePtr
IsLess	dnn/util/fast_delegate.h	/^	inline bool IsLess(const DelegateMemento &right) const {$/;"	f	class:fastdelegate::DelegateMemento
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate0<FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)() const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate0<FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)()) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate1<Param1, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate1<Param1, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate2<Param1, Param2, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate3<Param1, Param2, Param3, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate3<Param1, Param2, Param3, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate4<Param1, Param2, Param3, Param4, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate4<Param1, Param2, Param3, Param4, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate5<Param1, Param2, Param3, Param4, Param5, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate5<Param1, Param2, Param3, Param4, Param5, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate6<Param1, Param2, Param3, Param4, Param5, Param6, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate6<Param1, Param2, Param3, Param4, Param5, Param6, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate7<Param1, Param2, Param3, Param4, Param5, Param6, Param7, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate7<Param1, Param2, Param3, Param4, Param5, Param6, Param7, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate8<Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	namespace:fastdelegate
MakeDelegate	dnn/util/fast_delegate.h	/^FastDelegate8<Param1, Param2, Param3, Param4, Param5, Param6, Param7, Param8, FASTDLGT_RETTYPE> MakeDelegate(Y* x, RetType (X::*func)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	namespace:fastdelegate
MicrosoftVirtualMFP	dnn/util/fast_delegate.h	/^struct MicrosoftVirtualMFP {$/;"	s	namespace:fastdelegate::detail
ProbePtrType	dnn/util/fast_delegate.h	/^	typedef GenericVirtualClass * (GenericVirtualClass::*ProbePtrType)();$/;"	t	struct:fastdelegate::detail::GenericVirtualClass
SINGLE_MEMFUNCPTR_SIZE	dnn/util/fast_delegate.h	/^const int SINGLE_MEMFUNCPTR_SIZE = sizeof(void (GenericClass::*)());$/;"	m	namespace:fastdelegate::detail
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate0
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate1
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate2
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate3
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate4
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate5
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate6
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate7
SafeBoolStruct	dnn/util/fast_delegate.h	/^	typedef struct SafeBoolStruct {$/;"	s	class:fastdelegate::FastDelegate8
SelfType	dnn/util/fast_delegate.h	/^  typedef FastDelegate SelfType;$/;"	t	class:fastdelegate::FastDelegate
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate0
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate1
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate2
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate3
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate4
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate5
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate6
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate7
SetMemento	dnn/util/fast_delegate.h	/^	void SetMemento(const DelegateMemento &any) { m_Closure.CopyFrom(this, any); }$/;"	f	class:fastdelegate::FastDelegate8
SetMementoFrom	dnn/util/fast_delegate.h	/^	void SetMementoFrom(const DelegateMemento &right)  {$/;"	f	class:fastdelegate::DelegateMemento
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc {$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc< SINGLE_MEMFUNCPTR_SIZE + sizeof(int) >  {$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE + 2*sizeof(int) >$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE + 3*sizeof(int) >$/;"	s	namespace:fastdelegate::detail
SimplifyMemFunc	dnn/util/fast_delegate.h	/^struct SimplifyMemFunc<SINGLE_MEMFUNCPTR_SIZE>  {$/;"	s	namespace:fastdelegate::detail
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)();$/;"	t	class:fastdelegate::FastDelegate0
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
StaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef DesiredRetType (*StaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)();$/;"	t	class:fastdelegate::FastDelegate0
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1);$/;"	t	class:fastdelegate::FastDelegate1
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2);$/;"	t	class:fastdelegate::FastDelegate2
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3);$/;"	t	class:fastdelegate::FastDelegate3
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4);$/;"	t	class:fastdelegate::FastDelegate4
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5);$/;"	t	class:fastdelegate::FastDelegate5
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6);$/;"	t	class:fastdelegate::FastDelegate6
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7);$/;"	t	class:fastdelegate::FastDelegate7
UnvoidStaticFunctionPtr	dnn/util/fast_delegate.h	/^	typedef RetType (*UnvoidStaticFunctionPtr)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8);$/;"	t	class:fastdelegate::FastDelegate8
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate0	typeref:struct:fastdelegate::FastDelegate0::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate1	typeref:struct:fastdelegate::FastDelegate1::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate2	typeref:struct:fastdelegate::FastDelegate2::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate3	typeref:struct:fastdelegate::FastDelegate3::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate4	typeref:struct:fastdelegate::FastDelegate4::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate5	typeref:struct:fastdelegate::FastDelegate5::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate6	typeref:struct:fastdelegate::FastDelegate6::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate7	typeref:struct:fastdelegate::FastDelegate7::SafeBoolStruct
UselessTypedef	dnn/util/fast_delegate.h	/^	} UselessTypedef;$/;"	t	class:fastdelegate::FastDelegate8	typeref:struct:fastdelegate::FastDelegate8::SafeBoolStruct
VoidToDefaultVoid	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid { typedef T type; };$/;"	s	namespace:fastdelegate::detail
VoidToDefaultVoid	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid<void> { typedef DefaultVoid type; };$/;"	s	namespace:fastdelegate::detail
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate0::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate1::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate2::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate3::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate4::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate5::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate6::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate7::SafeBoolStruct
a_data_pointer_to_this_is_0_on_buggy_compilers	dnn/util/fast_delegate.h	/^		int a_data_pointer_to_this_is_0_on_buggy_compilers;$/;"	m	struct:fastdelegate::FastDelegate8::SafeBoolStruct
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)()) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1)) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2)) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	class:fastdelegate::FastDelegate8
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)()) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1)) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2)) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3)) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4)) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5)) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6)) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7)) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8)) {$/;"	f	class:fastdelegate::FastDelegate8
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)() const) {$/;"	f	class:fastdelegate::FastDelegate0
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1) const) {$/;"	f	class:fastdelegate::FastDelegate1
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2) const) {$/;"	f	class:fastdelegate::FastDelegate2
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3) const) {$/;"	f	class:fastdelegate::FastDelegate3
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) const) {$/;"	f	class:fastdelegate::FastDelegate4
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const) {$/;"	f	class:fastdelegate::FastDelegate5
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const) {$/;"	f	class:fastdelegate::FastDelegate6
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const) {$/;"	f	class:fastdelegate::FastDelegate7
bind	dnn/util/fast_delegate.h	/^	inline void bind(const Y *pthis, DesiredRetType (X::* function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const) {$/;"	f	class:fastdelegate::FastDelegate8
bindconstmemfunc	dnn/util/fast_delegate.h	/^	inline void bindconstmemfunc(const X *pthis, XMemFunc function_to_bind) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindmemfunc	dnn/util/fast_delegate.h	/^	inline void bindmemfunc(X *pthis, XMemFunc function_to_bind ) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindmemfunc	dnn/util/fast_delegate.h	/^	inline void bindmemfunc(const X *pthis, XMemFunc function_to_bind) {$/;"	f	class:fastdelegate::detail::ClosurePtr
bindstaticfunc	dnn/util/fast_delegate.h	/^	inline void bindstaticfunc(DerivedClass *pParent, ParentInvokerSig static_function_invoker,$/;"	f	class:fastdelegate::detail::ClosurePtr
clear	dnn/util/fast_delegate.h	/^	void clear() {	m_pthis=0; m_pFunction=0;	}$/;"	f	class:fastdelegate::DelegateMemento
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate0
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate1
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate2
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate3
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate4
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate5
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate6
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate7
clear	dnn/util/fast_delegate.h	/^	void clear() { m_Closure.clear();}$/;"	f	class:fastdelegate::FastDelegate8
clear	dnn/util/fast_delegate.h	/^	void clear() {$/;"	f	class:fastdelegate::DelegateMemento
codeptr	dnn/util/fast_delegate.h	/^	void (GenericClass::*codeptr)(); \/\/ points to the actual member function$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
delta	dnn/util/fast_delegate.h	/^	int delta;		\/\/ #bytes to be added to the 'this' pointer$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
detail	dnn/util/fast_delegate.h	/^namespace detail {	\/\/ we'll hide the implementation details in a nested namespace.$/;"	n	namespace:fastdelegate
detail	dnn/util/fast_delegate.h	/^namespace detail {$/;"	n	namespace:fastdelegate
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const		\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::DelegateMemento
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate0
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate1
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate2
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate3
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate4
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate5
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate6
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate7
empty	dnn/util/fast_delegate.h	/^	inline bool empty() const	{$/;"	f	class:fastdelegate::FastDelegate8
fastdelegate	dnn/util/fast_delegate.h	/^namespace fastdelegate {$/;"	n
horrible_cast	dnn/util/fast_delegate.h	/^inline OutputClass horrible_cast(const InputClass input){$/;"	f	namespace:fastdelegate::detail
horrible_union	dnn/util/fast_delegate.h	/^union horrible_union{$/;"	u	namespace:fastdelegate::detail
implicit_cast	dnn/util/fast_delegate.h	/^inline OutputClass implicit_cast(InputClass input){$/;"	f	namespace:fastdelegate::detail
in	dnn/util/fast_delegate.h	/^	InputClass in;$/;"	m	union:fastdelegate::detail::horrible_union
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate0
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate1
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate2
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate3
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate4
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate5
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate6
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate7
m_Closure	dnn/util/fast_delegate.h	/^	ClosureType m_Closure;$/;"	m	class:fastdelegate::FastDelegate8
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate0::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate1::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate2::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate3::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate4::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate5::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate6::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate7::SafeBoolStruct
m_nonzero	dnn/util/fast_delegate.h	/^		StaticFunctionPtr m_nonzero;$/;"	m	struct:fastdelegate::FastDelegate8::SafeBoolStruct
m_pFunction	dnn/util/fast_delegate.h	/^	GenericMemFuncType m_pFunction;$/;"	m	class:fastdelegate::DelegateMemento
m_pStaticFunction	dnn/util/fast_delegate.h	/^	GenericFuncPtr m_pStaticFunction;$/;"	m	class:fastdelegate::DelegateMemento
m_pthis	dnn/util/fast_delegate.h	/^	detail::GenericClass *m_pthis;$/;"	m	class:fastdelegate::DelegateMemento
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const		\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::DelegateMemento
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate0
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate1
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate2
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate3
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate4
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate5
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate6
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate7
operator !	dnn/util/fast_delegate.h	/^	inline bool operator ! () const	{	\/\/ Is it bound to anything?$/;"	f	class:fastdelegate::FastDelegate8
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator !=	dnn/util/fast_delegate.h	/^	bool operator !=(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate0
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate1
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate2
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate3
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate4
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate5
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate6
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate7
operator !=	dnn/util/fast_delegate.h	/^	inline bool operator!=(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate8
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() () const {$/;"	f	class:fastdelegate::FastDelegate0
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1) const {$/;"	f	class:fastdelegate::FastDelegate1
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2) const {$/;"	f	class:fastdelegate::FastDelegate2
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3) const {$/;"	f	class:fastdelegate::FastDelegate3
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4) const {$/;"	f	class:fastdelegate::FastDelegate4
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) const {$/;"	f	class:fastdelegate::FastDelegate5
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) const {$/;"	f	class:fastdelegate::FastDelegate6
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) const {$/;"	f	class:fastdelegate::FastDelegate7
operator ()	dnn/util/fast_delegate.h	/^	RetType operator() (Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) const {$/;"	f	class:fastdelegate::FastDelegate8
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator <	dnn/util/fast_delegate.h	/^	bool operator <(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator <	dnn/util/fast_delegate.h	/^	inline bool operator <(const DelegateMemento &right) {$/;"	f	class:fastdelegate::DelegateMemento
operator =	dnn/util/fast_delegate.h	/^	DelegateMemento & operator = (const DelegateMemento &right)  {$/;"	f	class:fastdelegate::DelegateMemento
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)() ) {$/;"	f	class:fastdelegate::FastDelegate0
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1) ) {$/;"	f	class:fastdelegate::FastDelegate1
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2) ) {$/;"	f	class:fastdelegate::FastDelegate2
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3) ) {$/;"	f	class:fastdelegate::FastDelegate3
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4) ) {$/;"	f	class:fastdelegate::FastDelegate4
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5) ) {$/;"	f	class:fastdelegate::FastDelegate5
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6) ) {$/;"	f	class:fastdelegate::FastDelegate6
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7) ) {$/;"	f	class:fastdelegate::FastDelegate7
operator =	dnn/util/fast_delegate.h	/^	void operator = (DesiredRetType (*function_to_bind)(Param1 p1, Param2 p2, Param3 p3, Param4 p4, Param5 p5, Param6 p6, Param7 p7, Param8 p8) ) {$/;"	f	class:fastdelegate::FastDelegate8
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate0 &x)  {$/;"	f	class:fastdelegate::FastDelegate0
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate1 &x)  {$/;"	f	class:fastdelegate::FastDelegate1
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate2 &x)  {$/;"	f	class:fastdelegate::FastDelegate2
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate3 &x)  {$/;"	f	class:fastdelegate::FastDelegate3
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate4 &x)  {$/;"	f	class:fastdelegate::FastDelegate4
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate5 &x)  {$/;"	f	class:fastdelegate::FastDelegate5
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate6 &x)  {$/;"	f	class:fastdelegate::FastDelegate6
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate7 &x)  {$/;"	f	class:fastdelegate::FastDelegate7
operator =	dnn/util/fast_delegate.h	/^	void operator = (const FastDelegate8 &x)  {$/;"	f	class:fastdelegate::FastDelegate8
operator =	dnn/util/fast_delegate.h	/^  void operator = (const BaseType &x)  {$/;"	f	class:fastdelegate::FastDelegate
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator ==	dnn/util/fast_delegate.h	/^	bool operator ==(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate0
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate1
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate2
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate3
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate4
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate5
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate6
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate7
operator ==	dnn/util/fast_delegate.h	/^	inline bool operator==(StaticFunctionPtr funcptr) {$/;"	f	class:fastdelegate::FastDelegate8
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate0 &x) const {$/;"	f	class:fastdelegate::FastDelegate0
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate1 &x) const {$/;"	f	class:fastdelegate::FastDelegate1
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate2 &x) const {$/;"	f	class:fastdelegate::FastDelegate2
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate3 &x) const {$/;"	f	class:fastdelegate::FastDelegate3
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate4 &x) const {$/;"	f	class:fastdelegate::FastDelegate4
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate5 &x) const {$/;"	f	class:fastdelegate::FastDelegate5
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate6 &x) const {$/;"	f	class:fastdelegate::FastDelegate6
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate7 &x) const {$/;"	f	class:fastdelegate::FastDelegate7
operator >	dnn/util/fast_delegate.h	/^	bool operator >(const FastDelegate8 &x) const {$/;"	f	class:fastdelegate::FastDelegate8
operator >	dnn/util/fast_delegate.h	/^	inline bool operator >(const DelegateMemento &right) {$/;"	f	class:fastdelegate::DelegateMemento
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate0
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate1
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate2
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate3
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate4
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate5
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate6
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate7
operator unspecified_bool_type	dnn/util/fast_delegate.h	/^	operator unspecified_bool_type() const {$/;"	f	class:fastdelegate::FastDelegate8
out	dnn/util/fast_delegate.h	/^	OutputClass out;$/;"	m	union:fastdelegate::detail::horrible_union
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate0 type;$/;"	t	class:fastdelegate::FastDelegate0
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate1 type;$/;"	t	class:fastdelegate::FastDelegate1
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate2 type;$/;"	t	class:fastdelegate::FastDelegate2
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate3 type;$/;"	t	class:fastdelegate::FastDelegate3
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate4 type;$/;"	t	class:fastdelegate::FastDelegate4
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate5 type;$/;"	t	class:fastdelegate::FastDelegate5
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate6 type;$/;"	t	class:fastdelegate::FastDelegate6
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate7 type;$/;"	t	class:fastdelegate::FastDelegate7
type	dnn/util/fast_delegate.h	/^	typedef FastDelegate8 type;$/;"	t	class:fastdelegate::FastDelegate8
type	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid { typedef T type; };$/;"	t	struct:fastdelegate::detail::DefaultVoidToVoid
type	dnn/util/fast_delegate.h	/^struct DefaultVoidToVoid<DefaultVoid> {	typedef void type; };$/;"	t	struct:fastdelegate::detail::DefaultVoidToVoid
type	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid { typedef T type; };$/;"	t	struct:fastdelegate::detail::VoidToDefaultVoid
type	dnn/util/fast_delegate.h	/^struct VoidToDefaultVoid<void> { typedef DefaultVoid type; };$/;"	t	struct:fastdelegate::detail::VoidToDefaultVoid
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate0::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate1::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate2::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate3::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate4::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate5::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate6::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate7::SafeBoolStruct
unspecified_bool_type	dnn/util/fast_delegate.h	/^    typedef StaticFunctionPtr SafeBoolStruct::*unspecified_bool_type;$/;"	t	class:fastdelegate::FastDelegate8::SafeBoolStruct
vtable_index	dnn/util/fast_delegate.h	/^	int vtable_index; \/\/ or 0 if no virtual inheritance$/;"	m	struct:fastdelegate::detail::MicrosoftVirtualMFP
FASTDELEGATEBIND_H	dnn/util/fast_delegate_bind.h	19;"	d
fastdelegate	dnn/util/fast_delegate_bind.h	/^namespace fastdelegate {$/;"	n
y	dnn/util/fast_delegate_bind.h	/^    Y * y,$/;"	m	namespace:fastdelegate
cast_uint32_t	dnn/util/fastapprox/cast.h	44;"	d
cast_uint32_t	dnn/util/fastapprox/cast.h	46;"	d
__FAST_EXP_H_	dnn/util/fastapprox/fastexp.h	42;"	d
fasterexp	dnn/util/fastapprox/fastexp.h	/^fasterexp (float p)$/;"	f
fasterpow2	dnn/util/fastapprox/fastexp.h	/^fasterpow2 (float p)$/;"	f
fastexp	dnn/util/fastapprox/fastexp.h	/^fastexp (float p)$/;"	f
fastpow2	dnn/util/fastapprox/fastexp.h	/^fastpow2 (float p)$/;"	f
vfasterexp	dnn/util/fastapprox/fastexp.h	/^vfasterexp (const v4sf p)$/;"	f
vfasterpow2	dnn/util/fastapprox/fastexp.h	/^vfasterpow2 (const v4sf p)$/;"	f
vfastexp	dnn/util/fastapprox/fastexp.h	/^vfastexp (const v4sf p)$/;"	f
vfastpow2	dnn/util/fastapprox/fastexp.h	/^vfastpow2 (const v4sf p)$/;"	f
__FAST_LOG_H_	dnn/util/fastapprox/fastlog.h	42;"	d
fasterlog	dnn/util/fastapprox/fastlog.h	/^fasterlog (float x)$/;"	f
fasterlog2	dnn/util/fastapprox/fastlog.h	/^fasterlog2 (float x)$/;"	f
fastlog	dnn/util/fastapprox/fastlog.h	/^fastlog (float x)$/;"	f
fastlog2	dnn/util/fastapprox/fastlog.h	/^fastlog2 (float x)$/;"	f
vfasterlog	dnn/util/fastapprox/fastlog.h	/^vfasterlog (v4sf x)$/;"	f
vfasterlog2	dnn/util/fastapprox/fastlog.h	/^vfasterlog2 (v4sf x)$/;"	f
vfastlog	dnn/util/fastapprox/fastlog.h	/^vfastlog (v4sf x)$/;"	f
vfastlog2	dnn/util/fastapprox/fastlog.h	/^vfastlog2 (v4sf x)$/;"	f
__FAST_POW_H_	dnn/util/fastapprox/fastpow.h	43;"	d
fasterpow	dnn/util/fastapprox/fastpow.h	/^fasterpow (float x,$/;"	f
fastpow	dnn/util/fastapprox/fastpow.h	/^fastpow (float x,$/;"	f
vfasterpow	dnn/util/fastapprox/fastpow.h	/^vfasterpow (const v4sf x,$/;"	f
vfastpow	dnn/util/fastapprox/fastpow.h	/^vfastpow (const v4sf x,$/;"	f
__FAST_SIGMOID_H_	dnn/util/fastapprox/fastsigmoid.h	42;"	d
fastersigmoid	dnn/util/fastapprox/fastsigmoid.h	/^fastersigmoid (float x)$/;"	f
fastsigmoid	dnn/util/fastapprox/fastsigmoid.h	/^fastsigmoid (float x)$/;"	f
vfastersigmoid	dnn/util/fastapprox/fastsigmoid.h	/^vfastersigmoid (const v4sf x)$/;"	f
vfastsigmoid	dnn/util/fastapprox/fastsigmoid.h	/^vfastsigmoid (const v4sf x)$/;"	f
__FAST_TRIG_H_	dnn/util/fastapprox/fasttrig.h	42;"	d
fastcos	dnn/util/fastapprox/fasttrig.h	/^fastcos (float x)$/;"	f
fastcosfull	dnn/util/fastapprox/fasttrig.h	/^fastcosfull (float x)$/;"	f
fastercos	dnn/util/fastapprox/fasttrig.h	/^fastercos (float x)$/;"	f
fastercosfull	dnn/util/fastapprox/fasttrig.h	/^fastercosfull (float x)$/;"	f
fastersin	dnn/util/fastapprox/fasttrig.h	/^fastersin (float x)$/;"	f
fastersinfull	dnn/util/fastapprox/fasttrig.h	/^fastersinfull (float x)$/;"	f
fastertan	dnn/util/fastapprox/fasttrig.h	/^fastertan (float x)$/;"	f
fastertanfull	dnn/util/fastapprox/fasttrig.h	/^fastertanfull (float x)$/;"	f
fastsin	dnn/util/fastapprox/fasttrig.h	/^fastsin (float x)$/;"	f
fastsinfull	dnn/util/fastapprox/fasttrig.h	/^fastsinfull (float x)$/;"	f
fasttan	dnn/util/fastapprox/fasttrig.h	/^fasttan (float x)$/;"	f
fasttanfull	dnn/util/fastapprox/fasttrig.h	/^fasttanfull (float x)$/;"	f
vfastcos	dnn/util/fastapprox/fasttrig.h	/^vfastcos (const v4sf x)$/;"	f
vfastcosfull	dnn/util/fastapprox/fasttrig.h	/^vfastcosfull (const v4sf x)$/;"	f
vfastercos	dnn/util/fastapprox/fasttrig.h	/^vfastercos (v4sf x)$/;"	f
vfastercosfull	dnn/util/fastapprox/fasttrig.h	/^vfastercosfull (const v4sf x)$/;"	f
vfastersin	dnn/util/fastapprox/fasttrig.h	/^vfastersin (const v4sf x)$/;"	f
vfastersinfull	dnn/util/fastapprox/fasttrig.h	/^vfastersinfull (const v4sf x)$/;"	f
vfastertan	dnn/util/fastapprox/fasttrig.h	/^vfastertan (const v4sf x)$/;"	f
vfastertanfull	dnn/util/fastapprox/fasttrig.h	/^vfastertanfull (const v4sf x)$/;"	f
vfastsin	dnn/util/fastapprox/fasttrig.h	/^vfastsin (const v4sf x)$/;"	f
vfastsinfull	dnn/util/fastapprox/fasttrig.h	/^vfastsinfull (const v4sf x)$/;"	f
vfasttan	dnn/util/fastapprox/fasttrig.h	/^vfasttan (const v4sf x)$/;"	f
vfasttanfull	dnn/util/fastapprox/fasttrig.h	/^vfasttanfull (const v4sf x)$/;"	f
__SSE_H_	dnn/util/fastapprox/sse.h	42;"	d
array	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	m	union:__anon8::__anon9
array	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	m	union:__anon8::__anon10
f	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	m	union:__anon8::__anon9
f	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	m	union:__anon8::__anon11
i	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	m	union:__anon8::__anon11
i	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	m	union:__anon8::__anon10
v2dil	dnn/util/fastapprox/sse.h	59;"	d
v4sf	dnn/util/fastapprox/sse.h	/^typedef __m128 v4sf;$/;"	t	namespace:__anon8
v4sf_fabs	dnn/util/fastapprox/sse.h	76;"	d
v4sf_index	dnn/util/fastapprox/sse.h	63;"	d
v4sf_to_v4si	dnn/util/fastapprox/sse.h	56;"	d
v4sfindexer	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; float array[4]; } v4sfindexer;$/;"	t	namespace:__anon8	typeref:union:__anon8::__anon9
v4sfl	dnn/util/fastapprox/sse.h	58;"	d
v4sfv4sipun	dnn/util/fastapprox/sse.h	/^typedef union { v4sf f; v4si i; } v4sfv4sipun;$/;"	t	namespace:__anon8	typeref:union:__anon8::__anon11
v4si	dnn/util/fastapprox/sse.h	/^typedef __m128i v4si;$/;"	t	namespace:__anon8
v4si_index	dnn/util/fastapprox/sse.h	69;"	d
v4si_to_v4sf	dnn/util/fastapprox/sse.h	55;"	d
v4siindexer	dnn/util/fastapprox/sse.h	/^typedef union { v4si i; int array[4]; } v4siindexer;$/;"	t	namespace:__anon8	typeref:union:__anon8::__anon10
v4sil	dnn/util/fastapprox/sse.h	60;"	d
InterfacedPtr	dnn/util/interfaced_ptr.h	/^	InterfacedPtr() : _ptr(nullptr) {$/;"	f	class:dnn::InterfacedPtr
InterfacedPtr	dnn/util/interfaced_ptr.h	/^	InterfacedPtr(T *ptr_to_set) : _ptr(ptr_to_set) {$/;"	f	class:dnn::InterfacedPtr
InterfacedPtr	dnn/util/interfaced_ptr.h	/^class InterfacedPtr {$/;"	c	namespace:dnn
_ptr	dnn/util/interfaced_ptr.h	/^	T *_ptr;$/;"	m	class:dnn::InterfacedPtr
dnn	dnn/util/interfaced_ptr.h	/^namespace dnn {$/;"	n
i	dnn/util/interfaced_ptr.h	/^	typename T::interface i;$/;"	m	class:dnn::InterfacedPtr
ifc	dnn/util/interfaced_ptr.h	/^	typename T::interface& ifc() {$/;"	f	class:dnn::InterfacedPtr
isSet	dnn/util/interfaced_ptr.h	/^	bool isSet() {$/;"	f	class:dnn::InterfacedPtr
ptr	dnn/util/interfaced_ptr.h	/^	inline T* ptr() {$/;"	f	class:dnn::InterfacedPtr
ref	dnn/util/interfaced_ptr.h	/^	inline T& ref() {$/;"	f	class:dnn::InterfacedPtr
set	dnn/util/interfaced_ptr.h	/^	void set(T *ptr_to_set) {$/;"	f	class:dnn::InterfacedPtr
Json	dnn/util/json.h	/^class Json {$/;"	c	namespace:dnn
JsonToProtobuf	dnn/util/json.h	/^	static void JsonToProtobuf(const Value &v, ProtoMessage m) {$/;"	f	class:dnn::Json
__getDoubleVal	dnn/util/json.h	/^	static bool __getDoubleVal(const Value &v, const string name, double &d) {$/;"	f	class:dnn::Json
__getStringVal	dnn/util/json.h	/^	static bool __getStringVal(const Value &v, const string name, string &d) {$/;"	f	class:dnn::Json
checkVal	dnn/util/json.h	/^	static bool checkVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
dnn	dnn/util/json.h	/^namespace dnn {$/;"	n
getArray	dnn/util/json.h	/^	static const Value& getArray(const Value &v, const string name) {$/;"	f	class:dnn::Json
getDoubleVal	dnn/util/json.h	/^	static double getDoubleVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getDoubleValDef	dnn/util/json.h	/^	static double getDoubleValDef(const Value &v, const string name, double def) {$/;"	f	class:dnn::Json
getIntVal	dnn/util/json.h	/^	static size_t getIntVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getRidOfComments	dnn/util/json.h	/^	static void getRidOfComments(string &inp_s) {$/;"	f	class:dnn::Json
getStringVal	dnn/util/json.h	/^	static string getStringVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getStringValDef	dnn/util/json.h	/^	static string getStringValDef(const Value &v, const string name, string def) {$/;"	f	class:dnn::Json
getUintVal	dnn/util/json.h	/^	static size_t getUintVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
getUintVector	dnn/util/json.h	/^	static vector<size_t> getUintVector(const Value &v, const string name) {$/;"	f	class:dnn::Json
getVal	dnn/util/json.h	/^	static const Value& getVal(const Value &v, const string name) {$/;"	f	class:dnn::Json
parseProtobuf	dnn/util/json.h	/^	static Document* parseProtobuf(google::protobuf::Message* mess) {$/;"	f	class:dnn::Json
parseString	dnn/util/json.h	/^	static Document parseString(string &p) {$/;"	f	class:dnn::Json
parseStringC	dnn/util/json.h	/^	static Document parseStringC(const string &p) {$/;"	f	class:dnn::Json
stringify	dnn/util/json.h	/^	static string stringify(const Value &v) {$/;"	f	class:dnn::Json
dnn	dnn/util/matrix.h	/^namespace dnn {$/;"	n
OptionParser	dnn/util/option_parser.h	/^	OptionParser(int argc, char **argv) {$/;"	f	class:OptionParser
OptionParser	dnn/util/option_parser.h	/^class OptionParser {$/;"	c
cast	dnn/util/option_parser.h	/^T cast(string &s) {$/;"	f
cast	dnn/util/option_parser.h	/^double cast(string &s) {$/;"	f
cast	dnn/util/option_parser.h	/^int cast(string &s) {$/;"	f
cast	dnn/util/option_parser.h	/^size_t cast(string &s) {$/;"	f
cast	dnn/util/option_parser.h	/^string cast(string &s) {$/;"	f
getRawOptions	dnn/util/option_parser.h	/^	vector<string>& getRawOptions() {$/;"	f	class:OptionParser
loption	dnn/util/option_parser.h	/^	void loption(string long_opt, T &src, bool required = true, bool as_flag = false) {$/;"	f	class:OptionParser
option	dnn/util/option_parser.h	/^	void option(string long_opt, string short_opt, T &src, bool required = true, bool as_flag = false) {$/;"	f	class:OptionParser
opts	dnn/util/option_parser.h	/^	vector<string> opts;$/;"	m	class:OptionParser
H_PRETTY_PRINT	dnn/util/pretty_print.h	12;"	d
Int	dnn/util/pretty_print.h	/^        template <std::size_t I> struct Int { };$/;"	s	struct:pretty_print::print_container_helper::printer
_array	dnn/util/pretty_print.h	/^        const T * const _array;$/;"	m	struct:pretty_print::array_wrapper_n
_n	dnn/util/pretty_print.h	/^        size_t _n;$/;"	m	struct:pretty_print::array_wrapper_n
array_wrapper_n	dnn/util/pretty_print.h	/^        array_wrapper_n(const T * const a, size_t n) : _array(a), _n(n) { }$/;"	f	struct:pretty_print::array_wrapper_n
array_wrapper_n	dnn/util/pretty_print.h	/^    struct array_wrapper_n$/;"	s	namespace:pretty_print
base	dnn/util/pretty_print.h	/^        std::unique_ptr<custom_delims_base> base;$/;"	m	struct:pretty_print::custom_delims
beg_value	dnn/util/pretty_print.h	/^            static bool const beg_value = sizeof(f<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_begin_end
begin	dnn/util/pretty_print.h	/^        const_iterator begin() const$/;"	f	struct:pretty_print::bucket_print_wrapper
begin	dnn/util/pretty_print.h	/^        inline const_iterator begin() const { return _array; }$/;"	f	struct:pretty_print::array_wrapper_n
bucket_print	dnn/util/pretty_print.h	/^bucket_print(const T & m, typename T::size_type n)$/;"	f
bucket_print_wrapper	dnn/util/pretty_print.h	/^        bucket_print_wrapper(const T & m, size_type bucket) : m_map(m), n(bucket) { }$/;"	f	struct:pretty_print::bucket_print_wrapper
bucket_print_wrapper	dnn/util/pretty_print.h	/^    struct bucket_print_wrapper$/;"	s	namespace:pretty_print
const_iterator	dnn/util/pretty_print.h	/^        typedef const T * const_iterator;$/;"	t	struct:pretty_print::array_wrapper_n
const_iterator	dnn/util/pretty_print.h	/^        typedef typename T::const_local_iterator const_iterator;$/;"	t	struct:pretty_print::bucket_print_wrapper
container_	dnn/util/pretty_print.h	/^        const T & container_;$/;"	m	struct:pretty_print::print_container_helper
custom_delims	dnn/util/pretty_print.h	/^        custom_delims(const Container & c) : base(new custom_delims_wrapper<Container, Delims>(c)) { }$/;"	f	struct:pretty_print::custom_delims
custom_delims	dnn/util/pretty_print.h	/^    struct custom_delims$/;"	s	namespace:pretty_print
custom_delims_base	dnn/util/pretty_print.h	/^    struct custom_delims_base$/;"	s	namespace:pretty_print
custom_delims_wrapper	dnn/util/pretty_print.h	/^        custom_delims_wrapper(const T & t_) : t(t_) { }$/;"	f	struct:pretty_print::custom_delims_wrapper
custom_delims_wrapper	dnn/util/pretty_print.h	/^    struct custom_delims_wrapper : custom_delims_base$/;"	s	namespace:pretty_print
delimiter	dnn/util/pretty_print.h	/^        const char_type * delimiter;$/;"	m	struct:pretty_print::delimiters_values
delimiters	dnn/util/pretty_print.h	/^    struct delimiters$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters< ::std::tuple<Args...>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters<std::tuple<Args...>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters<std::pair<T1, T2>, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, char> { static const delimiters_values<char> values; };$/;"	s	namespace:pretty_print
delimiters	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	s	namespace:pretty_print
delimiters_values	dnn/util/pretty_print.h	/^    struct delimiters_values$/;"	s	namespace:pretty_print
detail	dnn/util/pretty_print.h	/^    namespace detail$/;"	n	namespace:pretty_print
end	dnn/util/pretty_print.h	/^        const_iterator end() const$/;"	f	struct:pretty_print::bucket_print_wrapper
end	dnn/util/pretty_print.h	/^        inline const_iterator end() const { return _array + _n; }$/;"	f	struct:pretty_print::array_wrapper_n
end_value	dnn/util/pretty_print.h	/^            static bool const end_value = sizeof(g<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_begin_end
has_begin_end	dnn/util/pretty_print.h	/^        struct has_begin_end : private sfinae_base$/;"	s	namespace:pretty_print::detail
has_const_iterator	dnn/util/pretty_print.h	/^        struct has_const_iterator : private sfinae_base$/;"	s	namespace:pretty_print::detail
is_container	dnn/util/pretty_print.h	/^    struct is_container : public std::integral_constant<bool,$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<T[N]> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<char[N]> : std::false_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::pair<T1, T2>> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::tuple<Args...>> : std::true_type { };$/;"	s	namespace:pretty_print
is_container	dnn/util/pretty_print.h	/^    struct is_container<std::valarray<T>> : std::true_type { };$/;"	s	namespace:pretty_print
m_map	dnn/util/pretty_print.h	/^        const T & m_map;$/;"	m	struct:pretty_print::bucket_print_wrapper
n	dnn/util/pretty_print.h	/^        const size_type n;$/;"	m	struct:pretty_print::bucket_print_wrapper
operator ()	dnn/util/pretty_print.h	/^        inline void operator()(ostream_type & stream) const$/;"	f	struct:pretty_print::print_container_helper
operator <<	dnn/util/pretty_print.h	/^    inline std::basic_ostream<TChar, TCharTraits> & operator<<($/;"	f	namespace:pretty_print
operator <<	dnn/util/pretty_print.h	/^    inline std::basic_ostream<TChar, TCharTraits> & operator<<(std::basic_ostream<TChar, TCharTraits> & s, const custom_delims<Delims> & p)$/;"	f	namespace:pretty_print
operator <<	dnn/util/pretty_print.h	/^    operator<<(basic_ostream<TChar, TCharTraits> & stream, const T & container)$/;"	f	namespace:std
postfix	dnn/util/pretty_print.h	/^        const char_type * postfix;$/;"	m	struct:pretty_print::delimiters_values
prefix	dnn/util/pretty_print.h	/^        const char_type * prefix;$/;"	m	struct:pretty_print::delimiters_values
pretty_print	dnn/util/pretty_print.h	/^namespace pretty_print$/;"	n
pretty_print_array	dnn/util/pretty_print.h	/^inline pretty_print::array_wrapper_n<T> pretty_print_array(const T * const a, size_t n)$/;"	f
print_body	dnn/util/pretty_print.h	/^            static void print_body(const U & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_body	dnn/util/pretty_print.h	/^        static void print_body(const element_type & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_body	dnn/util/pretty_print.h	/^        static void print_body(const std::pair<T1, T2> & c, ostream_type & stream)$/;"	f	struct:pretty_print::print_container_helper::printer
print_container_helper	dnn/util/pretty_print.h	/^        print_container_helper(const T & container)$/;"	f	struct:pretty_print::print_container_helper
print_container_helper	dnn/util/pretty_print.h	/^    struct print_container_helper$/;"	s	namespace:pretty_print
printer	dnn/util/pretty_print.h	/^        struct printer$/;"	s	struct:pretty_print::print_container_helper
printer	dnn/util/pretty_print.h	/^    struct print_container_helper<T, TChar, TCharTraits, TDelimiters>::printer<std::pair<T1, T2>>$/;"	s	class:pretty_print::print_container_helper
printer	dnn/util/pretty_print.h	/^    struct print_container_helper<T, TChar, TCharTraits, TDelimiters>::printer<std::tuple<Args...>>$/;"	s	class:pretty_print::print_container_helper
sfinae_base	dnn/util/pretty_print.h	/^        struct sfinae_base$/;"	s	namespace:pretty_print::detail
size_type	dnn/util/pretty_print.h	/^        typedef typename T::size_type size_type;$/;"	t	struct:pretty_print::bucket_print_wrapper
std	dnn/util/pretty_print.h	/^namespace std$/;"	n
stream	dnn/util/pretty_print.h	/^        std::ostream & stream(std::ostream & s)$/;"	f	struct:pretty_print::custom_delims_wrapper
stream	dnn/util/pretty_print.h	/^        std::wostream & stream(std::wostream & s)$/;"	f	struct:pretty_print::custom_delims_wrapper
t	dnn/util/pretty_print.h	/^        const T & t;$/;"	m	struct:pretty_print::custom_delims_wrapper
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type & c, ostream_type & stream, Int<N>)$/;"	f	struct:pretty_print::print_container_helper::printer
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type & c, ostream_type & stream,$/;"	f	struct:pretty_print::print_container_helper::printer
tuple_print	dnn/util/pretty_print.h	/^        static void tuple_print(const element_type &, ostream_type &, Int<sizeof...(Args)>)$/;"	f	struct:pretty_print::print_container_helper::printer
value	dnn/util/pretty_print.h	/^            static const bool value = sizeof(test<T>(nullptr)) == sizeof(yes);$/;"	m	struct:pretty_print::detail::has_const_iterator
value_type	dnn/util/pretty_print.h	/^        typedef T value_type;$/;"	t	struct:pretty_print::array_wrapper_n
values	dnn/util/pretty_print.h	/^        static const type values; $/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::multiset<T, TComp, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::set<T, TComp, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<char> delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char>::values = { "{", ", ", "}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::set<T, TComp, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    const delimiters_values<wchar_t> delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t>::values = { L"{", L", ", L"}" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::multiset<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::set<T, TComp, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_multiset<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    struct delimiters< ::std::unordered_set<T, THash, TEqual, TAllocator>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> const delimiters_values<char> delimiters<std::tuple<Args...>, char>::values = { "(", ", ", ")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> const delimiters_values<wchar_t> delimiters< ::std::tuple<Args...>, wchar_t>::values = { L"(", L", ", L")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters< ::std::tuple<Args...>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename ...Args> struct delimiters<std::tuple<Args...>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> const delimiters_values<char> delimiters<std::pair<T1, T2>, char>::values = { "(", ", ", ")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> const delimiters_values<wchar_t> delimiters< ::std::pair<T1, T2>, wchar_t>::values = { L"(", L", ", L")" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters< ::std::pair<T1, T2>, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T1, typename T2> struct delimiters<std::pair<T1, T2>, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> const delimiters_values<char> delimiters<T, char>::values = { "[", ", ", "]" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> const delimiters_values<wchar_t> delimiters<T, wchar_t>::values = { L"[", L", ", L"]" };$/;"	m	class:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, char> { static const delimiters_values<char> values; };$/;"	m	struct:pretty_print::delimiters
values	dnn/util/pretty_print.h	/^    template <typename T> struct delimiters<T, wchar_t> { static const delimiters_values<wchar_t> values; };$/;"	m	struct:pretty_print::delimiters
~custom_delims_base	dnn/util/pretty_print.h	/^        virtual ~custom_delims_base() { }$/;"	f	struct:pretty_print::custom_delims_base
PCG_128BIT_CONSTANT	dnn/util/random/pcg_extras.hpp	84;"	d
PCG_EXTRAS_HPP_INCLUDED	dnn/util/random/pcg_extras.hpp	36;"	d
PCG_NOINLINE	dnn/util/random/pcg_extras.hpp	60;"	d
PCG_NOINLINE	dnn/util/random/pcg_extras.hpp	62;"	d
bitcount_t	dnn/util/random/pcg_extras.hpp	/^    typedef uint8_t bitcount_t;$/;"	t	namespace:pcg_extras
fnv	dnn/util/random/pcg_extras.hpp	/^    static constexpr IntType fnv(IntType hash, const char* pos) {$/;"	f	struct:pcg_extras::static_arbitrary_seed
generate	dnn/util/random/pcg_extras.hpp	/^    void generate(Iter start, Iter finish)$/;"	f	class:pcg_extras::seed_seq_from
generate_one	dnn/util/random/pcg_extras.hpp	/^inline UInt generate_one(SeedSeq&& generator)$/;"	f	namespace:pcg_extras
generate_to	dnn/util/random/pcg_extras.hpp	/^inline void generate_to(SeedSeq&& generator, DestIter dest)$/;"	f	namespace:pcg_extras
generate_to_impl	dnn/util/random/pcg_extras.hpp	/^inline void generate_to_impl(SeedSeq&& generator, DestIter dest,$/;"	f	namespace:pcg_extras
generate_to_impl	dnn/util/random/pcg_extras.hpp	/^void generate_to_impl(SeedSeq&& generator, DestIter dest,$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^inline std::ostream& operator<<(std::ostream& out, uint8_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^operator<<(std::basic_ostream<CharT,Traits>& out, pcg128_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^operator<<(std::basic_ostream<CharT,Traits>&out, uint8_t value)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_extras.hpp	/^std::ostream& operator<<(std::ostream& out, printable_typename<T>) {$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^inline std::istream& operator>>(std::istream& in, uint8_t& value)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in, pcg128_t& value)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_extras.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in, uint8_t target)$/;"	f	namespace:pcg_extras
pcg128_t	dnn/util/random/pcg_extras.hpp	/^        typedef __uint128_t pcg128_t;$/;"	t	namespace:pcg_extras
pcg128_t	dnn/util/random/pcg_extras.hpp	/^        typedef pcg_extras::uint_x4<uint32_t,uint64_t> pcg128_t;$/;"	t	namespace:pcg_extras
pcg_extras	dnn/util/random/pcg_extras.hpp	/^    namespace pcg_extras {$/;"	n
pcg_extras	dnn/util/random/pcg_extras.hpp	/^namespace pcg_extras {$/;"	n
printable_typename	dnn/util/random/pcg_extras.hpp	/^struct printable_typename {};$/;"	s	namespace:pcg_extras
result_type	dnn/util/random/pcg_extras.hpp	/^    typedef uint_least32_t result_type;$/;"	t	class:pcg_extras::seed_seq_from
rng_	dnn/util/random/pcg_extras.hpp	/^    RngType rng_;$/;"	m	class:pcg_extras::seed_seq_from
rotl	dnn/util/random/pcg_extras.hpp	/^inline itype rotl(itype value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline itype rotr(itype value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint16_t rotr(uint16_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint32_t rotr(uint32_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint64_t rotr(uint64_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
rotr	dnn/util/random/pcg_extras.hpp	/^inline uint8_t rotr(uint8_t value, bitcount_t rot)$/;"	f	namespace:pcg_extras
seed_seq_from	dnn/util/random/pcg_extras.hpp	/^    seed_seq_from(Args&&... args) :$/;"	f	class:pcg_extras::seed_seq_from
seed_seq_from	dnn/util/random/pcg_extras.hpp	/^class seed_seq_from {$/;"	c	namespace:pcg_extras
shuffle	dnn/util/random/pcg_extras.hpp	/^void shuffle(Iter from, Iter to, RandType&& rng)$/;"	f	namespace:pcg_extras
size	dnn/util/random/pcg_extras.hpp	/^    constexpr size_t size() const$/;"	f	class:pcg_extras::seed_seq_from
static_arbitrary_seed	dnn/util/random/pcg_extras.hpp	/^struct static_arbitrary_seed {$/;"	s	namespace:pcg_extras
uneven_copy	dnn/util/random/pcg_extras.hpp	/^inline SrcIter uneven_copy(SrcIter src_first,$/;"	f	namespace:pcg_extras
uneven_copy_impl	dnn/util/random/pcg_extras.hpp	/^SrcIter uneven_copy_impl($/;"	f	namespace:pcg_extras
unxorshift	dnn/util/random/pcg_extras.hpp	/^inline itype unxorshift(itype x, bitcount_t bits, bitcount_t shift)$/;"	f	namespace:pcg_extras
value	dnn/util/random/pcg_extras.hpp	/^    static constexpr IntType value = fnv(IntType(2166136261U ^ sizeof(IntType)),$/;"	m	struct:pcg_extras::static_arbitrary_seed
PCG_DEFINE_CONSTANT	dnn/util/random/pcg_random.hpp	129;"	d
PCG_RAND_HPP_INCLUDED	dnn/util/random/pcg_random.hpp	76;"	d
advance	dnn/util/random/pcg_random.hpp	/^             multiplier_mixin>::advance($/;"	f	class:pcg_detail::engine
advance	dnn/util/random/pcg_random.hpp	/^    void advance(itype delta)$/;"	f	class:pcg_detail::engine
backstep	dnn/util/random/pcg_random.hpp	/^    void backstep(itype delta)$/;"	f	class:pcg_detail::engine
base_generate	dnn/util/random/pcg_random.hpp	/^    itype base_generate()$/;"	f	class:pcg_detail::engine
base_generate0	dnn/util/random/pcg_random.hpp	/^    itype base_generate0()$/;"	f	class:pcg_detail::engine
bottomspare	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t bottomspare = sparebits - topspare;$/;"	m	namespace:pcg_detail
bump	dnn/util/random/pcg_random.hpp	/^    itype bump(itype state)$/;"	f	class:pcg_detail::engine
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::no_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::oneseq_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = false;$/;"	m	class:pcg_detail::unique_stream
can_specify_stream	dnn/util/random/pcg_random.hpp	/^    static constexpr bool can_specify_stream = true;$/;"	m	class:pcg_detail::specific_stream
can_specify_stream_tag	dnn/util/random/pcg_random.hpp	/^    struct can_specify_stream_tag {};$/;"	s	class:pcg_detail::engine
default_increment	dnn/util/random/pcg_random.hpp	/^struct default_increment {$/;"	s	namespace:pcg_detail
default_multiplier	dnn/util/random/pcg_random.hpp	/^struct default_multiplier {$/;"	s	namespace:pcg_detail
discard	dnn/util/random/pcg_random.hpp	/^    void discard(itype delta)$/;"	f	class:pcg_detail::engine
distance	dnn/util/random/pcg_random.hpp	/^               multiplier_mixin>::distance($/;"	f	class:pcg_detail::engine
distance	dnn/util/random/pcg_random.hpp	/^    itype distance(itype newstate, itype mask = ~itype(0U)) const$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^    engine(SeedSeq&& seedSeq, typename std::enable_if<$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^    engine(itype state = itype(0xcafef00dd15ea5e5ULL))$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^    engine(itype state, typename sm::stream_state stream_seed)$/;"	f	class:pcg_detail::engine
engine	dnn/util/random/pcg_random.hpp	/^class engine : protected output_mixin,$/;"	c	namespace:pcg_detail
inc_	dnn/util/random/pcg_random.hpp	/^    itype inc_ = default_increment<itype>::increment();$/;"	m	class:pcg_detail::specific_stream
increment	dnn/util/random/pcg_random.hpp	/^    constexpr itype increment() const {$/;"	f	class:pcg_detail::specific_stream
increment	dnn/util/random/pcg_random.hpp	/^    constexpr itype increment() const {$/;"	f	class:pcg_detail::unique_stream
increment	dnn/util/random/pcg_random.hpp	/^    static constexpr itype increment() {$/;"	f	class:pcg_detail::no_stream
internal	dnn/util/random/pcg_random.hpp	/^        internal ^= internal >> xshift;$/;"	m	namespace:pcg_detail
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::oneseq_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::specific_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = false;$/;"	m	class:pcg_detail::unique_stream
is_mcg	dnn/util/random/pcg_random.hpp	/^    static constexpr bool is_mcg = true;$/;"	m	class:pcg_detail::no_stream
mask	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t mask = (1 << opbits) - 1;$/;"	m	namespace:pcg_detail
max	dnn/util/random/pcg_random.hpp	/^    static constexpr result_type max()$/;"	f	class:pcg_detail::engine
maxrandshift	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t maxrandshift  = mask;$/;"	m	namespace:pcg_detail
min	dnn/util/random/pcg_random.hpp	/^    static constexpr result_type min()$/;"	f	class:pcg_detail::engine
no_specifiable_stream_tag	dnn/util/random/pcg_random.hpp	/^    struct no_specifiable_stream_tag {};$/;"	s	class:pcg_detail::engine
no_stream	dnn/util/random/pcg_random.hpp	/^class no_stream {$/;"	c	namespace:pcg_detail
oneseq_stream	dnn/util/random/pcg_random.hpp	/^class oneseq_stream : public default_increment<itype> {$/;"	c	namespace:pcg_detail
operator !=	dnn/util/random/pcg_random.hpp	/^inline bool operator!=(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator ()	dnn/util/random/pcg_random.hpp	/^    result_type operator()()$/;"	f	class:pcg_detail::engine
operator ()	dnn/util/random/pcg_random.hpp	/^    result_type operator()(result_type upper_bound)$/;"	f	class:pcg_detail::engine
operator -	dnn/util/random/pcg_random.hpp	/^itype operator-(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator <<	dnn/util/random/pcg_random.hpp	/^operator<<(std::basic_ostream<CharT,Traits>& out,$/;"	f	namespace:pcg_detail
operator ==	dnn/util/random/pcg_random.hpp	/^bool operator==(const engine<xtype,itype,$/;"	f	namespace:pcg_detail
operator >>	dnn/util/random/pcg_random.hpp	/^operator>>(std::basic_istream<CharT,Traits>& in,$/;"	f	namespace:pcg_detail
pcg_detail	dnn/util/random/pcg_random.hpp	/^namespace pcg_detail {$/;"	n
period_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t period_pow2()$/;"	f	class:pcg_detail::engine
result	dnn/util/random/pcg_random.hpp	/^        xtype result = xtype(internal >> (bottomspare - maxrandshift + rshift));$/;"	m	namespace:pcg_detail
result_type	dnn/util/random/pcg_random.hpp	/^    typedef xtype result_type;$/;"	t	class:pcg_detail::engine
rshift	dnn/util/random/pcg_random.hpp	/^        bitcount_t rshift =$/;"	m	namespace:pcg_detail
seed	dnn/util/random/pcg_random.hpp	/^    void seed(Args&&... args)$/;"	f	class:pcg_detail::engine
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::no_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::oneseq_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(...)$/;"	f	class:pcg_detail::unique_stream
set_stream	dnn/util/random/pcg_random.hpp	/^    void set_stream(itype specific_seq)$/;"	f	class:pcg_detail::specific_stream
specific_stream	dnn/util/random/pcg_random.hpp	/^    specific_stream(itype specific_seq)$/;"	f	class:pcg_detail::specific_stream
specific_stream	dnn/util/random/pcg_random.hpp	/^class specific_stream {$/;"	c	namespace:pcg_detail
state_	dnn/util/random/pcg_random.hpp	/^    itype state_;$/;"	m	class:pcg_detail::engine
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::engine
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::no_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::oneseq_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::specific_stream
state_type	dnn/util/random/pcg_random.hpp	/^    typedef itype state_type;$/;"	t	class:pcg_detail::unique_stream
stream	dnn/util/random/pcg_random.hpp	/^    constexpr itype stream() const$/;"	f	class:pcg_detail::unique_stream
stream	dnn/util/random/pcg_random.hpp	/^    itype stream()$/;"	f	class:pcg_detail::specific_stream
stream	dnn/util/random/pcg_random.hpp	/^    static constexpr itype stream()$/;"	f	class:pcg_detail::oneseq_stream
stream_state	dnn/util/random/pcg_random.hpp	/^    typedef itype stream_state;$/;"	t	class:pcg_detail::specific_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::no_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::oneseq_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::specific_stream
streams_pow2	dnn/util/random/pcg_random.hpp	/^    static constexpr size_t streams_pow2()$/;"	f	class:pcg_detail::unique_stream
topspare	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t topspare     = opbits;$/;"	m	namespace:pcg_detail
unique_stream	dnn/util/random/pcg_random.hpp	/^class unique_stream {$/;"	c	namespace:pcg_detail
wrapped	dnn/util/random/pcg_random.hpp	/^    bool wrapped()$/;"	f	class:pcg_detail::engine
xshift	dnn/util/random/pcg_random.hpp	/^        constexpr bitcount_t xshift     = topspare + (xtypebits+maxrandshift)\/2;$/;"	m	namespace:pcg_detail
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	58;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	60;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	65;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	67;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	69;"	d
PCG_LITTLE_ENDIAN	dnn/util/random/pcg_uint128.hpp	72;"	d
PCG_UINT128_HPP_INCLUDED	dnn/util/random/pcg_uint128.hpp	39;"	d
addwithcarry	dnn/util/random/pcg_uint128.hpp	/^inline UInt addwithcarry(UInt x, UInt y, bool carryin, bool* carryout)$/;"	f	namespace:pcg_extras
bitcount_t	dnn/util/random/pcg_uint128.hpp	/^    typedef uint8_t bitcount_t;$/;"	t	namespace:pcg_extras
clog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t clog2(UInt v)$/;"	f	namespace:pcg_extras
d	dnn/util/random/pcg_uint128.hpp	/^        } d;$/;"	m	union:pcg_extras::uint_x4::__anon1	typeref:struct:pcg_extras::uint_x4::__anon1::__anon3
da	dnn/util/random/pcg_uint128.hpp	/^        UIntX2 da[2];$/;"	m	union:pcg_extras::uint_x4::__anon1
divmod	dnn/util/random/pcg_uint128.hpp	/^    divmod(const uint_x4<UInt,UIntX2>& orig_dividend,$/;"	f	namespace:pcg_extras
flog2	dnn/util/random/pcg_uint128.hpp	/^bitcount_t flog2(const uint_x4<U,V>& v)$/;"	f	namespace:pcg_extras
flog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t flog2(uint32_t v)$/;"	f	namespace:pcg_extras
flog2	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t flog2(uint64_t v)$/;"	f	namespace:pcg_extras
operator !=	dnn/util/random/pcg_uint128.hpp	/^bool operator!=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator %	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator%(const uint_x4<UInt,UIntX2>& dividend,$/;"	f	namespace:pcg_extras
operator &	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator&(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator *	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator*(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator +	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator+(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator -	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator-(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator -	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator-(const uint_x4<UInt,UIntX2>& v)$/;"	f	namespace:pcg_extras
operator /	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator\/(const uint_x4<UInt,UIntX2>& dividend,$/;"	f	namespace:pcg_extras
operator <	dnn/util/random/pcg_uint128.hpp	/^bool operator<(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator <<	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator<<(const uint_x4<UInt,UIntX2>& v,$/;"	f	namespace:pcg_extras
operator <<=	dnn/util/random/pcg_uint128.hpp	/^    uint_x4& operator<<=(bitcount_t shift)$/;"	f	class:pcg_extras::uint_x4
operator <=	dnn/util/random/pcg_uint128.hpp	/^bool operator<=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator ==	dnn/util/random/pcg_uint128.hpp	/^bool operator==(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator >	dnn/util/random/pcg_uint128.hpp	/^bool operator>(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator >=	dnn/util/random/pcg_uint128.hpp	/^bool operator>=(const uint_x4<UInt,UIntX2>& a, const uint_x4<UInt,UIntX2>& b)$/;"	f	namespace:pcg_extras
operator >>	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator>>(const uint_x4<UInt,UIntX2>& v,$/;"	f	namespace:pcg_extras
operator ^	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator^(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator |	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator|(const uint_x4<UInt,UIntX2>& a,$/;"	f	namespace:pcg_extras
operator ~	dnn/util/random/pcg_uint128.hpp	/^uint_x4<UInt,UIntX2> operator~(const uint_x4<UInt,UIntX2>& v)$/;"	f	namespace:pcg_extras
pcg_extras	dnn/util/random/pcg_uint128.hpp	/^namespace pcg_extras {$/;"	n
subwithcarry	dnn/util/random/pcg_uint128.hpp	/^inline UInt subwithcarry(UInt x, UInt y, bool carryin, bool* carryout)$/;"	f	namespace:pcg_extras
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^bitcount_t trailingzeros(const uint_x4<U,V>& v)$/;"	f	namespace:pcg_extras
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t trailingzeros(uint32_t v)$/;"	f	namespace:pcg_extras
trailingzeros	dnn/util/random/pcg_uint128.hpp	/^inline bitcount_t trailingzeros(uint64_t v)$/;"	f	namespace:pcg_extras
uint_x4	dnn/util/random/pcg_uint128.hpp	/^    constexpr uint_x4(UInt v3, UInt v2, UInt v1, UInt v0)$/;"	f	class:pcg_extras::uint_x4
uint_x4	dnn/util/random/pcg_uint128.hpp	/^    constexpr uint_x4(UIntX2 v23, UIntX2 v01)$/;"	f	class:pcg_extras::uint_x4
uint_x4	dnn/util/random/pcg_uint128.hpp	/^class uint_x4 {$/;"	c	namespace:pcg_extras
v0	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v01	dnn/util/random/pcg_uint128.hpp	/^            UIntX2 v01, v23;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon3
v1	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v2	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
v23	dnn/util/random/pcg_uint128.hpp	/^            UIntX2 v01, v23;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon3
v3	dnn/util/random/pcg_uint128.hpp	/^            UInt v0, v1, v2, v3;$/;"	m	struct:pcg_extras::uint_x4::__anon1::__anon2
w	dnn/util/random/pcg_uint128.hpp	/^        } w;$/;"	m	union:pcg_extras::uint_x4::__anon1	typeref:struct:pcg_extras::uint_x4::__anon1::__anon2
wa	dnn/util/random/pcg_uint128.hpp	/^        UInt wa[4];$/;"	m	union:pcg_extras::uint_x4::__anon1
SpikesList	dnn/util/spikes_list.h	/^struct SpikesList : public SerializableBase {$/;"	s	namespace:dnn
SpikesListInfo	dnn/util/spikes_list.h	/^struct SpikesListInfo : public Serializable<Protos::SpikesListInfo> {$/;"	s	namespace:dnn
SpikesSequence	dnn/util/spikes_list.h	/^struct SpikesSequence : public Serializable<Protos::SpikesSequence> {$/;"	s	namespace:dnn
dnn	dnn/util/spikes_list.h	/^namespace dnn {$/;"	n
getInfo	dnn/util/spikes_list.h	/^	SpikesListInfo getInfo() {$/;"	f	struct:dnn::SpikesList
name	dnn/util/spikes_list.h	/^	const string name() const {$/;"	f	struct:dnn::SpikesList
seq	dnn/util/spikes_list.h	/^	vector<SpikesSequence> seq;$/;"	m	struct:dnn::SpikesList
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesList
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesListInfo
serial_process	dnn/util/spikes_list.h	/^	void serial_process() {$/;"	f	struct:dnn::SpikesSequence
size	dnn/util/spikes_list.h	/^	size_t size;$/;"	m	struct:dnn::SpikesListInfo
ts_info	dnn/util/spikes_list.h	/^	TimeSeriesInfo ts_info;$/;"	m	struct:dnn::SpikesList
vals	dnn/util/spikes_list.h	/^	vector<double> vals;$/;"	m	struct:dnn::SpikesSequence
SpinningBarrier	dnn/util/spinning_barrier.h	/^    SpinningBarrier (unsigned int n) : n_ (n), nwait_ (0), step_(0) {}$/;"	f	class:dnn::SpinningBarrier
SpinningBarrier	dnn/util/spinning_barrier.h	/^class SpinningBarrier$/;"	c	namespace:dnn
dnn	dnn/util/spinning_barrier.h	/^namespace dnn {$/;"	n
n_	dnn/util/spinning_barrier.h	/^    const unsigned int n_;$/;"	m	class:dnn::SpinningBarrier
nwait_	dnn/util/spinning_barrier.h	/^    std::atomic<unsigned int> nwait_;$/;"	m	class:dnn::SpinningBarrier
step_	dnn/util/spinning_barrier.h	/^    std::atomic<unsigned int> step_;$/;"	m	class:dnn::SpinningBarrier
wait	dnn/util/spinning_barrier.h	/^    bool wait ()$/;"	f	class:dnn::SpinningBarrier
Stat	dnn/util/statistics.h	/^	Stat() : low_lim(-1), high_lim(-1), __counter(0) {}$/;"	f	struct:dnn::Stat
Stat	dnn/util/statistics.h	/^struct Stat : public Serializable<Protos::Stat> {$/;"	s	namespace:dnn
Statistics	dnn/util/statistics.h	/^	Statistics() : low_lim(-1), high_lim(-1), _on(false) {$/;"	f	class:dnn::Statistics
Statistics	dnn/util/statistics.h	/^class Statistics : public SerializableBase {$/;"	c	namespace:dnn
StatisticsInfo	dnn/util/statistics.h	/^struct StatisticsInfo : public Serializable<Protos::StatisticsInfo> {$/;"	s	namespace:dnn
__counter	dnn/util/statistics.h	/^	size_t __counter;$/;"	m	struct:dnn::Stat
_on	dnn/util/statistics.h	/^	bool _on;$/;"	m	class:dnn::Statistics
add	dnn/util/statistics.h	/^	inline void add(const string &name, const double &v) {$/;"	f	class:dnn::Statistics
add	dnn/util/statistics.h	/^	void add(const double &s) {$/;"	f	struct:dnn::Stat
dnn	dnn/util/statistics.h	/^namespace dnn {$/;"	n
getInfo	dnn/util/statistics.h	/^	StatisticsInfo getInfo() {$/;"	f	class:dnn::Statistics
high_lim	dnn/util/statistics.h	/^	int high_lim;$/;"	m	class:dnn::Statistics
high_lim	dnn/util/statistics.h	/^	int high_lim;$/;"	m	struct:dnn::Stat
high_lim	dnn/util/statistics.h	/^	size_t high_lim;$/;"	m	struct:dnn::StatisticsInfo
low_lim	dnn/util/statistics.h	/^	int low_lim;$/;"	m	class:dnn::Statistics
low_lim	dnn/util/statistics.h	/^	int low_lim;$/;"	m	struct:dnn::Stat
low_lim	dnn/util/statistics.h	/^	size_t low_lim;$/;"	m	struct:dnn::StatisticsInfo
name	dnn/util/statistics.h	/^	const string name() const {$/;"	f	class:dnn::Statistics
name	dnn/util/statistics.h	/^	string name;$/;"	m	struct:dnn::Stat
on	dnn/util/statistics.h	/^	const bool&	on() {$/;"	f	class:dnn::Statistics
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	class:dnn::Statistics
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	struct:dnn::Stat
serial_process	dnn/util/statistics.h	/^	void serial_process() {$/;"	f	struct:dnn::StatisticsInfo
stat_names	dnn/util/statistics.h	/^	vector<string> stat_names;$/;"	m	struct:dnn::StatisticsInfo
stats	dnn/util/statistics.h	/^	map<string, Stat> stats;$/;"	m	class:dnn::Statistics
turnOn	dnn/util/statistics.h	/^	void turnOn() {$/;"	f	class:dnn::Statistics
vals	dnn/util/statistics.h	/^	vector<double> vals;$/;"	m	struct:dnn::Stat
dnn	dnn/util/time_series.cpp	/^namespace dnn {$/;"	n	file:
TimeSeries	dnn/util/time_series.h	/^	TimeSeries() {}$/;"	f	struct:dnn::TimeSeries
TimeSeries	dnn/util/time_series.h	/^	TimeSeries(const string &filename, const string &format) {$/;"	f	struct:dnn::TimeSeries
TimeSeries	dnn/util/time_series.h	/^struct TimeSeries : public SerializableBase {$/;"	s	namespace:dnn
TimeSeriesData	dnn/util/time_series.h	/^struct TimeSeriesData : public Serializable<Protos::TimeSeriesData> {$/;"	s	namespace:dnn
TimeSeriesInfo	dnn/util/time_series.h	/^struct TimeSeriesInfo : public Serializable<Protos::TimeSeriesInfo> {$/;"	s	namespace:dnn
TimeSeriesInterface	dnn/util/time_series.h	/^struct TimeSeriesInterface {$/;"	s	namespace:dnn
addLabelAtPos	dnn/util/time_series.h	/^	void addLabelAtPos(const string &lab, size_t pos) {$/;"	f	struct:dnn::TimeSeriesInfo
convertUcrTimeSeriesLine	dnn/util/time_series.h	/^	static void convertUcrTimeSeriesLine(const string &line, vector<double> &ts_data, string &lab) {$/;"	f	struct:dnn::TimeSeries
data	dnn/util/time_series.h	/^	TimeSeriesData data;$/;"	m	struct:dnn::TimeSeries
dnn	dnn/util/time_series.h	/^namespace dnn {$/;"	n
getValueAt	dnn/util/time_series.h	/^	const double& getValueAt(const size_t &index) {$/;"	f	struct:dnn::TimeSeries
getValueAt	dnn/util/time_series.h	/^	getValueAtIndexDelegate getValueAt;$/;"	m	struct:dnn::TimeSeriesInterface
getValueAtDefault	dnn/util/time_series.h	/^	static const double& getValueAtDefault(const size_t &index) {$/;"	f	struct:dnn::TimeSeries
info	dnn/util/time_series.h	/^	TimeSeriesInfo info;$/;"	m	struct:dnn::TimeSeries
interface	dnn/util/time_series.h	/^	typedef TimeSeriesInterface interface;$/;"	t	struct:dnn::TimeSeries
labels_ids	dnn/util/time_series.h	/^	vector<size_t> labels_ids;$/;"	m	struct:dnn::TimeSeriesInfo
labels_timeline	dnn/util/time_series.h	/^	vector<size_t> labels_timeline;$/;"	m	struct:dnn::TimeSeriesInfo
length	dnn/util/time_series.h	/^	size_t length() {$/;"	f	struct:dnn::TimeSeries
name	dnn/util/time_series.h	/^	const string name() const {$/;"	f	struct:dnn::TimeSeries
provideDefaultInterface	dnn/util/time_series.h	/^	static void provideDefaultInterface(TimeSeriesInterface &i) {$/;"	f	struct:dnn::TimeSeries
provideInterface	dnn/util/time_series.h	/^	virtual void provideInterface(TimeSeriesInterface &i) {$/;"	f	struct:dnn::TimeSeries
readFromFile	dnn/util/time_series.h	/^	void readFromFile(const string &filename, const string &format) {$/;"	f	struct:dnn::TimeSeries
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeries
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesData
serial_process	dnn/util/time_series.h	/^	void serial_process() {$/;"	f	struct:dnn::TimeSeriesInfo
unique_labels	dnn/util/time_series.h	/^	vector<string> unique_labels;$/;"	m	struct:dnn::TimeSeriesInfo
vals	dnn/util/time_series.h	/^	vector<double> vals;$/;"	m	struct:dnn::TimeSeriesData
dispatchOnThreads	dnn/util/util.cpp	/^vector<IndexSlice> dispatchOnThreads(size_t elements_size, size_t jobs) {$/;"	f	namespace:dnn
dnn	dnn/util/util.cpp	/^namespace dnn {$/;"	n	file:
getExp	dnn/util/util.cpp	/^double getExp(double rate) {$/;"	f	namespace:dnn
getFileSize	dnn/util/util.cpp	/^long getFileSize(string filename) {$/;"	f	namespace:dnn
getLogNorm	dnn/util/util.cpp	/^double getLogNorm(double logmean, double logsd) {$/;"	f	namespace:dnn
getNorm	dnn/util/util.cpp	/^double getNorm() {$/;"	f	namespace:dnn
getUnif	dnn/util/util.cpp	/^double getUnif() {$/;"	f	namespace:dnn
getUnifBetween	dnn/util/util.cpp	/^double getUnifBetween(double low, double high) {$/;"	f	namespace:dnn
normal_distr_var	dnn/util/util.cpp	/^double normal_distr_var = -1;$/;"	m	namespace:dnn	file:
parseArgOptionsPairs	dnn/util/util.cpp	/^map<string, string> parseArgOptionsPairs(const vector<string> &opts) {$/;"	f	namespace:dnn
parseParenthesis	dnn/util/util.cpp	/^vector<double> parseParenthesis(const string &s) {$/;"	f	namespace:dnn
replaceAll	dnn/util/util.cpp	/^void replaceAll( string &s, const string &search, const string &replace ) {$/;"	f	namespace:dnn
sampleDelay	dnn/util/util.cpp	/^double sampleDelay(double gain, double rate) {$/;"	f	namespace:dnn
split	dnn/util/util.cpp	/^vector<string> split(const string &s, char delim) {$/;"	f	namespace:dnn
splitBySubstr	dnn/util/util.cpp	/^vector<string> splitBySubstr(const string &s_inp, const string &delimiter) {$/;"	f	namespace:dnn
split_into	dnn/util/util.cpp	/^vector<string> split_into(const string &s, char delim, vector<string> &elems) {$/;"	f	namespace:dnn
strStartsWith	dnn/util/util.cpp	/^bool strStartsWith(const string &s, const string &prefix) {$/;"	f	namespace:dnn
strip_comments	dnn/util/util.cpp	/^string strip_comments(const string& input, const string& delimiters)$/;"	f	namespace:dnn
strip_white	dnn/util/util.cpp	/^string strip_white(const string& input)$/;"	f	namespace:dnn
swapInd	dnn/util/util.cpp	/^void swapInd(size_t *l, size_t *r) {$/;"	f	namespace:dnn
trim	dnn/util/util.cpp	/^void trim(string &str) {$/;"	f	namespace:dnn
trimC	dnn/util/util.cpp	/^string trimC(const string &str) {$/;"	f	namespace:dnn
IndexSlice	dnn/util/util.h	/^    IndexSlice(size_t _from, size_t _to) : from(_from), to(_to) {}$/;"	f	struct:dnn::IndexSlice
IndexSlice	dnn/util/util.h	/^struct IndexSlice {$/;"	s	namespace:dnn
PI	dnn/util/util.h	20;"	d
TRY	dnn/util/util.h	44;"	d
dnn	dnn/util/util.h	/^namespace dnn {$/;"	n
from	dnn/util/util.h	/^    size_t from;$/;"	m	struct:dnn::IndexSlice
to	dnn/util/util.h	/^    size_t to;$/;"	m	struct:dnn::IndexSlice
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
DnnSimOpts	tools/dnn_sim/dnn_sim.cpp	/^    DnnSimOpts() : jobs(1), precalc(false), Tmax(0.0) {}$/;"	f	struct:DnnSimOpts
DnnSimOpts	tools/dnn_sim/dnn_sim.cpp	/^struct DnnSimOpts {$/;"	s	file:
Tmax	tools/dnn_sim/dnn_sim.cpp	/^    double Tmax;$/;"	m	struct:DnnSimOpts	file:
add_opts	tools/dnn_sim/dnn_sim.cpp	/^    dnn::OptMods add_opts;$/;"	m	struct:DnnSimOpts	file:
const_file	tools/dnn_sim/dnn_sim.cpp	/^    string const_file;$/;"	m	struct:DnnSimOpts	file:
input	tools/dnn_sim/dnn_sim.cpp	/^    string input;$/;"	m	struct:DnnSimOpts	file:
jobs	tools/dnn_sim/dnn_sim.cpp	/^    int jobs;$/;"	m	struct:DnnSimOpts	file:
main	tools/dnn_sim/dnn_sim.cpp	/^int main(int argc, char **argv) {$/;"	f
model_load	tools/dnn_sim/dnn_sim.cpp	/^    string model_load;$/;"	m	struct:DnnSimOpts	file:
model_save	tools/dnn_sim/dnn_sim.cpp	/^    string model_save;$/;"	m	struct:DnnSimOpts	file:
no_learning	tools/dnn_sim/dnn_sim.cpp	/^    bool no_learning;$/;"	m	struct:DnnSimOpts	file:
out_p_stat_file	tools/dnn_sim/dnn_sim.cpp	/^    string out_p_stat_file;$/;"	m	struct:DnnSimOpts	file:
out_spikes	tools/dnn_sim/dnn_sim.cpp	/^    string out_spikes;$/;"	m	struct:DnnSimOpts	file:
out_stat_file	tools/dnn_sim/dnn_sim.cpp	/^    string out_stat_file;$/;"	m	struct:DnnSimOpts	file:
precalc	tools/dnn_sim/dnn_sim.cpp	/^    bool precalc;$/;"	m	struct:DnnSimOpts	file:
usage	tools/dnn_sim/dnn_sim.cpp	/^const char * usage = R"USAGE($/;"	v
main	tools/dumptool/dumptool.cpp	/^int main(int argc, char **argv) {$/;"	f
usage	tools/dumptool/dumptool.cpp	/^const char * usage = R"USAGE($/;"	v
